SET(OVERVIEW_CONFIGURED_PLUGINS )

# configure_plugin
MACRO(configure_plugin PLUGIN)
  LIST(APPEND OVERVIEW_CONFIGURED_PLUGINS ${PLUGIN})
ENDMACRO(configure_plugin)

# require_plugin
MACRO(require_plugin PLUGIN)
  SET(PARAVIEW_BUILD_PLUGIN_${PLUGIN} ON CACHE BOOL "Build ${PLUGIN}" FORCE)
  configure_plugin(${PLUGIN})
ENDMACRO(require_plugin)

# allow_plugin
MACRO(allow_plugin PLUGIN)
  IF(PARAVIEW_BUILD_PLUGIN_${PLUGIN})
    configure_plugin(${PLUGIN})
  ENDIF(PARAVIEW_BUILD_PLUGIN_${PLUGIN})
ENDMACRO(allow_plugin)

# build_overview
MACRO(build_overview)
  SET(OVERVIEW_BRANDED_VERSION "${OVERVIEW_BRANDED_VERSION_MAJOR}.${OVERVIEW_BRANDED_VERSION_MINOR}.${OVERVIEW_BRANDED_VERSION_PATCH}")
  SET(OVERVIEW_BRANDED_VERSION_FULL "${OVERVIEW_BRANDED_VERSION} ${OVERVIEW_BRANDED_VERSION_TYPE}")

  SET(MAIN_CXX "${CMAKE_CURRENT_BINARY_DIR}/main.cxx")
  FILE(WRITE ${MAIN_CXX} "")
  FILE(APPEND ${MAIN_CXX} "#include <OverView.h>\n")
  FILE(APPEND ${MAIN_CXX} "\n")
  FILE(APPEND ${MAIN_CXX} "int main(int argc, char* argv[])\n")
  FILE(APPEND ${MAIN_CXX} "{\n")
  FILE(APPEND ${MAIN_CXX} "  QStringList configured_plugins;\n")
  FOREACH(PLUGIN ${OVERVIEW_CONFIGURED_PLUGINS})
    IF(WIN32)
      FILE(APPEND ${MAIN_CXX} "  configured_plugins << \"${PLUGIN}Plugin.dll\";\n")
    ENDIF(WIN32)
   
    IF(UNIX AND NOT APPLE)
      FILE(APPEND ${MAIN_CXX} "  configured_plugins << \"lib${PLUGIN}Plugin.so\";\n")
    ENDIF(UNIX AND NOT APPLE)
   
    IF(APPLE)
      FILE(APPEND ${MAIN_CXX} "  configured_plugins << \"lib${PLUGIN}Plugin.dylib\";\n")
    ENDIF(APPLE)
  ENDFOREACH(PLUGIN)
  FILE(APPEND ${MAIN_CXX} "\n")
  FILE(APPEND ${MAIN_CXX} "  return OverView::main(argc, argv,\n")
  FILE(APPEND ${MAIN_CXX} "    configured_plugins,\n")
  FILE(APPEND ${MAIN_CXX} "    \"${OVERVIEW_BRANDED_APPLICATION_TITLE}\",\n")
  FILE(APPEND ${MAIN_CXX} "    \"${OVERVIEW_BRANDED_SPLASH_TEXT_COLOR}\",\n")
  FILE(APPEND ${MAIN_CXX} "    \"${OVERVIEW_BRANDED_VERSION}\",\n")
  FILE(APPEND ${MAIN_CXX} "    \"${OVERVIEW_BRANDED_VERSION_FULL}\",\n")
  FILE(APPEND ${MAIN_CXX} "    \"\",\n")
  FILE(APPEND ${MAIN_CXX} "    false\n")
  FILE(APPEND ${MAIN_CXX} "    );\n")
  FILE(APPEND ${MAIN_CXX} "}\n")

  INCLUDE_DIRECTORIES(
    ${OverViewCore_SOURCE_DIR}
    )

  ADD_EXECUTABLE(${OVERVIEW_BRANDED_APPLICATION_TITLE} WIN32 MACOSX_BUNDLE
    ${MAIN_CXX}
    ${MOC_BUILT_SOURCES}
    ${RCS_SOURCES}
    ${UI_BUILT_SOURCES}
    ${EXE_ICON}
    )
   
  TARGET_LINK_LIBRARIES(${OVERVIEW_BRANDED_APPLICATION_TITLE}
    OverViewCore
    )


  # On the Mac only, we have to create a symlink to each configured plugin from the bundle directory,
  # so they can be located at startup ...
  IF(APPLE)
    SET(BUNDLE_PATH "${EXECUTABLE_OUTPUT_PATH}/${OVERVIEW_BRANDED_APPLICATION_TITLE}.app/Contents/MacOS")
    FILE(MAKE_DIRECTORY "${BUNDLE_PATH}")
    FOREACH(PLUGIN ${OVERVIEW_CONFIGURED_PLUGINS})
      EXECUTE_PROCESS(COMMAND ln -sf "${EXECUTABLE_OUTPUT_PATH}/lib${PLUGIN}Plugin.dylib" "${BUNDLE_PATH}/lib${PLUGIN}Plugin.dylib")
    ENDFOREACH()
  ENDIF(APPLE)

ENDMACRO(build_overview)

#MACRO(FOO)
#  IF(WIN32)
#    CONFIGURE_FILE(${OVERVIEW_BRANDED_APPLICATION_ICON} ${CMAKE_CURRENT_BINARY_DIR}/Icon.ico COPYONLY)
#  ENDIF(WIN32)

#  SET(QT_USE_QTASSISTANT TRUE)
#  SET(QT_USE_QTNETWORK TRUE) # QtAssistant depends on it (only for linking)
#  SET(QT_USE_QTSQL TRUE)
#  SET(QT_USE_QTUITOOLS TRUE)
#  INCLUDE(${QT_USE_FILE})

#  IF(NOT BUILD_SHARED_LIBS)
#    MESSAGE(SEND_ERROR "PARAVIEW_BUILD_OverView requires BUILD_SHARED_LIBS")
#  ENDIF(NOT BUILD_SHARED_LIBS)

#  CONFIGURE_FILE(${CMAKE_CURRENT_SOURCE_DIR}/Icon.rc.in ${CMAKE_CURRENT_BINARY_DIR}/Icon.rc)
#  CONFIGURE_FILE(${CMAKE_CURRENT_SOURCE_DIR}/SplashScreen.qrc.in ${CMAKE_CURRENT_BINARY_DIR}/SplashScreen.qrc)
#  CONFIGURE_FILE(${OVERVIEW_BRANDED_SPLASH_IMAGE} ${CMAKE_CURRENT_BINARY_DIR}/SplashScreen COPYONLY)
#

#  SET(UI_RESOURCES
#    ${CMAKE_CURRENT_BINARY_DIR}/SplashScreen.qrc
#  )

#  QT4_ADD_RESOURCES(RCS_SOURCES
#    ${UI_RESOURCES}
#  )

#  IF(WIN32)
#    SET(EXE_ICON ${CMAKE_CURRENT_BINARY_DIR}/Icon.rc)
#  ENDIF(WIN32)

#  SOURCE_GROUP("Resources" FILES
#    ${UI_RESOURCES}
#    ${UI_FORMS}
#    ${EXE_ICON}
#  )

#  SOURCE_GROUP("Generated" FILES
#    ${MOC_BUILT_SOURCES}
#    ${RCS_SOURCES}
#    ${UI_BUILT_SOURCES}
#  )

#  IF(WIN32)
#    LINK_DIRECTORIES(${QT_LIBRARY_DIR})
#  ENDIF(WIN32)

#  IF(WIN32)
#    TARGET_LINK_LIBRARIES(${OVERVIEW_BRANDED_APPLICATION_TITLE} ${QT_QTMAIN_LIBRARY} )
#  ENDIF(WIN32)
#ENDMACRO(FOO)

