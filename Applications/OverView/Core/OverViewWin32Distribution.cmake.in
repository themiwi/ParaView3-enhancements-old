# Install MSVC runtimes required by OverView ...
IF(MSVC71)
  INSTALL(PROGRAMS
    "c:/windows/system32/msvcp71.dll"
    "c:/windows/system32/msvcr71.dll"
    DESTINATION bin
    COMPONENT ${OVERVIEW_BRANDED_APPLICATION_TITLE}
    )
ENDIF(MSVC71)

IF(MSVC80 OR MSVC90)
  IF(MSVC80)
    SET(MSVC_VERSION_NUMBER 8)
  ELSE(MSVC80)
    SET(MSVC_VERSION_NUMBER 9)
  ENDIF(MSVC80)
  
  IF(CMAKE_CL_64)
    SET(CMAKE_MSVC_ARCH amd64)
  ELSE(CMAKE_CL_64)
    SET(CMAKE_MSVC_ARCH x86)
  ENDIF(CMAKE_CL_64)

  # Find the runtime library redistribution directory.
  FIND_PATH(MSVC${MSVC_VERSION_NUMBER}0_REDIST_DIR NAMES ${CMAKE_MSVC_ARCH}/Microsoft.VC${MSVC_VERSION_NUMBER}0.CRT/Microsoft.VC${MSVC_VERSION_NUMBER}0.CRT.manifest
    PATHS "[HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\VisualStudio\\${MSVC_VERSION_NUMBER}.0;InstallDir]/../../VC/redist"
    )
  MARK_AS_ADVANCED(MSVC${MSVC_VERSION_NUMBER}0_REDIST_DIR)
  SET(MSVC${MSVC_VERSION_NUMBER}0_CRT_DIR "${MSVC${MSVC_VERSION_NUMBER}0_REDIST_DIR}/${CMAKE_MSVC_ARCH}/Microsoft.VC${MSVC_VERSION_NUMBER}0.CRT")
  SET(MSVC${MSVC_VERSION_NUMBER}0_DEBUG_CRT_DIR "${MSVC${MSVC_VERSION_NUMBER}0_REDIST_DIR}/Debug_NonRedist/${CMAKE_MSVC_ARCH}/Microsoft.VC${MSVC_VERSION_NUMBER}0.DebugCRT")

  # Install the manifest that allows DLLs to be loaded from the
  # directory containing the executable.
  INSTALL(PROGRAMS
    "${MSVC${MSVC_VERSION_NUMBER}0_DEBUG_CRT_DIR}/Microsoft.VC${MSVC_VERSION_NUMBER}0.DebugCRT.manifest"
    "${MSVC${MSVC_VERSION_NUMBER}0_DEBUG_CRT_DIR}/msvcm${MSVC_VERSION_NUMBER}0d.dll"
    "${MSVC${MSVC_VERSION_NUMBER}0_DEBUG_CRT_DIR}/msvcp${MSVC_VERSION_NUMBER}0d.dll"
    "${MSVC${MSVC_VERSION_NUMBER}0_DEBUG_CRT_DIR}/msvcr${MSVC_VERSION_NUMBER}0d.dll"
    "${MSVC${MSVC_VERSION_NUMBER}0_CRT_DIR}/Microsoft.VC${MSVC_VERSION_NUMBER}0.CRT.manifest"
    "${MSVC${MSVC_VERSION_NUMBER}0_CRT_DIR}/msvcm${MSVC_VERSION_NUMBER}0.dll"
    "${MSVC${MSVC_VERSION_NUMBER}0_CRT_DIR}/msvcp${MSVC_VERSION_NUMBER}0.dll"
    "${MSVC${MSVC_VERSION_NUMBER}0_CRT_DIR}/msvcr${MSVC_VERSION_NUMBER}0.dll"
    DESTINATION bin
    COMPONENT ${OVERVIEW_BRANDED_APPLICATION_TITLE}
    CONFIGURATIONS Debug
    )

  INSTALL(PROGRAMS
    "${MSVC${MSVC_VERSION_NUMBER}0_CRT_DIR}/Microsoft.VC${MSVC_VERSION_NUMBER}0.CRT.manifest"
    "${MSVC${MSVC_VERSION_NUMBER}0_CRT_DIR}/msvcm${MSVC_VERSION_NUMBER}0.dll"
    "${MSVC${MSVC_VERSION_NUMBER}0_CRT_DIR}/msvcp${MSVC_VERSION_NUMBER}0.dll"
    "${MSVC${MSVC_VERSION_NUMBER}0_CRT_DIR}/msvcr${MSVC_VERSION_NUMBER}0.dll"
    DESTINATION bin
    COMPONENT ${OVERVIEW_BRANDED_APPLICATION_TITLE}
    CONFIGURATIONS Release
    )

ENDIF(MSVC80 OR MSVC90)

# Prepare to automatically install binary dependencies ...
SET(OVERVIEW_DEBUG_BINARY_LOCATIONS )
SET(OVERVIEW_RELEASE_BINARY_LOCATIONS )

# Install the branded OverView binaries ...
INSTALL(
  PROGRAMS "${EXECUTABLE_OUTPUT_PATH}/debug/${OVERVIEW_BRANDED_APPLICATION_TITLE}.exe"
  DESTINATION bin
  COMPONENT ${OVERVIEW_BRANDED_APPLICATION_TITLE}
  CONFIGURATIONS Debug
  )

LIST(APPEND OVERVIEW_DEBUG_BINARY_LOCATIONS "${EXECUTABLE_OUTPUT_PATH}/debug/${OVERVIEW_BRANDED_APPLICATION_TITLE}.exe")

INSTALL(
  PROGRAMS "${EXECUTABLE_OUTPUT_PATH}/release/${OVERVIEW_BRANDED_APPLICATION_TITLE}.exe"
  DESTINATION bin
  COMPONENT ${OVERVIEW_BRANDED_APPLICATION_TITLE}
  CONFIGURATIONS Release
  )

LIST(APPEND OVERVIEW_RELEASE_BINARY_LOCATIONS "${EXECUTABLE_OUTPUT_PATH}/release/${OVERVIEW_BRANDED_APPLICATION_TITLE}.exe")

# Install required brand plugins ...
LIST(LENGTH OVERVIEW_STARTUP_PLUGIN_FILES PLUGIN_COUNT)

SET(PLUGIN 0)
WHILE(PLUGIN LESS ${PLUGIN_COUNT})
  
  LIST(GET OVERVIEW_STARTUP_PLUGIN_FILES ${PLUGIN} PLUGIN_FILE)
  LIST(GET OVERVIEW_STARTUP_PLUGIN_DIRECTORIES ${PLUGIN} PLUGIN_DIRECTORY)

  INSTALL(PROGRAMS
    "${PLUGIN_DIRECTORY}/debug/${PLUGIN_FILE}"
    DESTINATION bin/${OVERVIEW_BRANDED_APPLICATION_TITLE}-startup
    COMPONENT ${OVERVIEW_BRANDED_APPLICATION_TITLE}
    CONFIGURATIONS Debug
    )

  LIST(APPEND OVERVIEW_DEBUG_BINARY_LOCATIONS "${PLUGIN_DIRECTORY}/debug/${PLUGIN_FILE}")

  INSTALL(PROGRAMS
    "${PLUGIN_DIRECTORY}/release/${PLUGIN_FILE}"
    DESTINATION bin/${OVERVIEW_BRANDED_APPLICATION_TITLE}-startup
    COMPONENT ${OVERVIEW_BRANDED_APPLICATION_TITLE}
    CONFIGURATIONS Release
    )

  LIST(APPEND OVERVIEW_RELEASE_BINARY_LOCATIONS "${PLUGIN_DIRECTORY}/release/${PLUGIN_FILE}")

  MATH(EXPR PLUGIN "${PLUGIN} + 1")

ENDWHILE()

# Install library dependencies ...
CONFIGURE_FILE( "@OverViewCore_SOURCE_DIR@/OverViewWin32Dependencies.cmake.in" "${CMAKE_CURRENT_BINARY_DIR}/OverViewWin32Dependencies.cmake" @ONLY)
INSTALL(SCRIPT "${CMAKE_CURRENT_BINARY_DIR}/OverViewWin32Dependencies.cmake" COMPONENT ${OVERVIEW_BRANDED_APPLICATION_TITLE})

# Install Qt plugins that can't be identified by automatic dependency generation ...
INSTALL(
  DIRECTORY
    "@QT_PLUGINS_DIR@/codecs"
    "@QT_PLUGINS_DIR@/imageformats"
    "@QT_PLUGINS_DIR@/sqldrivers"
  DESTINATION bin
  COMPONENT ${OVERVIEW_BRANDED_APPLICATION_TITLE}
  )

# Add some custom targets that install just the brand ...
ADD_CUSTOM_TARGET(Install-${OVERVIEW_BRANDED_APPLICATION_TITLE}-Debug
  ${CMAKE_COMMAND}
  -D "BUILD_TYPE=Debug" 
  -D "CMAKE_INSTALL_COMPONENT=${OVERVIEW_BRANDED_APPLICATION_TITLE}"
  -D "CMAKE_INSTALL_PREFIX=${CMAKE_INSTALL_PREFIX}/${OVERVIEW_BRANDED_APPLICATION_TITLE}-Debug"
  -P "${CMAKE_CURRENT_BINARY_DIR}/cmake_install.cmake"
  )

ADD_CUSTOM_TARGET(Install-${OVERVIEW_BRANDED_APPLICATION_TITLE}-Release
  ${CMAKE_COMMAND}
  -D "BUILD_TYPE=Release" 
  -D "CMAKE_INSTALL_COMPONENT=${OVERVIEW_BRANDED_APPLICATION_TITLE}"
  -D "CMAKE_INSTALL_PREFIX=${CMAKE_INSTALL_PREFIX}/${OVERVIEW_BRANDED_APPLICATION_TITLE}-Release"
  -P "${CMAKE_CURRENT_BINARY_DIR}/cmake_install.cmake"
  )

# Add some custom targets that package just the brand ...
ADD_CUSTOM_TARGET(Package-${OVERVIEW_BRANDED_APPLICATION_TITLE}-Debug
  ${CMAKE_CPACK_COMMAND}
  -G NSIS
  -C Debug
  -D "CPACK_CMAKE_GENERATOR=@CMAKE_GENERATOR@"
  -D "CPACK_INSTALL_CMAKE_PROJECTS=${CMAKE_CURRENT_BINARY_DIR};${OVERVIEW_BRANDED_APPLICATION_TITLE};${OVERVIEW_BRANDED_APPLICATION_TITLE};/"
  -D "CPACK_NSIS_MUI_ICON=${OverView_SOURCE_DIR}\\Icon.ico"
  -D "CPACK_PACKAGE_DESCRIPTION=OverView general-purpose informatics client"
  -D "CPACK_PACKAGE_EXECUTABLES=${OVERVIEW_BRANDED_APPLICATION_TITLE};${OVERVIEW_BRANDED_APPLICATION_TITLE} ${OVERVIEW_BRANDED_VERSION} (Debug)"
  -D "CPACK_PACKAGE_FILE_NAME=${OVERVIEW_BRANDED_APPLICATION_TITLE}-Setup-${OVERVIEW_BRANDED_VERSION}-Debug"
  -D "CPACK_PACKAGE_INSTALL_DIRECTORY=${OVERVIEW_BRANDED_APPLICATION_TITLE} ${OVERVIEW_BRANDED_VERSION} Debug"
  -D "CPACK_PACKAGE_INSTALL_REGISTRY_KEY=${OVERVIEW_BRANDED_APPLICATION_TITLE} ${OVERVIEW_BRANDED_VERSION} Debug"
  -D "CPACK_PACKAGE_NAME=${OVERVIEW_BRANDED_APPLICATION_TITLE} ${OVERVIEW_BRANDED_VERSION} (Debug)"
  -D "CPACK_PACKAGE_VENDOR=Sandia National Laboratories"
  -D "CPACK_PACKAGE_VERSION=${OVERVIEW_BRANDED_VERSION}"
  -D "CPACK_PACKAGE_VERSION_MAJOR=${OVERVIEW_BRANDED_VERSION_MAJOR}"
  -D "CPACK_PACKAGE_VERSION_MINOR=${OVERVIEW_BRANDED_VERSION_MINOR}"
  -D "CPACK_PACKAGE_VERSION_PATCH=${OVERVIEW_BRANDED_VERSION_PATCH}"
  -D "CPACK_RESOURCE_FILE_LICENSE=@OverViewCore_SOURCE_DIR@/COPYING"
  )

ADD_CUSTOM_TARGET(Package-${OVERVIEW_BRANDED_APPLICATION_TITLE}-Release
  ${CMAKE_CPACK_COMMAND}
  -G NSIS
  -C Release
  -D "CPACK_CMAKE_GENERATOR=@CMAKE_GENERATOR@"
  -D "CPACK_INSTALL_CMAKE_PROJECTS=${CMAKE_CURRENT_BINARY_DIR};${OVERVIEW_BRANDED_APPLICATION_TITLE};${OVERVIEW_BRANDED_APPLICATION_TITLE};/"
  -D "CPACK_NSIS_MUI_ICON=${OverView_SOURCE_DIR}\\Icon.ico"
  -D "CPACK_PACKAGE_DESCRIPTION=OverView general-purpose informatics client"
  -D "CPACK_PACKAGE_EXECUTABLES=${OVERVIEW_BRANDED_APPLICATION_TITLE};${OVERVIEW_BRANDED_APPLICATION_TITLE} ${OVERVIEW_BRANDED_VERSION}"
  -D "CPACK_PACKAGE_FILE_NAME=${OVERVIEW_BRANDED_APPLICATION_TITLE}-Setup-${OVERVIEW_BRANDED_VERSION}"
  -D "CPACK_PACKAGE_INSTALL_DIRECTORY=${OVERVIEW_BRANDED_APPLICATION_TITLE} ${OVERVIEW_BRANDED_VERSION}"
  -D "CPACK_PACKAGE_INSTALL_REGISTRY_KEY=${OVERVIEW_BRANDED_APPLICATION_TITLE} ${OVERVIEW_BRANDED_VERSION}"
  -D "CPACK_PACKAGE_NAME=${OVERVIEW_BRANDED_APPLICATION_TITLE} ${OVERVIEW_BRANDED_VERSION}"
  -D "CPACK_PACKAGE_VENDOR=Sandia National Laboratories"
  -D "CPACK_PACKAGE_VERSION=${OVERVIEW_BRANDED_VERSION}"
  -D "CPACK_PACKAGE_VERSION_MAJOR=${OVERVIEW_BRANDED_VERSION_MAJOR}"
  -D "CPACK_PACKAGE_VERSION_MINOR=${OVERVIEW_BRANDED_VERSION_MINOR}"
  -D "CPACK_PACKAGE_VERSION_PATCH=${OVERVIEW_BRANDED_VERSION_PATCH}"
  -D "CPACK_RESOURCE_FILE_LICENSE=@OverViewCore_SOURCE_DIR@/COPYING"
  )
