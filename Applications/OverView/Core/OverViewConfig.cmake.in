# Setup some paths that plugins and clients will find useful
SET(OverViewCore_SOURCE_DIR "@OverViewCore_SOURCE_DIR@")
SET(OverViewCore_BINARY_DIR "@OverViewCore_BINARY_DIR@")

SET(OVERVIEW_STARTUP_PLUGIN_FILES )
SET(OVERVIEW_STARTUP_PLUGIN_DIRECTORIES )

# add_brand_specific_plugin
MACRO(add_brand_specific_plugin PLUGIN_NAME)
  IF(${ARGC} EQUAL 2)
    SET(PLUGIN_DIRECTORY ${ARGV1})
  ELSE()
    SET(PLUGIN_DIRECTORY ${EXECUTABLE_OUTPUT_PATH})
  ENDIF()

  IF(WIN32)
    LIST(APPEND OVERVIEW_STARTUP_PLUGIN_FILES "${PLUGIN_NAME}Plugin.dll")
  ELSEIF(UNIX AND NOT APPLE)
    LIST(APPEND OVERVIEW_STARTUP_PLUGIN_FILES "lib${PLUGIN_NAME}Plugin.so")
  ELSEIF(APPLE)
    LIST(APPEND OVERVIEW_STARTUP_PLUGIN_FILES "lib${PLUGIN_NAME}Plugin.dylib")
  ENDIF()

  LIST(APPEND OVERVIEW_STARTUP_PLUGIN_DIRECTORIES ${PLUGIN_DIRECTORY})
ENDMACRO(add_brand_specific_plugin)

# require_plugin
MACRO(require_plugin PLUGIN)
  SET(PARAVIEW_BUILD_PLUGIN_${PLUGIN} ON CACHE BOOL "Build ${PLUGIN}" FORCE)
  add_brand_specific_plugin(${PLUGIN} ${EXECUTABLE_OUTPUT_PATH})
ENDMACRO(require_plugin)

# allow_plugin
MACRO(allow_plugin PLUGIN)
  IF(PARAVIEW_BUILD_PLUGIN_${PLUGIN})
    add_brand_specific_plugin(${PLUGIN} ${EXECUTABLE_OUTPUT_PATH})
  ENDIF(PARAVIEW_BUILD_PLUGIN_${PLUGIN})
ENDMACRO(allow_plugin)

# overview_build_client
MACRO(overview_build_client)
  SET(OVERVIEW_BRANDED_VERSION "${OVERVIEW_BRANDED_VERSION_MAJOR}.${OVERVIEW_BRANDED_VERSION_MINOR}.${OVERVIEW_BRANDED_VERSION_PATCH}")
  SET(OVERVIEW_BRANDED_VERSION_FULL "${OVERVIEW_BRANDED_VERSION} ${OVERVIEW_BRANDED_VERSION_TYPE}")

  SET(MAIN_CXX "${CMAKE_CURRENT_BINARY_DIR}/main.cxx")
  FILE(WRITE ${MAIN_CXX} "")
  FILE(APPEND ${MAIN_CXX} "#include <OverView.h>\n")
  FILE(APPEND ${MAIN_CXX} "\n")
  FILE(APPEND ${MAIN_CXX} "int main(int argc, char* argv[])\n")
  FILE(APPEND ${MAIN_CXX} "{\n")
  FILE(APPEND ${MAIN_CXX} "  QStringList configured_plugins;\n")
  FOREACH(PLUGIN_FILE ${OVERVIEW_STARTUP_PLUGIN_FILES})
    FILE(APPEND ${MAIN_CXX} "  configured_plugins << \"${PLUGIN_FILE}\";\n")
  ENDFOREACH()
  FILE(APPEND ${MAIN_CXX} "\n")
  FILE(APPEND ${MAIN_CXX} "  return OverView::main(argc, argv,\n")
  FILE(APPEND ${MAIN_CXX} "    \"${OVERVIEW_BRANDED_WINDOW_TYPE}\",\n")
  FILE(APPEND ${MAIN_CXX} "    configured_plugins,\n")
  FILE(APPEND ${MAIN_CXX} "    \"${OVERVIEW_BRANDED_APPLICATION_TITLE}\",\n")
  FILE(APPEND ${MAIN_CXX} "    \"${OVERVIEW_BRANDED_SPLASH_TEXT_COLOR}\",\n")
  FILE(APPEND ${MAIN_CXX} "    \"${OVERVIEW_BRANDED_VERSION}\",\n")
  FILE(APPEND ${MAIN_CXX} "    \"${OVERVIEW_BRANDED_VERSION_FULL}\"\n")
  FILE(APPEND ${MAIN_CXX} "    );\n")
  FILE(APPEND ${MAIN_CXX} "}\n")

  IF(OVERVIEW_BRANDED_SPLASH_IMAGE)
    CONFIGURE_FILE("@OverViewCore_SOURCE_DIR@/SplashScreen.qrc.in" "${CMAKE_CURRENT_BINARY_DIR}/SplashScreen.qrc" @ONLY)
    CONFIGURE_FILE("${OVERVIEW_BRANDED_SPLASH_IMAGE}" "${CMAKE_CURRENT_BINARY_DIR}/SplashScreen" COPYONLY)
    SET(UI_RESOURCES
      "${CMAKE_CURRENT_BINARY_DIR}/SplashScreen.qrc"
      )

    QT4_ADD_RESOURCES(RCS_SOURCES
      ${UI_RESOURCES}
      )
  ENDIF()

  IF(WIN32 AND OVERVIEW_BRANDED_APPLICATION_ICON)
    CONFIGURE_FILE("@OverViewCore_SOURCE_DIR@/Icon.rc.in" "${CMAKE_CURRENT_BINARY_DIR}/Icon.rc" @ONLY)
    SET(EXE_ICON "${CMAKE_CURRENT_BINARY_DIR}/Icon.rc")
  ENDIF()

  INCLUDE_DIRECTORIES(
    "@OverViewCore_SOURCE_DIR@"
    "@OverViewCore_BINARY_DIR@"
    )

  SOURCE_GROUP("Resources" FILES
    ${UI_RESOURCES}
    ${EXE_ICON}
    )

  SOURCE_GROUP("Generated" FILES
    ${RCS_SOURCES}
    )

  ADD_EXECUTABLE(${OVERVIEW_BRANDED_APPLICATION_TITLE} WIN32 MACOSX_BUNDLE
    ${MAIN_CXX}
    ${RCS_SOURCES}
    ${EXE_ICON}
    )

  SET(BUNDLE_DIRECTORY "${EXECUTABLE_OUTPUT_PATH}/${OVERVIEW_BRANDED_APPLICATION_TITLE}.app")

  IF(APPLE)
    IF(OVERVIEW_BRANDED_APPLICATION_ICON)
      GET_FILENAME_COMPONENT(ICON_FILE "${OVERVIEW_BRANDED_APPLICATION_ICON}" NAME)
      FILE(MAKE_DIRECTORY "${BUNDLE_DIRECTORY}/Contents/Resources")
      CONFIGURE_FILE("${OVERVIEW_BRANDED_APPLICATION_ICON}" "${BUNDLE_DIRECTORY}/Contents/Resources/${ICON_FILE}" COPYONLY)
      SET_TARGET_PROPERTIES(${OVERVIEW_BRANDED_APPLICATION_TITLE} PROPERTIES
        MACOSX_BUNDLE_ICON_FILE ${ICON_FILE}
        )
    ENDIF(OVERVIEW_BRANDED_APPLICATION_ICON)
  ENDIF(APPLE)
   
  TARGET_LINK_LIBRARIES(${OVERVIEW_BRANDED_APPLICATION_TITLE}
    OverViewCore
    )

  IF(WIN32)
    FIND_PACKAGE(Qt4)
    INCLUDE(${QT_USE_FILE})
    TARGET_LINK_LIBRARIES(${OVERVIEW_BRANDED_APPLICATION_TITLE} ${QT_QTMAIN_LIBRARY} )
  ENDIF(WIN32)

  # To support running from the build directory on all platforms, we create symlinks pointing to our compiled startup
  # plugins ... note that we have to create our shortcuts at build-time rather than configure-time, to reflect the
  # user's choice of debug/release build directory on Win32, and that plugins are not necessarily located in the same
  # build directory as the branded executable that we are building!
  IF(APPLE)
    SET(STARTUP_DIRECTORY "${BUNDLE_DIRECTORY}/Contents/MacOS/${OVERVIEW_BRANDED_APPLICATION_TITLE}-startup")
  ELSE()
    SET(STARTUP_DIRECTORY "${EXECUTABLE_OUTPUT_PATH}/${CMAKE_CFG_INTDIR}/${OVERVIEW_BRANDED_APPLICATION_TITLE}-startup")
  ENDIF()

  LIST(LENGTH OVERVIEW_STARTUP_PLUGIN_FILES PLUGIN_COUNT)

  SET(PLUGIN 0)
  WHILE(PLUGIN LESS ${PLUGIN_COUNT})
    LIST(GET OVERVIEW_STARTUP_PLUGIN_FILES ${PLUGIN} PLUGIN_FILE)
    LIST(GET OVERVIEW_STARTUP_PLUGIN_DIRECTORIES ${PLUGIN} PLUGIN_DIRECTORY)

    # Note that we don't use platform symlinks here for two reasons: they don't exist on Windoze, and we want to create them
    # whether the symlink target currenty exists or not (depending on build order, it might not be built at the time this command
    # executes.
    ADD_CUSTOM_COMMAND(
      TARGET ${OVERVIEW_BRANDED_APPLICATION_TITLE}
      POST_BUILD
      COMMAND ${CMAKE_COMMAND} -E make_directory ${STARTUP_DIRECTORY}
      COMMAND ${CMAKE_COMMAND} -E echo_append "${PLUGIN_DIRECTORY}/${CMAKE_CFG_INTDIR}/${PLUGIN_FILE}" > "${STARTUP_DIRECTORY}/${PLUGIN_FILE}.timlink"
      )

    MATH(EXPR PLUGIN "${PLUGIN} + 1")
  ENDWHILE()

  # Setup Mac packaging ...
  IF(APPLE)
    INCLUDE("@ParaView_BINARY_DIR@/OverViewOSXDistribution.cmake")
  ENDIF(APPLE)

  # Setup Win32 packaging ...
  IF(WIN32)
    INCLUDE("@ParaView_BINARY_DIR@/OverViewWin32Distribution.cmake")
  ENDIF(WIN32)

ENDMACRO(overview_build_client)

