#==============================================================================
#
# VisIt site-config for the VTK--VisIt database bridge.
#
#==============================================================================(BUILD NOTES)
#
# This file is a site-config file that I used to build VisIt as a library for use with
# ParaView. To do so VisIt's makefiles had to be patched so that its GUI is excluded and
# ParaView's VTK can be used. The top section of the file is a set of notes as to how I
# configured VisIt's dependencies and VisIt itself. The bottom of this file is a bash
# script that VisIt uses to configure itself. You will have to modify the variables to
# reflect locations of the dependencies on your system. If you are only interested in a
# specific database plugin then you can skip many of the dependencies. You can't skip szip,
# silo, or hdf5. Be sure to point ParaView to the version of HDF5 you are using here when
# you build ParaView.
#
# Notes:
#
# VisIt suggests to use static libraries for its dependencies, I have gone with that even
# when it would make sense to do otherwise.
#
# The same hdf5 libraries must be used by both VisIt and PV. Basically this implies the 
# following procedure:
# 
# 1) Build szip, see below.
# 2) Build hdf5, see below.
# 3) Build ParaView link against hdf5 from step 2.
# 4) Build the remianing VisIt dependencies, see below.
# 5) Build VisIt, see below.
# 5) Bootstrap the database bridge PV plugin, see its cmake lists.
# 6) Build the database bridge PV plugin, see its cmake lists.
# 
# This documentation found here in this file pertains to steps 1,2,4 and 5. 
#
# Windows has a completely different build process because VisIt used visual studio. Mac is
# as of yet uncharted territory.
#
# In theory one can build all of VisIt's dependencies using the "build_visit" script available
# from VisIt's web site. If you go that route, then you still should use this file to configure
# the patched VisIt with the ./configure line below, then scroll down to where all the variables
# are.
#
# You'll need to have Qt 3 development packge around somewhere because VisIt's ./configure
# script has a Qt 3 dependency.
#
# It's best to try ot use the versions of the libraries I have used here, if not then
# second best is to use the ones recomended by VisIt. If you do niether you're on
# your own, but things will probably be OK as long as you stick to the recomended
# configuration.
#
#==============================================================================(BUILD NOTES)
#
# szip
#======
# LIBS=-lm CFLAGS=-fPIC CXXFLAGS=-fPIC ./configure --prefix=/opt/szip-2.1 --disable-shared
# make -j 8
# sudo make install
#
# HDF4
#======
# LIBS=-lm CFLAGS=-fPIC CXXFLAGS=-fPIC ./configure --prefix=/opt/hdf4-4.2r4 --disable-fortran --with-szlib=/opt/szip-2.1/ 
# make -j 8
# sudo make install
#
# HDF5
#======
# for gcc 4.3 you'll have to edit perform/zip_perf.c change line 549 to "output = open(filename, O_RDWR | O_CREAT, S_IRWXU);"
#
# HDF5_LIBRARY                     /opt/hdf5-1.6.8_ser/lib/libhdf5.so;/opt/szip-2.1/lib/libsz.a
#
# CFLAGS=-fPIC CXXFLAGS=-fPIC ./configure --prefix=/opt/hdf5-1.6.8_ser --disable-shared --disable-fortran --disable-parallel --with-szlib=/opt/szip-2.1 
# make -j 8
# sudo make install
# sudo ln -s /opt/szip-2.1/lib/libsz.a /opt/hdf5-1.6.8_ser/lib/libsz.a
#
# BoxLib
#=======
# For gcc-4.3 add #include <cstdlib> to ParallelDescriptor.cpp
# Usiing gfortran instead of g77 works well.
#
#
# cd into boxlib directory in the CCSEApps
# edit GNUMakefile, set USE_MPI=false, COMP=g++
# mv std std.old
# chmod 644 *.H
# CXXFLAGS=-fPIC CFLAGS=-fPIC FFLAGS=-fPIC make -j 8
# sudo  mkdir -p /opt/boxlib/{include/2D,include/3D,lib}
# sudo cp libbox3d.Linux.g++.f77.DEBUG.a /opt/boxlib/lib/libbox3D.a
# sudo cp *.H /opt/boxlib/include/3D/
# edit GNUMakefile,set DIM=2
# CXXFLAGS=-fPIC CFLAGS=-fPIC FFLAGS=-fPIC make -j 8
# sudo cp libbox2d.Linux.g++.f77.DEBUG.a /opt/boxlib/lib/libbox2D.a
# sudo cp *.H /opt/boxlib/include/2D/
#
# NetCDF
#========
# For gcc-4.3 add #include <cstring> to ./cxx/ncvalues.cpp
#
# CXXFLAGS=-fPIC CFLAGS=-fPIC ./configure --prefix=/opt/netcdf-3.6.0-p1
# make -j 8
# sudo mkdir /opt/netcdf-3.6.0-p1
# sudo make install 
#
# Silo
#======
# 4.6.2 doesn't work with VisIt and gcc 4.3 as of this writing(2009-02-25). Some sort of link issue, may be libtool.?
#
# ./configure --prefix=/opt/silo-4.6.1 --without-readline --with-hdf5=/opt/hdf5-1.6.8_ser/include/,/opt/hdf5-1.6.8_ser/lib/ --without-exodus --with-szlib=/opt/szip-2.1 --disable-fortran --disable-browser --disable-shared --disable-silex
# make -j 8
# sudo make install
# sudo ln -s /opt/silo-4.6.2/lib/libsiloh5.a /opt/silo-4.6.2/lib/libsilo.a
#
# CGNS
#======
# Only use hdf5 if you need it. & you don't! --with-hdf5=/opt/hdf5-1.6.8_ser/
# CXXFLAGS=-fPIC CFLAGS=-fPIC ./configure --prefix=/opt/cgns-2.4 --with-szip=/opt/szip-2.1/lib/libsz.a 
# make -j 8
# sudo mkdir -p /opt/cgns-2.4/{include,lib}
# sudo make install
# 
# CFITSIO
#=========
# ./configure --prefix=/opt/cfitsio
# make -j 8
# sudo make install
#
# H5Part
#========
# CFLAGS=-fPIC ./configure --prefix=/opt/h5part-1.3.3 --with-hdf5path=/opt/hdf5-1.6.8_ser/
# make -j 8
# sudo make install
#
# CCMIO
#=======
# Didn't work & looks like it uses qmake ?!?. If some one complains we'll get it working.
#
# GDAL
#=======
# For gcc-4.3 download gdal-1.6.0, the following config works with both version
#
# CFLAGS=-fPIC CXXFLAGS=-fPIC ./configure --prefix=/opt/gdal-1.6.0 --enable-static --disable-shared --with-libtiff=internal --with-gif=internal --with-png=internal --with-jpeg=internal --with-libz=internal --with-netcdf=no --without-jasper --without-python
# make -j 8
# sudo make install
#
# Qt 3
#=======
# We don't have to link against Qt but VisIt plugin system requires Qt to build.
# export QTDIR=`pwd`
# export LD_LIBRARY_PATH=$QTDIR/lib
# ./configure --prefix=/opt/qt-3.3.8
# make -j 8
# sudo make install
#
#
# VisIt
#=======
# NOTE for now set VTK_USE_64BIT_IDS to OFF
# NOTE should we force the use of static libs when both shared and static are available? -Bstatic ?? 
#
# NOTE Don't patch use the pre-patched tarball!
# From the top level VisIt directory, one up from src.
# patch -p6 < /home/burlen/ext/kitware_cvs/VisitPluginTool/VisItPV3Build.in.patch
#
# ./configure --prefix=/opt/VisIt-1.10.0 --with-config=/home/burlen/ext/kitware_cvs/VisitPluginTool/building_visit/vtkVisitDatabaseBridge.conf --with-hdf5=/opt/hdf5-1.6.8_ser/include,/opt/hdf5-1.6.8_ser/lib --enable-parallel --disable-scripting --disable-visitmodule --disable-viewer-mesa-stub --disable-icet --disable-bilib --disable-glew --disable-bzip2 --with-dbs=all
#
#
#==============================================================================(Configuration)
VTK=$VTK_BUILD/VTK 
VTK_SOURCE=/home/burlen/ext/ParaView3/VTK
VTK_BUILD=/home/burlen/ext/PV3/
VISIT_VTK_CPPFLAGS="\
      -I$VTK_SOURCE/Parallel\
      -I$VTK_SOURCE/GenericFiltering\
      -I$VTK_SOURCE/Views\
      -I$VTK_SOURCE/Imaging\
      -I$VTK_SOURCE/GUISupport\
      -I$VTK_SOURCE/Infovis\
      -I$VTK_SOURCE/Hybrid\
      -I$VTK_SOURCE/VolumeRendering\
      -I$VTK_SOURCE/Examples\
      -I$VTK_SOURCE/Wrapping\
      -I$VTK_SOURCE/IO\
      -I$VTK_SOURCE/Filtering\
      -I$VTK_SOURCE/Common\
      -I$VTK_SOURCE/Widgets\
      -I$VTK_SOURCE/Rendering\
      -I$VTK_SOURCE/Rendering/Testing/Cxx\
      -I$VTK_SOURCE/Patented\
      -I$VTK_SOURCE/Graphics\
      -I$VTK_SOURCE/Utilities"
VISIT_VTK_CPPFLAGS="$VISIT_VTK_CPPFLAGS -I$VTK_BUILD/VTK -I$VTK_BUILD/VTK/Utilities"
VISIT_VTK_LDFLAGS="\
     -rdynamic\
     -L$VTK_BUILD/bin\
     -L/opt/mpich2-1.0.8/lib\
     -lvtkFiltering\
     -lvtkHybrid\
     -lvtkParallel\
     -lvtkGraphics\
     -lvtkImaging\
     -lvtkRendering\
     -lvtkGraphics\
     -lvtkImaging\
     -lvtkftgl\
     -lvtkfreetype\
     -lGL -lXt -lSM -lICE -lX11 -lXext\
     -lvtkIO\
     -lvtkDICOMParser\
     -lvtkmetaio\
     -lvtksqlite\
     -lvtkpng\
     -lvtktiff\
     -lvtkzlib\
     -lvtkjpeg\
     -lvtkexpat\
     -lvtkexoIIc\
     -lvtkNetCDF\
     -lvtkverdict\
     -lvtkFiltering\
     -lvtkCommon\
     -lvtksys\
     -ldl\
     -lm\
     -Wl,-rpath,$VTK_BUILD/bin:/opt/mpich2-1.0.8/lib\
     -lmpichcxx -lmpich -lpthread -lrt"

VTK_INCLUDE=$VISIT_VTK_CPPFLAGS

# MESA=/opt/Mesa-7.2
# MESA_INCLUDE=/opt/Mesa-7.2/include
# MESA_LIBS=-L/opt/Mesa-7.2/lib

# QT, is required by the build system eg. xmlToMakefile
QT_BIN=/opt/qt-3.3.8/bin
QT_INCLUDE=/opt/qt-3.3.8/include
QT_LIB=/opt/qt-3.3.8/lib

# # NOTE Also have to modify configure.in add version test for 4.4.3 
# # other issues: include structure.
# QT_BIN=/usr/bin
# QT_INCLUDE=/usr/include/qt4/Qt
# QT_LIB=/usr/lib

# Compiler flags.
CC="gcc"
CXX="g++"
CFLAGS="-g -Wno-deprecated"
CXXFLAGS="-fPIC -g -Wno-deprecated -DMPICH_IGNORE_CXX_SEEK -I/opt/mpich2-1.0.8/include $CXXFLAGS"
CPPFLAGS="-fPIC $VISIT_VTK_CPPFLAGS -g -Wno-deprecated $CPPFLAGS"
MPI_LIBS="-L/opt/mpich2-1.0.9/lib -Wl,-rpath -Wl,/opt/mpich2-1.0.8/lib -lmpichcxx -lmpich -lpthread -lrt "

# Database reader plugin support libraries
DEFAULT_SZIP_INCLUDE=/opt/szip-2.1/include
DEFAULT_SZIP_LIB=/opt/szip-2.1/lib
DEFAULT_HDF4_FLAGS=/opt/hdf4-4.2r4/include
DEFAULT_HDF4_LIBS=/opt/hdf4-4.2r4/lib
DEFAULT_HDF5_INCLUDE=/opt/hdf5-1.6.8_ser/include
DEFAULT_HDF5_LIB=/opt/hdf5-1.6.8_ser/lib
DEFAULT_NETCDF_INCLUDE=/opt/netcdf-3.6.0-p1/include
DEFAULT_NETCDF_LIB=/opt/netcdf-3.6.0-p1/lib
DEFAULT_SILO_INCLUDES=/opt/silo-4.6.1/include
DEFAULT_SILO_LIBRARY=/opt/silo-4.6.1/lib
DEFAULT_BOXLIB2D_INCLUDE=/opt/boxlib/include/2D
DEFAULT_BOXLIB2D_LIBS=/opt/boxlib/lib
DEFAULT_BOXLIB3D_INCLUDE=/opt/boxlib/include/3D
DEFAULT_BOXLIB3D_LIBS=/opt/boxlib/lib
DEFAULT_CFITSIO_INCLUDE=/opt/cfitsio/include
DEFAULT_CFITSIO_LIB=/opt/cfitsio/lib
DEFAULT_H5PART_INCLUDE=/opt/h5part-1.3.3/include
DEFAULT_H5PART_LIB=/opt/h5part-1.3.3/lib
DEFAULT_CGNS_INCLUDE=/opt/cgns-2.4/include
DEFAULT_CGNS_LIB=/opt/cgns-2.4/lib
DEFAULT_GDAL_INCLUDE=/opt/gdal-1.6.0/include
DEFAULT_GDAL_LIB=/opt/gdal-1.6.0/lib
# DEFAULT_CCMIO_INCLUDE=
# DEFAULT_CCMIO_LIB=
# BV_MILI_DIR=
# DEFAULT_VISUS_INCLUDE=
# DEFAULT_VISUS_LIB=
# DEFAULT_ITAPS_INCLUDE=
# DEFAULT_ITAPS_LIB=
# DEFAULT_EXODUS_INCLUDES=
# DEFAULT_EXODUS_LIBRARY=
