SET(CTEST_CUSTOM_MEMCHECK_IGNORE
  ${CTEST_CUSTOM_MEMCHECK_IGNORE}
  TestSetGet
  otherPrint-ParaView
  Example-vtkLocal
  Example-vtkMy

  # These tests do not actually run any VTK code
  HeaderTesting-Common
  HeaderTesting-Filtering
  HeaderTesting-Graphics
  HeaderTesting-GenericFiltering
  HeaderTesting-Imaging
  HeaderTesting-IO
  HeaderTesting-Rendering
  HeaderTesting-VolumeRendering
  HeaderTesting-Hybrid
  HeaderTesting-Parallel
  HeaderTesting-Widgets
  HeaderTesting-Infovis
  HeaderTesting-Geovis
  HeaderTesting-Views

  HeaderTesting-PVServer-Common
  HeaderTesting-PVServer-Filters
  HeaderTesting-PVServer-ServerManager
  HeaderTesting-KWCommon
  HeaderTesting-KWWidgets
  HeaderTesting-PVGUI-Client
  
  PrintSelf-KWWidgets	
  PrintSelf-PVGUI-Client
  PrintSelf-PVServer-Common
  PrintSelf-PVServer-Filters
  PrintSelf-PVServer-ServerManager
  PrintSelf-ParaView
  TestSetGet-ParaView
  TestSetObjectMacro-KWWidgets
  TestSetObjectMacro-PVGUI-Client
  TestSetObjectMacro-PVServer-Common
  TestSetObjectMacro-PVServer-Filters
  TestSetObjectMacro-PVServer-ServerManager
  TestSetObjectMacro-ParaView
  
  # this one runs python which then runs two program so no memory checking there
  Sockets-image
  )

SET(CTEST_CUSTOM_WARNING_MATCH
  ${CTEST_CUSTOM_WARNING_MATCH}
  "{standard input}:[0-9][0-9]*: Warning: "
  )

IF("@CMAKE_SYSTEM@" MATCHES "OSF")
  SET(CTEST_CUSTOM_WARNING_EXCEPTION
    ${CTEST_CUSTOM_WARNING_EXCEPTION}
    "XdmfDOM"
    "XdmfExpr"
    "vtkKWApplication"
    "vtkKWObject"
    )
ENDIF("@CMAKE_SYSTEM@" MATCHES "OSF")

SET(CTEST_CUSTOM_WARNING_EXCEPTION
  ${CTEST_CUSTOM_WARNING_EXCEPTION}
  "tcl8.4.5/[^/]+/../[^/]+/[^.]+.c[:\"]"
  "tcl8.4.5/[^/]+/[^/]+/[^.]+.c[:\"]"
  "tcl8.4.5/[^/]+/[^/]+.c[:\"]"
  "tk8.4.5/[^/]+/../[^/]+/[^.]+.c[:\"]"
  "tk8.4.5/[^/]+/[^/]+/[^.]+.c[:\"]"
  "tk8.4.5/[^/]+/[^/]+.c[:\"]"
  "VTK/Utilities/vtktiff/"      
  "VTK/Utilities/vtkmpeg2encode/"      
  "Utilities/hdf5/"
  "xtree.[0-9]+. : warning C4702: unreachable code"
  "warning LNK4221"
  "variable .var_args[2]*. is used before its value is set"
  "jobserver unavailable"
  "warning: \\(Long double usage is reported only once for each file"
  "warning: To disable this warning use"
  "ranlib: file: .+ has no symbols"
  "could not be inlined"
  "qt3/include/q"
  ".include.QtCore"
  "include/features.h"
  "Qt/Python/pqPythonStream"
  "python.+/pyconfig.h"
  "vtkfreetype/src"
  "OSServices.framework"
  "QD.framework/Headers/Quickdraw.h"
  "warning: argument .+ might be clobbered by .longjmp. or .vfork."
  "Microsoft Visual Studio/VC98/include"
  ".include.qtcore"
  "Xdmf2/libsrc"
  ".include.openmpi"
  "warning LNK4098"
  "include/mpicxx.h"
  )

SET(CTEST_CUSTOM_WARNING_EXCEPTION
  ${CTEST_CUSTOM_WARNING_EXCEPTION}
  # Some VTK dashboards include building bits of Qt which produce lots of
  # the following warnings when built with the MS compilers. Qt guys should
  # fix their code. Until they do, keep the Qt chatter off the VTK dashboard
  # results:
  "include.[Qq]t([Cc]ore|[Gg]ui).*warning C4127: conditional expression is constant"
  "[Qq]t.*h.*warning.*declaration of .* shadows a member of .this"
  "[Qq]t.*h.*warning.*(copy constructor|assignment operator) could not be generated"
  )

IF(APPLE)
SET(CTEST_CUSTOM_WARNING_EXCEPTION
  ${CTEST_CUSTOM_WARNING_EXCEPTION}
  "warning -.: directory name .* does not exist"
  "OpenTransport.*warning.*is deprecated"

  # Somebody will have to get rid of these calls eventually (bug 4001) to
  # eliminate these warnings. For now, mask them out of dashboard results:
  "vtkCarbonRenderWindow.cxx.*warning: .(New|Diff|Equal|Dispose)Rgn. is deprecated"
  )
ENDIF(APPLE)

SET(CTEST_CUSTOM_COVERAGE_EXCLUDE
  ${CTEST_CUSTOM_COVERAGE_EXCLUDE}
  "vtk.*CSInit.cxx"
  "vtkKWParaViewInit.cxx"
  "vtk[^\\.]+ClientServer.cxx"
  "vtk[^\\.]+Python.cxx"
  "vtkSNL"
  "GUI/Widgets"
  "moc_[^\\.]+.cxx"
  "ui_[^\\.]+.h"
  "qrc_[^\\.]+.cxx"
  )

