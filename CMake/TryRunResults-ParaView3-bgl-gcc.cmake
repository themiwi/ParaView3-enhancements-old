# This file was generated by CMake because it detected TRY_RUN() commands
# in crosscompiling mode. 
# It has been modified to set the correct values when ParaView is compiled
# for BlueGene.
# To use it call cmake and use this file to preload the cache:
# cmake -DCMAKE_TOOLCHAIN_FILE=<the toolchain file> -C TryRunResults-ParaView3-bgl-gcc.cmake <src dir>


# CMAKE_REQUIRE_LARGE_FILE_SUPPORT
# indicates whether the executable would have been able to run if it was
# executed on its target platform. If it would have been able to run, set it to
# the exit code (in many cases 0 for success). If not, enter "FAILED_TO_RUN".
# 
# CMAKE_REQUIRE_LARGE_FILE_SUPPORT__HAVE_CMAKE_REQUIRE_LARGE_FILE_SUPPORT__TRYRUN_OUTPUT
# contains the text, which the executable  would have printed on stdout and stderr.
# If the executable would not have been able to run, set it empty.
# Otherwise check if the output is evaluated by the calling CMake code. If so,
# check what the source file would have printed when called with the given arguments.
# 
# Source file: /gpfs/gpfs0/home/gevecb/alex/paraview/build/ParaView3-head-bgl-gcc/CMakeFiles/CMakeTmp/src.cxx
# Run arguments: 
#    Called from: [1]   /gpfs/gpfs0/home/gevecb/alex/paraview/src/ParaView3/VTK/CMakeLists.txt

SET( CMAKE_REQUIRE_LARGE_FILE_SUPPORT 
     "1"
     CACHE STRING "Result from TRY_RUN" FORCE )

SET( CMAKE_REQUIRE_LARGE_FILE_SUPPORT__HAVE_CMAKE_REQUIRE_LARGE_FILE_SUPPORT__TRYRUN_OUTPUT 
     "PLEASE_FILL_OUT-NOTFOUND"
     CACHE STRING "Output from TRY_RUN" FORCE )


# SHARED_LIBRARY_PATH_TYPE
# indicates whether the executable would have been able to run if it was
# executed on its target platform. If it would have been able to run, set it to
# the exit code (in many cases 0 for success). If not, enter "FAILED_TO_RUN".
# 
# SHARED_LIBRARY_PATH_TYPE__SHARED_LIBRARY_PATH_INFO_COMPILED__TRYRUN_OUTPUT
# contains the text, which the executable  would have printed on stdout and stderr.
# If the executable would not have been able to run, set it empty.
# Otherwise check if the output is evaluated by the calling CMake code. If so,
# check what the source file would have printed when called with the given arguments.
# 
# Source file: /gpfs/gpfs0/home/gevecb/alex/paraview/src/ParaView3/VTK/CMake/SharedLibraryPathInfo.cxx
# Run arguments:  LDPATH
#    Called from: [2]   /gpfs/gpfs0/home/gevecb/alex/paraview/src/ParaView3/VTK/CMake/SharedLibraryPathVarName.cmake
#                 [1]   /gpfs/gpfs0/home/gevecb/alex/paraview/src/ParaView3/VTK/CMakeLists.txt

SET( SHARED_LIBRARY_PATH_TYPE 
     "0"
     CACHE STRING "Result from TRY_RUN" FORCE )

SET( SHARED_LIBRARY_PATH_TYPE__SHARED_LIBRARY_PATH_INFO_COMPILED__TRYRUN_OUTPUT 
     ""
     CACHE STRING "Output from TRY_RUN" FORCE )


# VTK_TYPE_CHAR_IS_SIGNED
# indicates whether the executable would have been able to run if it was
# executed on its target platform. If it would have been able to run, set it to
# the exit code (in many cases 0 for success). If not, enter "FAILED_TO_RUN".
# 
# Source file: /gpfs/gpfs0/home/gevecb/alex/paraview/src/ParaView3/VTK/CMake/vtkTestCharSignedness.cxx
# Run arguments: 
#    Called from: [2]   /gpfs/gpfs0/home/gevecb/alex/paraview/src/ParaView3/VTK/CMake/vtkTestTypes.cmake
#                 [1]   /gpfs/gpfs0/home/gevecb/alex/paraview/src/ParaView3/VTK/CMakeLists.txt

SET( VTK_TYPE_CHAR_IS_SIGNED 
     "1"
     CACHE STRING "Result from TRY_RUN" FORCE )


# VTK_ANSI_STREAM_EOF_RESULT
# indicates whether the executable would have been able to run if it was
# executed on its target platform. If it would have been able to run, set it to
# the exit code (in many cases 0 for success). If not, enter "FAILED_TO_RUN".
# 
# Source file: /gpfs/gpfs0/home/gevecb/alex/paraview/build/ParaView3-head-bgl-gcc/VTK/CMake/vtkTestStreamEOF.cxx
# Run arguments: 
#    Called from: [2]   /gpfs/gpfs0/home/gevecb/alex/paraview/src/ParaView3/VTK/CMake/vtkTestStreamsLibrary.cmake
#                 [1]   /gpfs/gpfs0/home/gevecb/alex/paraview/src/ParaView3/VTK/CMakeLists.txt

SET( VTK_ANSI_STREAM_EOF_RESULT 
     "0"
     CACHE STRING "Result from TRY_RUN" FORCE )


# KWSYS_LFS_WORKS
# indicates whether the executable would have been able to run if it was
# executed on its target platform. If it would have been able to run, set it to
# the exit code (in many cases 0 for success). If not, enter "FAILED_TO_RUN".
# 
# KWSYS_LFS_WORKS__KWSYS_LFS_WORKS_COMPILED__TRYRUN_OUTPUT
# contains the text, which the executable  would have printed on stdout and stderr.
# If the executable would not have been able to run, set it empty.
# Otherwise check if the output is evaluated by the calling CMake code. If so,
# check what the source file would have printed when called with the given arguments.
# 
# Source file: /gpfs/gpfs0/home/gevecb/alex/paraview/src/ParaView3/VTK/Utilities/kwsys/kwsysPlatformTestsCXX.cxx
# Run arguments: 
#    Called from: [1]   /gpfs/gpfs0/home/gevecb/alex/paraview/src/ParaView3/VTK/Utilities/kwsys/CMakeLists.txt

SET( KWSYS_LFS_WORKS 
     "0"
     CACHE STRING "Result from TRY_RUN" FORCE )

SET( KWSYS_LFS_WORKS__KWSYS_LFS_WORKS_COMPILED__TRYRUN_OUTPUT 
     "PLEASE_FILL_OUT-NOTFOUND"
     CACHE STRING "Output from TRY_RUN" FORCE )


# HDF5_PRINTF_LL_TEST_RUN
# indicates whether the executable would have been able to run if it was
# executed on its target platform. If it would have been able to run, set it to
# the exit code (in many cases 0 for success). If not, enter "FAILED_TO_RUN".
# 
# HDF5_PRINTF_LL_TEST_RUN__HDF5_PRINTF_LL_TEST_COMPILE__TRYRUN_OUTPUT
# contains the text, which the executable  would have printed on stdout and stderr.
# If the executable would not have been able to run, set it empty.
# Otherwise check if the output is evaluated by the calling CMake code. If so,
# check what the source file would have printed when called with the given arguments.
# 
# Source file: /gpfs/gpfs0/home/gevecb/alex/paraview/src/ParaView3/Utilities/hdf5/CMake/HDF5Tests.c
# Run arguments: 
#    Called from: [1]   /gpfs/gpfs0/home/gevecb/alex/paraview/src/ParaView3/Utilities/hdf5/CMakeLists.txt

SET( HDF5_PRINTF_LL_TEST_RUN 
     "0"
     CACHE STRING "Result from TRY_RUN" FORCE )

SET( HDF5_PRINTF_LL_TEST_RUN__HDF5_PRINTF_LL_TEST_COMPILE__TRYRUN_OUTPUT 
     "ll"
     CACHE STRING "Output from TRY_RUN" FORCE )

