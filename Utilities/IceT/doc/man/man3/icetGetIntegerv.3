'\" t
.\" Manual page created with latex2man on Fri Sep 19 09:25:31 MDT 2008
.\" NOTE: This file is generated, DO NOT EDIT.
.de Vb
.ft CW
.nf
..
.de Ve
.ft R

.fi
..
.TH "icetGet" "3" "December  1, 2006" "\fBIceT \fPReference" "\fBIceT \fPReference"
.SH NAME

\fBicetGet \-\- get an \fBIceT \fPstate parameter\fP
.PP
.SH Synopsis

.PP
#include <GL/ice\-t.h>
.PP
.TS H
l l l .
void \fBicetGetDoublev\fP(	GLenum	\fIpname\fP,
	GLdouble *	\fIparams\fP  );
.TE
.PP
.TS H
l l l .
void \fBicetGetFloatv\fP(	GLenum	\fIpname\fP,
	GLfloat *	\fIparams\fP  );
.TE
.PP
.TS H
l l l .
void \fBicetGetIntegerv\fP(	GLenum	\fIpname\fP,
	GLint *	\fIparams\fP  );
.TE
.PP
.TS H
l l l .
void \fBicetGetBooleanv\fP(	GLenum	\fIpname\fP,
	GLboolean *	\fIparams\fP  );
.TE
.PP
.TS H
l l l .
void \fBicetGetPointerv\fP(	GLenum	\fIpname\fP,
	GLvoid **	\fIparams\fP  );
.TE
.PP
.SH Description

.PP
Like \fbOpenGL \fP,the operation of \fBIceT \fPis defined by a large state machine. 
Also like OpenGL, the state parameters can be retrieved through the 
\fBicetGet\fP
functions. Each function takes a symbolic constant, 
\fIpname\fP,
which identifies the state parameter to retrieve. They 
also each take an array, \fIparams\fP,
which will be filled with the 
values in \fIpname\fP\&.
It is the calling application\&'s responsibility 
to ensure that \fIparams\fP
is big enough to hold all the data. 
.PP
.SH State Parameters

.PP
The following list identifies valid values for \fIpname\fP
and a 
description of the associated state parameter. 
.PP
.TP
\fBICET_ABSOLUTE_FAR_DEPTH\fP
 The maximum possible value in 
the depth buffer (i.e. the value in a cleared depth buffer), as stored 
as an unsigned 32 bit integer. Usually, this is the expected 
0xFFFFFFFF\&.
However, some systems that use buffer values with 
24 bits or less cast the maximum value to something smaller. 
.TP
\fBICET_BACKGROUND_COLOR\fP
 The color that \fBIceT \fPis currently 
assuming is the background color. It is an RGBA value that is stored 
as four floating point values. 
.TP
\fBICET_BACKGROUND_COLOR_WORD\fP
 The same as 
\fBICET_BACKGROUND_COLOR\fP
except that each component is stored as 
8\-bit values and packed in a 4\-byte integer as specified by 
\fBICET_COLOR_FORMAT\fP\&.
The idea is to rapidly fill the 
background of color buffers. 
.TP
\fBICET_BLEND_TIME\fP
 The total time, in seconds, spent in 
performing color blending of images during the last call to 
\fBicetDrawFrame\fP\&.
Stored as a double. An alias for this value is 
\fBICET_COMPARE_TIME\fP\&.
.TP
\fBICET_BUFFER_READ_TIME\fP
 The total time, in seconds, spent 
reading from OpenGL buffers during the last call to 
\fBicetDrawFrame\fP\&.
Stored as a double. 
.TP
\fBICET_BUFFER_WRITE_TIME\fP
 The total time, in seconds, spent 
writing to OpenGL buffers during the last call to 
\fBicetDrawFrame\fP\&.
Stored as a double. 
.TP
\fBICET_BYTES_SENT\fP
 The total number of bytes sent by the 
calling process for transferring image data during the last call to 
\fBicetDrawFrame\fP\&.
Stored as an integer. 
.TP
\fBICET_COLOR_BUFFER_VALID\fP
 True if a color buffer was 
computed during the last call to \fBicetDrawFrame\fP
and is available 
with a call to \fBicetGetColorBuffer\fP\&.
.TP
\fBICET_COLOR_FORMAT\fP
 The OpenGL symbolic constant 
describing the format in which \fBIceT \fPreads and stores color buffers. 
Currently always set to \fBGL_RGBA\fP,
\fBGL_BGRA\fP,
or 
\fBGL_BGRA_EXT\fP\&.
.TP
\fBICET_COMPARE_TIME\fP
 The total time, in seconds, spent in 
performing Z comparisons of images during the last call to 
\fBicetDrawFrame\fP\&.
Stored as a double. An alias for this value is 
\fBICET_BLEND_TIME\fP\&.
.TP
\fBICET_COMPOSITE_ORDER\fP
 The order in which images are to be 
composited if \fBICET_ORDERED_COMPOSITE\fP
is enabled and the 
current startegy supports ordered compositing. The parameter contains 
\fBICET_NUM_PROCESSES\fP
entries. The value of this parameter is 
set with \fBicetCompositeOrder\fP\&.
If the element of index i in 
the array is set to j, then there are i images ``on top\&'' of the 
image generated by process j\&. 
.TP
\fBICET_COMPOSITE_TIME\fP
 The total time, in seconds, spent in 
compositing during the last call to \fBicetDrawFrame\fP\&.
Equal to 
$\fBICET_TOTAL_DRAW_TIME\fP
\- \fBICET_RENDER_TIME\fP
\- 
\fBICET_BUFFER_READ_TIME\fP
\- \fBICET_BUFFER_WRITE_TIME\fP$.
Stored as a double. 
.TP
\fBICET_COMPRESS_TIME\fP
 The total time, in seconds, spent in 
compressing image data using active pixel encoding during the last call 
to \fBicetDrawFrame\fP\&.
Stored as a double. 
.TP
\fBICET_DATA_REPLICATION_GROUP\fP
 An array of process ids. 
There are \fBICET_DATA_REPLICATION_GROUP_SIZE\fP
entries in the 
array. \fBIceT \fPassumes that all processes in the list will create the 
exact same image with their draw functions (set with 
\fBicetDrawFunc\fP).
The local process id (\fBICET_RANK\fP)
will 
be part of this list. 
.TP
\fBICET_DATA_REPLICATION_GROUP_SIZE\fP
 The length of the 
\fBICET_DATA_REPLICATION_GROUP\fP
array. 
.TP
\fBICET_DEPTH_BUFFER_VALID\fP
 True if a depth buffer was 
computed during the last call to \fBicetDrawFrame\fP
and is available 
with a call to \fBicetGetDepthBuffer\fP\&.
.TP
\fBICET_DIAGNOSTIC_LEVEL\fP
 The diagnostics flags set with 
\fBicetDiagnostics\fP\&.
.TP
\fBICET_DISPLAY_NODES\fP
 An array of process ranks. The size 
of the array is equal to the number of tiles 
(\fBICET_NUM_TILES\fP).
The $i^{th}$ entry is the rank of
the process that is displaying the tile described by the 
$i^{th}$ entry in \fBICET_TILE_VIEWPORTS\fP\&.
.TP
\fBICET_DRAW_FUNCTION\fP
 A pointer to the drawing callback 
function, as set by \fBicetDrawFunc\fP\&.
.TP
\fBICET_INPUT_BUFFERS\fP
 A bitmask specifying the the buffers 
which \fBIceT \fPwill read from OpenGL and perform composition. The value 
is set with \fBicetInputOutputBuffers\fP\&.
See the documentation of 
that function for valid bit flags. 
.TP
\fBICET_FRAME_COUNT\fP
 The number of times 
\fBicetDrawFrame\fP
has been called for the current context. 
.TP
\fBICET_GEOMETRY_BOUNDS\fP
 An array of vertices whose convex 
hull bounds the drawn geometry. Set with \fBicetBoundingVertices\fP
or \fBicetBoundingBox\fP\&.
Each vertex has three coordinates and are 
tightly packed in the array. The size of the array is $3 *
\fBICET_NUM_BOUNDING_VERTS\fP$.
.TP
\fBICET_GLOBAL_VIEWPORT\fP
 Defines a viewport in an infinite 
logical display that covers all tile viewports (listed in 
\fBICET_TILE_VIEWPORTS\fP).
The viewport, like an OpenGL viewport, 
is given as the integer four\-tuple $<x, y, width, height 
>$.x and y are placed at the leftmost and lowest position 
of all the tiles, and width and height are just big enough for the 
viewport to cover all tiles. The viewports are listed in the same 
order as the tiles were defined with \fBicetAddTile\fP\&.
.TP
\fBICET_NUM_BOUNDING_VERTS\fP
 The number of bounding vertices 
listed in the \fBICET_GEOMETRY_BOUNDS\fP
parameter. 
.TP
\fBICET_NUM_TILES\fP
 The number of tiles in the defined 
display. Basically equal to the number of times \fBicetAddTile\fP
was called after the last \fBicetResetTiles\fP\&.
.TP
\fBICET_NUM_PROCESSES\fP
 The number of processes in the 
parallel job as given by the \fBIceTCommunicator\fP
object associated 
with the current context. 
.TP
\fBICET_OUTPUT_BUFFERS\fP
 A bitmask specifying the the buffers 
which \fBIceT \fPwill generate from composition. The value is set with 
\fBicetInputOutputBuffers\fP\&.
See the documentation of that function 
for valid bit flags. 
.TP
\fBICET_PROCESS_ORDERS\fP
 Basically, the inverse of 
\fBICET_COMPOSITE_ORDER\fP\&.
The parameter contains 
\fBICET_NUM_PROCESSES\fP
entries. If the element of index i in 
the array is set to j, then there are j images ``on top\&'' of the 
image generated by process i\&. 
.TP
\fBICET_RANK\fP
 The rank of the process as given by the 
\fBIceTCommunicator\fP
object associated with the current context. 
.TP
\fBICET_READ_BUFFER\fP
 Set to the OpenGL symbolic constant 
that \fBIceT \fPwill use to read back buffers. Currently always set to 
\fBGL_BACK\fP\&.
.TP
\fBICET_RENDER_TIME\fP
 The total time, in seconds, spent in 
the drawing callback during the last call to \fBicetDrawFrame\fP\&.
Stored as a double. 
.TP
\fBICET_STRATEGY_SUPPORTS_ORDERING\fP
 Is true if and only if 
the current strategy supports ordered compositing. 
.TP
\fBICET_TILE_DISPLAYED\fP
 The index of the tile the local 
process is displaying. The index will correspond to the tile entry in 
the \fBICET_DISPLAY_NODES\fP
and \fBICET_TILE_VIEWPORT\fP
arrays. If set to $0 <= i < \fBICET_NUM_PROCESSES\fP$,
then the 
$i^{th}$ entry of \fBICET_DISPLAY_NODES\fP
is equal to 
\fBICET_RANK\fP\&.
If the local process is not displaying any tile, 
then \fBICET_TILE_DISPLAYED\fP
is set to \-1\&. 
.TP
\fBICET_TILE_MAX_HEIGHT\fP
 The maximum height of any tile. 
.TP
\fBICET_TILE_MAX_PIXELS\fP
 The maximum number of pixels in 
any tile. This number is actually set to 
$(\fBICET_TILE_MAX_WIDTH\fP
*\fBICET_TILE_MAX_HEIGHT\fP)
+ \fBICET_NUM_PROCESSES\fP$.
The 
number of processes is added to provide sufficient padding such that 
the max tile image may be divided evenly amongst any group of processes 
without dropping any real pixels. 
.TP
\fBICET_TILE_MAX_WIDTH\fP
 The maximum width of any tile. 
.TP
\fBICET_TILE_VIEWPORTS\fP
 A list of viewports in the logical 
global display defining the tiles. Each viewport is the four\-tuple 
$<x, y, width, height >$defining the position and 
dimensions of a tile in pixels, much like a viewport is defined in 
OpenGL. The size of the array is $4 * \fBICET_NUM_TILES\fP$.
.TP
\fBICET_TOTAL_DRAW_TIME\fP
 Time spent in the last call to 
\fBicetDrawFrame\fP\&.
Stored as a double. 
.PP
.SH Errors

.PP
.TP
\fBICET_BAD_CAST\fP
 The state parameter requested is of a 
type that cannot be cast to the output type. 
.TP
\fBICET_INVALID_ENUM\fP
 \fIpname\fP
is not a valid state 
parameter. 
.PP
.SH Warnings

.PP
None. 
.PP
.SH Bugs

.PP
None known. 
.PP
.SH Notes

.PP
Not every state variable is documented here. There is a set of 
parameters used internally by \fBIceT \fPor are more appropriately retrieved 
with other functions such as \fBicetIsEnabled\fP\&.
.PP
.SH Copyright

Copyright (C)2003 Sandia Corporation 
.PP
Under the terms of Contract DE\-AC04\-94AL85000, there is a non\-exclusive 
license for use of this work by or on behalf of the U.S. Government. 
Redistribution and use in source and binary forms, with or without 
modification, are permitted provided that this Notice and any statement 
of authorship are reproduced on all copies. 
.PP
.SH See Also

.PP
\fIicetIsEnabled\fP(3),
\fIicetGetStrategyName\fP(3)
.PP
.\" NOTE: This file is generated, DO NOT EDIT.
