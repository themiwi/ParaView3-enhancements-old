/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.19
 *
 * This file is not intended to be easily readable and contains a number of
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG
 * interface file instead.
 * ----------------------------------------------------------------------------- */

#include <stdarg.h>


#ifdef __cplusplus
template<class T> class SwigValueWrapper {
    T *tt;
public:
    inline SwigValueWrapper() : tt(0) { }
    inline ~SwigValueWrapper() { if (tt) delete tt; }
    inline SwigValueWrapper& operator=(const T& t) { tt = new T(t); return *this; }
    inline operator T&() const { return *tt; }
    inline T *operator&() { return tt; }
};
#endif

/***********************************************************************
 * common.swg
 *
 *     This file contains generic SWIG runtime support for pointer
 *     type checking as well as a few commonly used macros to control
 *     external linkage.
 *
 * Author : David Beazley (beazley@cs.uchicago.edu)
 *
 * Copyright (c) 1999-2000, The University of Chicago
 *
 * This file may be freely redistributed without license or fee provided
 * this copyright message remains intact.
 ************************************************************************/

#include <string.h>

#if defined(_WIN32) || defined(__WIN32__)
#       if defined(_MSC_VER)
#               if defined(STATIC_LINKED)
#                       define SWIGEXPORT(a) a
#                       define SWIGIMPORT(a) extern a
#               else
#                       define SWIGEXPORT(a) __declspec(dllexport) a
#                       define SWIGIMPORT(a) extern a
#               endif
#       else
#               if defined(__BORLANDC__)
#                       define SWIGEXPORT(a) a _export
#                       define SWIGIMPORT(a) a _export
#               else
#                       define SWIGEXPORT(a) a
#                       define SWIGIMPORT(a) a
#               endif
#       endif
#else
#       define SWIGEXPORT(a) a
#       define SWIGIMPORT(a) a
#endif

#ifdef SWIG_GLOBAL
#define SWIGRUNTIME(a) SWIGEXPORT(a)
#else
#define SWIGRUNTIME(a) static a
#endif

#ifdef __cplusplus
extern "C" {
#endif

typedef void *(*swig_converter_func)(void *);
typedef struct swig_type_info *(*swig_dycast_func)(void **);

typedef struct swig_type_info {
  const char             *name;
  swig_converter_func     converter;
  const char             *str;
  void                   *clientdata;
  swig_dycast_func        dcast;
  struct swig_type_info  *next;
  struct swig_type_info  *prev;
} swig_type_info;

#ifdef SWIG_NOINCLUDE

SWIGIMPORT(swig_type_info *) SWIG_TypeRegister(swig_type_info *);
SWIGIMPORT(swig_type_info *) SWIG_TypeCheck(char *c, swig_type_info *);
SWIGIMPORT(void *)           SWIG_TypeCast(swig_type_info *, void *);
SWIGIMPORT(swig_type_info *) SWIG_TypeDynamicCast(swig_type_info *, void **);
SWIGIMPORT(const char *)     SWIG_TypeName(const swig_type_info *);
SWIGIMPORT(swig_type_info *) SWIG_TypeQuery(const char *);
SWIGIMPORT(void)             SWIG_TypeClientData(swig_type_info *, void *);

#else

static swig_type_info *swig_type_list = 0;

/* Register a type mapping with the type-checking */
SWIGRUNTIME(swig_type_info *)
SWIG_TypeRegister(swig_type_info *ti)
{
  swig_type_info *tc, *head, *ret, *next;
  /* Check to see if this type has already been registered */
  tc = swig_type_list;
  while (tc) {
    if (strcmp(tc->name, ti->name) == 0) {
      /* Already exists in the table.  Just add additional types to the list */
      if (tc->clientdata) ti->clientdata = tc->clientdata;
      head = tc;
      next = tc->next;
      goto l1;
    }
    tc = tc->prev;
  }
  head = ti;
  next = 0;

  /* Place in list */
  ti->prev = swig_type_list;
  swig_type_list = ti;

  /* Build linked lists */
 l1:
  ret = head;
  tc = ti + 1;
  /* Patch up the rest of the links */
  while (tc->name) {
    head->next = tc;
    tc->prev = head;
    head = tc;
    tc++;
  }
  if (next) next->prev = head;  /**/
  head->next = next;
  return ret;
}

/* Check the typename */
SWIGRUNTIME(swig_type_info *)
SWIG_TypeCheck(char *c, swig_type_info *ty)
{
  swig_type_info *s;
  if (!ty) return 0;        /* Void pointer */
  s = ty->next;             /* First element always just a name */
  do {
    if (strcmp(s->name,c) == 0) {
      if (s == ty->next) return s;
      /* Move s to the top of the linked list */
      s->prev->next = s->next;
      if (s->next) {
  s->next->prev = s->prev;
      }
      /* Insert s as second element in the list */
      s->next = ty->next;
      if (ty->next) ty->next->prev = s;
      ty->next = s;
      s->prev = ty;  /**/
      return s;
    }
    s = s->next;
  } while (s && (s != ty->next));
  return 0;
}

/* Cast a pointer up an inheritance hierarchy */
SWIGRUNTIME(void *)
SWIG_TypeCast(swig_type_info *ty, void *ptr)
{
  if ((!ty) || (!ty->converter)) return ptr;
  return (*ty->converter)(ptr);
}

/* Dynamic pointer casting. Down an inheritance hierarchy */
SWIGRUNTIME(swig_type_info *)
SWIG_TypeDynamicCast(swig_type_info *ty, void **ptr)
{
  swig_type_info *lastty = ty;
  if (!ty || !ty->dcast) return ty;
  while (ty && (ty->dcast)) {
     ty = (*ty->dcast)(ptr);
     if (ty) lastty = ty;
  }
  return lastty;
}

/* Return the name associated with this type */
SWIGRUNTIME(const char *)
SWIG_TypeName(const swig_type_info *ty) {
  return ty->name;
}

/* Search for a swig_type_info structure */
SWIGRUNTIME(swig_type_info *)
SWIG_TypeQuery(const char *name) {
  swig_type_info *ty = swig_type_list;
  while (ty) {
    if (ty->str && (strcmp(name,ty->str) == 0)) return ty;
    if (ty->name && (strcmp(name,ty->name) == 0)) return ty;
    ty = ty->prev;
  }
  return 0;
}

/* Set the clientdata field for a type */
SWIGRUNTIME(void)
SWIG_TypeClientData(swig_type_info *ti, void *clientdata) {
  swig_type_info *tc, *equiv;
  if (ti->clientdata == clientdata) return;
  ti->clientdata = clientdata;
  equiv = ti->next;
  while (equiv) {
    if (!equiv->converter) {
      tc = swig_type_list;
      while (tc) {
  if ((strcmp(tc->name, equiv->name) == 0))
    SWIG_TypeClientData(tc,clientdata);
  tc = tc->prev;
      }
    }
    equiv = equiv->next;
  }
}
#endif

#ifdef __cplusplus
}

#endif

/*
 * $Header: /cvsroot/ParaView3/ParaView3/Utilities/Xdmf/libsrc/Attic/XdmfTcl.cxx,v 1.8 2003-10-22 14:10:33 andy Exp $
 *
 * swigtcl8.swg
 */

#include <tcl.h>
#include <stdlib.h>
#include <stdarg.h>
#include <ctype.h>

#ifdef __cplusplus
extern "C" {
#endif

/* Constant table */

#define SWIG_TCL_INT     1
#define SWIG_TCL_FLOAT   2
#define SWIG_TCL_STRING  3
#define SWIG_TCL_POINTER 4
#define SWIG_TCL_BINARY  5

/* Flags for pointer conversion */
#define SWIG_POINTER_EXCEPTION     0x1
#define SWIG_POINTER_DISOWN        0x2

/* Swig fail macro */

#define SWIG_fail   goto fail

/* Constant information structure */
typedef struct swig_const_info {
    int type;
    char *name;
    long lvalue;
    double dvalue;
    void   *pvalue;
    swig_type_info **ptype;
} swig_const_info;

typedef int   (*swig_wrapper)(ClientData, Tcl_Interp *, int, Tcl_Obj *CONST []);
typedef int   (*swig_wrapper_func)(ClientData, Tcl_Interp *, int, Tcl_Obj *CONST []);
typedef char *(*swig_variable_func)(ClientData, Tcl_Interp *, char *, char *, int);
typedef void  (*swig_delete_func)(ClientData);

typedef struct swig_method {
  const char     *name;
  swig_wrapper   method;
} swig_method;

typedef struct swig_attribute {
  const char     *name;
  swig_wrapper   getmethod;
  swig_wrapper   setmethod;
} swig_attribute;

typedef struct swig_class {
  const char         *name;
  swig_type_info   **type;
  swig_wrapper       constructor;
  void              (*destructor)(void *);
  swig_method        *methods;
  swig_attribute     *attributes;
  struct swig_class **bases;
} swig_class;

typedef struct swig_instance {
  Tcl_Obj       *thisptr;
  void          *thisvalue;
  swig_class   *classptr;
  int            destroy;
  Tcl_Command    cmdtok;
} swig_instance;

#ifdef SWIG_NOINCLUDE
SWIGEXPORT(char *)    SWIG_PackData(char *c, void *ptr, int sz);
SWIGEXPORT(char *)    SWIG_UnpackData(char *c, void *ptr, int sz);
SWIGEXPORT(int)       SWIG_ConvertPtrFromString(Tcl_Interp *, char *, void **, swig_type_info *,int flags);
SWIGEXPORT(int)       SWIG_ConvertPtr(Tcl_Interp *, Tcl_Obj *, void **, swig_type_info *, int flags);
SWIGEXPORT(int)       SWIG_ConvertPacked(Tcl_Interp *, Tcl_Obj *, void *, int sz, swig_type_info *, int flags);
SWIGEXPORT(void)      SWIG_MakePtr(char *, void *, swig_type_info *, int flags);
SWIGEXPORT(Tcl_Obj *) SWIG_NewPointerObj(void *, swig_type_info *, int flags);
SWIGEXPORT(Tcl_Obj *) SWIG_NewPackedObj(void *, int sz, swig_type_info *, int flags);
SWIGEXPORT(int)       SWIG_GetArgs(Tcl_Interp *, int, Tcl_Obj *CONST [], const char *, ...);
SWIGEXPORT(char *)    SWIG_PointerTypeFromString(char *c);
SWIGEXPORT(void)      SWIG_Acquire(void *ptr);
SWIGEXPORT(int)       SWIG_Disown(void *ptr);
SWIGEXPORT(int)       SWIG_Thisown(void *ptr);
SWIGEXPORT(void)      SWIG_InstallConstants(Tcl_Interp *interp, struct swig_const_info constants[]);
SWIGEXPORT(Tcl_Obj *) SWIG_GetConstant(const char *key);
SWIGEXPORT(Tcl_Obj *) SWIG_NewInstanceObj(Tcl_Interp *interp, void *, swig_type_info *, int flags);
SWIGEXPORT(int)       SWIG_ObjectConstructor(ClientData, Tcl_Interp *, int, Tcl_Obj *CONST objv[]);
SWIGEXPORT(int)       SWIG_MethodCommand(ClientData, Tcl_Interp *, int, Tcl_Obj *CONST objv[]);
SWIGEXPORT(void)      SWIG_ObjectDelete(ClientData);
#else

/* Object support */
static Tcl_HashTable  swigobjectTable;
static int            swigobjectTableinit = 0;

/* Acquire ownership of a pointer */
SWIGRUNTIME(void)
SWIG_Acquire(void *ptr)
{
  Tcl_HashEntry *entryPtr;
  int newobj;
  if (!swigobjectTableinit) {
    Tcl_InitHashTable(&swigobjectTable, TCL_ONE_WORD_KEYS);
    swigobjectTableinit = 1;
  }
  entryPtr = Tcl_CreateHashEntry(&swigobjectTable, (char *) ptr, &newobj);
}

/* Disown a pointer.  Returns 1 if we owned it to begin with */
SWIGRUNTIME(int)
SWIG_Disown(void *ptr)
{
  Tcl_HashEntry *entryPtr;
  if (!swigobjectTableinit) return 0;
  entryPtr = Tcl_FindHashEntry(&swigobjectTable, (char *) ptr);
  if (entryPtr) {
    Tcl_DeleteHashEntry(entryPtr);
    return 1;
  }
  return 0;
}

SWIGRUNTIME(int)
SWIG_Thisown(void *ptr) {
  if (!swigobjectTableinit) return 0;
  if (Tcl_FindHashEntry(&swigobjectTable, (char *) ptr)) {
    return 1;
  }
  return 0;
}

/* Pack binary data into a string */
SWIGRUNTIME(char *)
SWIG_PackData(char *c, void *ptr, int sz) {
  static char hex[17] = "0123456789abcdef";
  int i;
  unsigned char *u = (unsigned char *) ptr;
  register unsigned char uu;
  for (i = 0; i < sz; i++,u++) {
    uu = *u;
    *(c++) = hex[(uu & 0xf0) >> 4];
    *(c++) = hex[uu & 0xf];
  }
  return c;
}

/* Unpack binary data from a string */
SWIGRUNTIME(char *)
SWIG_UnpackData(char *c, void *ptr, int sz) {
  register unsigned char uu = 0;
  register int d;
  unsigned char *u = (unsigned char *) ptr;
  int i;
  if ((int)strlen(c) < (2*sz)) return c;
  for (i = 0; i < sz; i++, u++) {
    d = *(c++);
    if ((d >= '0') && (d <= '9'))
      uu = ((d - '0') << 4);
    else if ((d >= 'a') && (d <= 'f'))
      uu = ((d - ('a'-10)) << 4);
    d = *(c++);
    if ((d >= '0') && (d <= '9'))
      uu |= (d - '0');
    else if ((d >= 'a') && (d <= 'f'))
      uu |= (d - ('a'-10));
    *u = uu;
  }
  return c;
}

/* Convert a pointer value */
SWIGRUNTIME(int)
SWIG_ConvertPtrFromString(Tcl_Interp *interp, char *c, void **ptr, swig_type_info *ty, int flags)
{
  swig_type_info *tc;
  /* Pointer values must start with leading underscore */
  while (*c != '_') {
    *ptr = (void *) 0;
    if (strcmp(c,"NULL") == 0) return TCL_OK;
    /* Hmmm. It could be an object name. */
    if (Tcl_VarEval(interp,c," cget -this", (char *) NULL) == TCL_OK) {
      Tcl_Obj *result = Tcl_GetObjResult(interp);
      c = Tcl_GetStringFromObj(result, NULL);
      continue;
    }
    if (flags & SWIG_POINTER_EXCEPTION)
      Tcl_SetResult(interp, (char *) "Type error. Expected a pointer", TCL_STATIC);
    return TCL_ERROR;
  }
  c++;
  c = SWIG_UnpackData(c,ptr,sizeof(void *));
  if (ty) {
    tc = SWIG_TypeCheck(c,ty);
    if ((!tc) && (flags & SWIG_POINTER_EXCEPTION)) {
      Tcl_SetResult(interp, (char *) "Type error. Expected ", TCL_STATIC);
      Tcl_AppendElement(interp, (char *) ty->name);
      return TCL_ERROR;
    } else if (!tc) {
      return TCL_ERROR;
    }
    if (flags & SWIG_POINTER_DISOWN) {
      SWIG_Disown((void *) *ptr);
    }
    *ptr = SWIG_TypeCast(tc,(void *) *ptr);
  }
  return TCL_OK;
}

/* Convert a pointer value */
SWIGRUNTIME(int)
SWIG_ConvertPtr(Tcl_Interp *interp, Tcl_Obj *oc, void **ptr, swig_type_info *ty, int flags)
{
  return SWIG_ConvertPtrFromString(interp, Tcl_GetStringFromObj(oc,NULL), ptr, ty, flags);
}

/* Convert a pointer value */
SWIGRUNTIME(char *)
SWIG_PointerTypeFromString(char *c) {
  char d;
  /* Pointer values must start with leading underscore. NULL has no type */
  if (*c != '_') {
    return 0;
  }
  c++;
  /* Extract hex value from pointer */
  while ((d = *c)) {
    if (!(((d >= '0') && (d <= '9')) || ((d >= 'a') && (d <= 'f')))) break;
    c++;
  }
  return c;
}

/* Convert a packed value value */
SWIGRUNTIME(int)
SWIG_ConvertPacked(Tcl_Interp *interp, Tcl_Obj *obj, void *ptr, int sz, swig_type_info *ty, int flags) {
  swig_type_info *tc;
  char  *c;

  if (!obj) goto type_error;
  c = Tcl_GetStringFromObj(obj,NULL);
  /* Pointer values must start with leading underscore */
  if (*c != '_') goto type_error;
  c++;
  c = SWIG_UnpackData(c,ptr,sz);
  if (ty) {
    tc = SWIG_TypeCheck(c,ty);
    if (!tc) goto type_error;
  }
  return TCL_OK;

type_error:

  if (flags) {
    if (ty) {
      Tcl_SetResult(interp, (char *) "Type error. Expected ", TCL_STATIC);
      Tcl_AppendElement(interp, (char *) ty->name);
      return TCL_ERROR;
    } else {
      Tcl_SetResult(interp, (char *) "Expected packed data.", TCL_STATIC);
      return TCL_ERROR;
    }
  }
  return TCL_ERROR;
}


/* Take a pointer and convert it to a string */
SWIGRUNTIME(void)
SWIG_MakePtr(char *c, void *ptr, swig_type_info *ty, int flags) {
  if (ptr) {
    *(c++) = '_';
    c = SWIG_PackData(c,&ptr,sizeof(void *));
    strcpy(c,ty->name);
  } else {
    strcpy(c,(char *)"NULL");
  }
  flags = 0;
}

/* Create a new pointer object */
SWIGRUNTIME(Tcl_Obj *)
SWIG_NewPointerObj(void *ptr, swig_type_info *type, int flags) {
  Tcl_Obj *robj;
  char result[512];
  SWIG_MakePtr(result,ptr,type,flags);
  robj = Tcl_NewStringObj(result,-1);
  return robj;
}

SWIGRUNTIME(Tcl_Obj *)
SWIG_NewPackedObj(void *ptr, int sz, swig_type_info *type, int flags) {
  char result[1024];
  char *r = result;
  if ((2*sz + 1 + strlen(type->name)) > 1000) return 0;
  *(r++) = '_';
  r = SWIG_PackData(r,ptr,sz);
  strcpy(r,type->name);
  flags = 0;
  return Tcl_NewStringObj(result,-1);
}

static Tcl_HashTable   swigconstTable;
static int             swigconstTableinit = 0;

/* Install Constants */
SWIGRUNTIME(void)
SWIG_InstallConstants(Tcl_Interp *interp, swig_const_info constants[]) {
  int i;
  Tcl_Obj *obj;
  Tcl_HashEntry *entryPtr;
  int            newobj;

  if (!swigconstTableinit) {
    Tcl_InitHashTable(&swigconstTable, TCL_STRING_KEYS);
    swigconstTableinit = 1;
  }
  for (i = 0; constants[i].type; i++) {
    switch(constants[i].type) {
    case SWIG_TCL_INT:
      obj = Tcl_NewIntObj(constants[i].lvalue);
      break;
    case SWIG_TCL_FLOAT:
      obj = Tcl_NewDoubleObj(constants[i].dvalue);
      break;
    case SWIG_TCL_STRING:
      obj = Tcl_NewStringObj((char *) constants[i].pvalue,-1);
      break;
    case SWIG_TCL_POINTER:
      obj = SWIG_NewPointerObj(constants[i].pvalue, *(constants[i]).ptype,0);
      break;
    case SWIG_TCL_BINARY:
      obj = SWIG_NewPackedObj(constants[i].pvalue, constants[i].lvalue, *(constants[i].ptype),0);
      break;
    default:
      obj = 0;
      break;
    }
    if (obj) {
      Tcl_ObjSetVar2(interp,Tcl_NewStringObj(constants[i].name,-1), NULL, obj, TCL_GLOBAL_ONLY);
      entryPtr = Tcl_CreateHashEntry(&swigconstTable, constants[i].name, &newobj);
      Tcl_SetHashValue(entryPtr, (ClientData) obj);
    }
  }
}

SWIGRUNTIME(Tcl_Obj *)
SWIG_GetConstant(const char *key) {
  Tcl_HashEntry *entryPtr;
  if (!swigconstTableinit) return 0;
  entryPtr = Tcl_FindHashEntry(&swigconstTable, key);
  if (entryPtr) {
    return (Tcl_Obj *) Tcl_GetHashValue(entryPtr);
  }
  printf("Searching %s\n", key);
  return 0;
}

/* Get arguments */
SWIGRUNTIME(int)
SWIG_GetArgs(Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[], const char *fmt, ...)
{
  int        argno = 0, opt = 0, tempi;
  double     tempd;
  const char *c;
  va_list    ap;
  void      *vptr;
  Tcl_Obj   *obj = 0;
  swig_type_info *ty;

  va_start(ap,fmt);
  for (c = fmt; (*c && (*c != ':') && (*c != ';')); c++,argno++) {
    if (*c == '|') {
      opt = 1;
      c++;
    }
    if (argno >= (objc-1)) {
      if (!opt) {
  Tcl_SetResult(interp, (char *) "Wrong # args. ", TCL_STATIC);
  goto argerror;
      } else {
  va_end(ap);
  return TCL_OK;
      }
    }

    vptr = va_arg(ap,void *);
    if (vptr) {
      if (isupper(*c)) {
  obj = SWIG_GetConstant(Tcl_GetStringFromObj(objv[argno+1],0));
  if (!obj) obj = objv[argno+1];
      } else {
  obj = objv[argno+1];
      }
      switch(*c) {
      case 'i': case 'I':
      case 'l': case 'L':
      case 'h': case 'H':
      case 'b': case 'B':
  if (Tcl_GetIntFromObj(interp,obj,&tempi) != TCL_OK) goto argerror;
  if ((*c == 'i') || (*c == 'I')) *((int *)vptr) = tempi;
  else if ((*c == 'l') || (*c == 'L')) *((long *)vptr) = tempi;
  else if ((*c == 'h') || (*c == 'H')) *((short*)vptr) = tempi;
  else if ((*c == 'b') || (*c == 'B')) *((unsigned char *)vptr) = tempi;
  break;
      case 'f': case 'F':
      case 'd': case 'D':
  if (Tcl_GetDoubleFromObj(interp,obj,&tempd) != TCL_OK) goto argerror;
  if ((*c == 'f') || (*c == 'F')) *((float *) vptr) = (float)tempd;
  else if ((*c == 'd') || (*c == 'D')) *((double*) vptr) = tempd;
  break;
      case 's': case 'S':
  if (*(c+1) == '#') {
    int *vlptr = (int *) va_arg(ap, void *);
    *((char **) vptr) = Tcl_GetStringFromObj(obj, vlptr);
    c++;
  } else {
    *((char **)vptr) = Tcl_GetStringFromObj(obj,NULL);
  }
  break;
      case 'c': case 'C':
  *((char *)vptr) = *(Tcl_GetStringFromObj(obj,NULL));
  break;
      case 'p': case 'P':
  ty = (swig_type_info *) va_arg(ap, void *);
  if (SWIG_ConvertPtr(interp, obj, (void **) vptr, ty, SWIG_POINTER_EXCEPTION) == TCL_ERROR) goto argerror;
  break;
      case 'o': case 'O':
  *((Tcl_Obj **)vptr) = objv[argno+1];
  break;
      default:
  break;
      }
    }
  }

  if ((*c != ';') && ((objc-1) > argno)) {
    Tcl_SetResult(interp, (char *) "Wrong # args.", TCL_STATIC);
    goto argerror;
  }
  va_end(ap);
  return TCL_OK;

 argerror:
  {
    char temp[32];
    sprintf(temp,"%d", argno+1);
    c = strchr(fmt,':');
    if (!c) c = strchr(fmt,';');
    if (!c) c = (char *)"";
    Tcl_AppendResult(interp,c," argument ", temp, NULL);
    va_end(ap);
    return TCL_ERROR;
  }
}

SWIGRUNTIME(void)
SWIG_ObjectDelete(ClientData clientData) {
  swig_instance *si = (swig_instance *) clientData;
  if ((si) && (si->destroy) && (SWIG_Disown(si->thisvalue))) {
    if (si->classptr->destructor) {
      (si->classptr->destructor)(si->thisvalue);
    }
  }
  Tcl_DecrRefCount(si->thisptr);
  free(si);
}

/* Function to invoke object methods given an instance */
SWIGRUNTIME(int)
SWIG_MethodCommand(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST _objv[])
{
  char *method,   *attrname;
  swig_instance   *inst = (swig_instance *) clientData;
  swig_method     *meth;
  swig_attribute  *attr;
  Tcl_Obj         *oldarg;
  Tcl_Obj         **objv;
  int              rcode;
  swig_class      *cls;
  swig_class      *cls_stack[64];
  int              cls_stack_bi[64];
  int              cls_stack_top = 0;
  int              numconf = 2;
  int              bi;

  objv = (Tcl_Obj **) _objv;
  if (objc < 2) {
    Tcl_SetResult(interp, (char *) "wrong # args.", TCL_STATIC);
    return TCL_ERROR;
  }
  method = Tcl_GetStringFromObj(objv[1],NULL);
  if (strcmp(method,"-acquire") == 0) {
    inst->destroy = 1;
    SWIG_Acquire(inst->thisvalue);
    return TCL_OK;
  }
  if (strcmp(method,"-disown") == 0) {
    if (inst->destroy) {
      SWIG_Disown(inst->thisvalue);
    }
    inst->destroy = 0;
    return TCL_OK;
  }
  if (strcmp(method,"-delete") == 0) {
    Tcl_DeleteCommandFromToken(interp,inst->cmdtok);
    return TCL_OK;
  }
  cls_stack[cls_stack_top] = inst->classptr;
  cls_stack_bi[cls_stack_top] = -1;
  cls = inst->classptr;
  while (1) {
    bi = cls_stack_bi[cls_stack_top];
    cls = cls_stack[cls_stack_top];
    if (bi != -1) {
      cls = cls->bases[bi];
      if (cls) {
  cls_stack_bi[cls_stack_top]++;
  cls_stack_top++;
  cls_stack[cls_stack_top] = cls;
  cls_stack_bi[cls_stack_top] = -1;
  continue;
      }
    }
    if (!cls) {
      cls_stack_top--;
      if (cls_stack_top < 0) break;
      else continue;
    }
    cls_stack_bi[cls_stack_top]++;

    meth = cls->methods;
    /* Check for methods */
    while (meth && meth->name) {
      if (strcmp(meth->name,method) == 0) {
  oldarg = objv[1];
  objv[1] = inst->thisptr;
  Tcl_IncrRefCount(inst->thisptr);
  rcode = (*meth->method)(clientData,interp,objc,objv);
  objv[1] = oldarg;
  Tcl_DecrRefCount(inst->thisptr);
  return rcode;
      }
      meth++;
    }
    /* Check class methods for a match */
    if (strcmp(method,"cget") == 0) {
      if (objc < 3) {
  Tcl_SetResult(interp, (char *) "wrong # args.", TCL_STATIC);
  return TCL_ERROR;
      }
      attrname = Tcl_GetStringFromObj(objv[2],NULL);
      attr = cls->attributes;
      while (attr && attr->name) {
  if ((strcmp(attr->name, attrname) == 0) && (attr->getmethod)) {
    oldarg = objv[1];
    objv[1] = inst->thisptr;
    Tcl_IncrRefCount(inst->thisptr);
    rcode = (*attr->getmethod)(clientData,interp,2, objv);
    objv[1] = oldarg;
    Tcl_DecrRefCount(inst->thisptr);
    return rcode;
  }
  attr++;
      }
      if (strcmp(attrname, "-this") == 0) {
  Tcl_SetObjResult(interp, Tcl_DuplicateObj(inst->thisptr));
  return TCL_OK;
      }
      if (strcmp(attrname, "-thisown") == 0) {
  if (SWIG_Thisown(inst->thisvalue)) {
    Tcl_SetResult(interp,(char*)"1",TCL_STATIC);
  } else {
    Tcl_SetResult(interp,(char*)"0",TCL_STATIC);
  }
  return TCL_OK;
      }
    } else if (strcmp(method, "configure") == 0) {
      int i;
      if (objc < 4) {
  Tcl_SetResult(interp, (char *) "wrong # args.", TCL_STATIC);
  return TCL_ERROR;
      }
      i = 2;
      while (i < objc) {
  attrname = Tcl_GetStringFromObj(objv[i],NULL);
  attr = cls->attributes;
  while (attr && attr->name) {
    if ((strcmp(attr->name, attrname) == 0) && (attr->setmethod)) {
      oldarg = objv[i];
      objv[i] = inst->thisptr;
      Tcl_IncrRefCount(inst->thisptr);
      rcode = (*attr->setmethod)(clientData,interp,3, &objv[i-1]);
      objv[i] = oldarg;
      Tcl_DecrRefCount(inst->thisptr);
      if (rcode != TCL_OK) return rcode;
      numconf += 2;
    }
    attr++;
  }
  i+=2;
      }
    }
  }
  if (strcmp(method,"configure") == 0) {
    if (numconf >= objc) {
      return TCL_OK;
    } else {
      Tcl_SetResult(interp,(char *) "Invalid attribute name.", TCL_STATIC);
      return TCL_ERROR;
    }
  }
  if (strcmp(method,"cget") == 0) {
      Tcl_SetResult(interp,(char *) "Invalid attribute name.", TCL_STATIC);
      return TCL_ERROR;
  }

  Tcl_SetResult(interp, (char *) "Invalid method. Must be one of: configure cget -acquire -disown -delete", TCL_STATIC);
  cls = inst->classptr;
  bi = 0;
  while (cls) {
    meth = cls->methods;
    while (meth && meth->name) {
      char *cr = (char *) Tcl_GetStringResult(interp);
      if (!strstr(strchr(cr,':'), meth->name))
  Tcl_AppendElement(interp, (char *) meth->name);
      meth++;
    }
    cls = inst->classptr->bases[bi++];
  }
  return TCL_ERROR;
}

/* Function to create objects */
SWIGRUNTIME(int)
SWIG_ObjectConstructor(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[])
{
    Tcl_Obj          *newObj = 0;
    void             *thisvalue = 0;
    swig_instance   *newinst = 0;
    swig_class      *classptr = (swig_class *) clientData;
    swig_wrapper     cons = 0;
    char             *name = 0;
    int               firstarg = 0;
    int               thisarg = 0;
    int               destroy = 1;

    if (!classptr) {
      Tcl_SetResult(interp, (char *) "swig: internal runtime error. No class object defined.", TCL_STATIC);
      return TCL_ERROR;
    }
    cons = classptr->constructor;
    if (objc > 1) {
      char *s = Tcl_GetStringFromObj(objv[1],NULL);
      if (strcmp(s,"-this") == 0) {
  thisarg = 2;
  cons = 0;
      } else if (strcmp(s,"-args") == 0) {
  firstarg = 1;
      } else if (objc == 2) {
  firstarg = 1;
  name = s;
      } else if (objc >= 3) {
  char *s1;
  name = s;
  s1 = Tcl_GetStringFromObj(objv[2],NULL);
  if (strcmp(s1,"-this") == 0) {
    thisarg = 3;
    cons = 0;
  } else {
    firstarg = 1;
  }
      }
    }
    if (cons) {
      int result;
      result = (*cons)(0, interp, objc-firstarg, &objv[firstarg]);
      if (result != TCL_OK) {
  return result;
      }
      newObj = Tcl_DuplicateObj(Tcl_GetObjResult(interp));
      if (!name) name = Tcl_GetStringFromObj(newObj,NULL);
    } else if (thisarg > 0) {
      if (thisarg < objc) {
  destroy = 0;
  newObj = Tcl_DuplicateObj(objv[thisarg]);
  if (!name) name = Tcl_GetStringFromObj(newObj,NULL);
      } else {
  Tcl_SetResult(interp, (char *) "wrong # args.", TCL_STATIC);
  return TCL_ERROR;
      }
    } else {
      Tcl_SetResult(interp, (char *) "No constructor available.", TCL_STATIC);
      return TCL_ERROR;
    }
    if (SWIG_ConvertPtr(interp,newObj, (void **) &thisvalue, *(classptr->type), SWIG_POINTER_EXCEPTION) == TCL_ERROR) {
      Tcl_DecrRefCount(newObj);
      return TCL_ERROR;
    }
    newinst = (swig_instance *) malloc(sizeof(swig_instance));
    newinst->thisptr = newObj;
    Tcl_IncrRefCount(newObj);
    newinst->thisvalue = thisvalue;
    newinst->classptr = classptr;
    newinst->destroy = destroy;
    if (destroy) {
      SWIG_Acquire(thisvalue);
    }
    newinst->cmdtok = Tcl_CreateObjCommand(interp,name, (swig_wrapper) SWIG_MethodCommand, (ClientData) newinst, (swig_delete_func) SWIG_ObjectDelete);
    return TCL_OK;
}


/* This function takes the current result and turns it into an object command */
SWIGRUNTIME(Tcl_Obj *)
SWIG_NewInstanceObj(Tcl_Interp *interp, void *thisvalue, swig_type_info *type, int flags) {
  Tcl_Obj *robj = SWIG_NewPointerObj(thisvalue, type,0);
  /* Check to see if this pointer belongs to a class or not */
  if ((type->clientdata) && (interp)) {
    Tcl_CmdInfo    ci;
    char          *name;
    name = Tcl_GetStringFromObj(robj,NULL);
    if (!Tcl_GetCommandInfo(interp,name, &ci) || (flags)) {
      swig_instance *newinst = (swig_instance *) malloc(sizeof(swig_instance));
      newinst->thisptr = Tcl_DuplicateObj(robj);
      Tcl_IncrRefCount(newinst->thisptr);
      newinst->thisvalue = thisvalue;
      newinst->classptr = (swig_class *) type->clientdata;
      newinst->destroy = flags;
      newinst->cmdtok = Tcl_CreateObjCommand(interp, Tcl_GetStringFromObj(robj,NULL), (swig_wrapper_func) SWIG_MethodCommand, (ClientData) newinst, (swig_delete_func) SWIG_ObjectDelete);
      if (flags) {
  SWIG_Acquire(thisvalue);
      }
    }
  }
  return robj;
}

#endif

/* Structure for command table */
typedef struct {
  const char *name;
  int       (*wrapper)(ClientData, Tcl_Interp *, int, Tcl_Obj *CONST []);
  ClientData  clientdata;
} swig_command_info;

/* Structure for variable linking table */
typedef struct {
  const char *name;
  void *addr;
  char * (*get)(ClientData, Tcl_Interp *, char *, char *, int);
  char * (*set)(ClientData, Tcl_Interp *, char *, char *, int);
} swig_var_info;

#ifdef __cplusplus
}
#endif






/* -------- TYPES TABLE (BEGIN) -------- */

#define  SWIGTYPE_p_XdmfFormatXML swig_types[0]
#define  SWIGTYPE_p_XdmfTransform swig_types[1]
#define  SWIGTYPE_p_XdmfTopology swig_types[2]
#define  SWIGTYPE_p_XdmfInt64 swig_types[3]
#define  SWIGTYPE_p_XdmfNDGM swig_types[4]
#define  SWIGTYPE_XdmfPointer swig_types[5]
#define  SWIGTYPE_p_void swig_types[6]
#define  SWIGTYPE_p_XdmfArray swig_types[7]
#define  SWIGTYPE_p_XDMF_TREE_NODE swig_types[8]
#define  SWIGTYPE_p_XdmfFormatHDF swig_types[9]
#define  SWIGTYPE_p_XdmfGeometry swig_types[10]
#define  SWIGTYPE_p_XdmfFormatMulti swig_types[11]
#define  SWIGTYPE_p_XdmfObject swig_types[12]
#define  SWIGTYPE_p_XdmfHDF swig_types[13]
#define  SWIGTYPE_p_XdmfXNode swig_types[14]
#define  SWIGTYPE_p_XdmfDOM swig_types[15]
#define  SWIGTYPE_p_XdmfArrayList swig_types[16]
#define  SWIGTYPE_p_XdmfLightData swig_types[17]
#define  SWIGTYPE_p_XdmfInt32 swig_types[18]
#define  SWIGTYPE_p_XdmfHeavyData swig_types[19]
#define  SWIGTYPE_p_XdmfFloat64 swig_types[20]
#define  SWIGTYPE_p_NDGM_NODE swig_types[21]
#define  SWIGTYPE_p_hid_t swig_types[22]
#define  SWIGTYPE_p_XdmfParameter swig_types[23]
#define  SWIGTYPE_p_istream swig_types[24]
#define  SWIGTYPE_p_ostream swig_types[25]
#define  SWIGTYPE_p_XdmfLength swig_types[26]
#define  SWIGTYPE_p_XdmfAttribute swig_types[27]
#define  SWIGTYPE_p_XdmfCharArray swig_types[28]
#define  SWIGTYPE_p_XdmfFormat swig_types[29]
#define  SWIGTYPE_p_XdmfInt8 swig_types[30]
#define  SWIGTYPE_p_long_long swig_types[31]
#define  SWIGTYPE_p_XdmfFloat32 swig_types[32]
#define  SWIGTYPE_p_XdmfDataDesc swig_types[33]
#define  SWIGTYPE_p_istrstream swig_types[34]
#define  SWIGTYPE_p_XdmfGrid swig_types[35]
static swig_type_info *swig_types[37];

/* -------- TYPES TABLE (END) -------- */

#define SWIG_init    Xdmf_Init
#define SWIG_name    "xdmf"
#define SWIG_prefix  "Xdmf::"
#define SWIG_namespace "Xdmf"

#define SWIG_version "0.0"


#ifdef __cplusplus
extern "C" {
#endif
#ifdef MAC_TCL
#pragma export on
#endif
SWIGEXPORT(int) SWIG_init(Tcl_Interp *);
#ifdef MAC_TCL
#pragma export off
#endif
#ifdef __cplusplus
}
#endif



#include <XdmfArray.h>
#include <XdmfAttribute.h>
#include <XdmfCharArray.h>
#include <XdmfDOM.h>
#include <XdmfDataDesc.h>
#include <XdmfExpression.h>
#include <XdmfFormat.h>
#include <XdmfFormatHDF.h>
#include <XdmfFormatMulti.h>
#include <XdmfFormatXML.h>
#include <XdmfGeometry.h>
#include <XdmfGrid.h>
#include <XdmfHDF.h>
#include <XdmfHeavyData.h>
#include <XdmfLightData.h>
#include <XdmfObject.h>
#include <XdmfParameter.h>
#include <XdmfTopology.h>
#include <XdmfTransform.h>
#include <XdmfXNode.h>
#include <XdmfNDGM.h>


#ifndef HAVE_STRTOLL
inline XDMF_LONG64 XDMF_strtoll(char *str, void*, int)
{
  XDMF_LONG64 result = 0;
  int negative=0;

  while (*str == ' ' || *str == '\t')
    {
    str++;
    }
  if (*str == '+')
    {
    str++;
    }
  else if (*str == '-')
    {
    negative = 1;
    str++;
    }

  while (*str >= '0' && *str <= '9')
    {
    result = (result*10)-(*str++ - '0');
    }
  return negative ? result : -result;
}
#else
# define XDMF_strtoll strtoll
#endif

#define  SWIG_MemoryError    1
#define  SWIG_IOError        2
#define  SWIG_RuntimeError   3
#define  SWIG_IndexError     4
#define  SWIG_TypeError      5
#define  SWIG_DivisionByZero 6
#define  SWIG_OverflowError  7
#define  SWIG_SyntaxError    8
#define  SWIG_ValueError     9
#define  SWIG_SystemError   10
#define  SWIG_UnknownError  99


#define SWIG_exception(a,b)   { Tcl_SetResult(interp,b,TCL_VOLATILE); SWIG_fail; }


#include <string>

extern XdmfString XdmfObjectToHandle(XdmfObject *);
extern XdmfObject *HandleToXdmfObject(XdmfConstString);
extern istrstream &ICE_READ_STREAM64(istrstream &,long long &);
extern hid_t XdmfTypeToHDF5Type(XdmfInt32);
extern XdmfInt32 HDF5TypeToXdmfType(hid_t);
extern XdmfString XdmfTypeToString(XdmfInt32);
extern XdmfInt32 StringToXdmfType(XdmfString);
extern XdmfString XdmfTypeToClassString(XdmfInt32);
extern int GetXNodeSize(XdmfXNode *);
extern XdmfConstString GetXNodeName(XdmfXNode *,int);
extern XdmfConstString GetXNodeData(XdmfXNode *,int);
extern XdmfDOM *HandleToXdmfDOM(XdmfConstString);
extern XdmfTopology *HandleToXdmfTopology(XdmfString);
extern XdmfGeometry *GetXdmfGeometryHandle(void *);
extern XdmfGrid *HandleToXdmfGrid(XdmfString);
extern XdmfArray *CopyArray(XdmfArray *,XdmfArray *);
extern XdmfString XdmfGetNdgmEntries(void);
extern void XdmfDeleteAllNdgmEntries(void);
extern XdmfInt64 XdmfAddNdgmEntry(XdmfString,XdmfInt64);
#ifdef __cplusplus
extern "C" {
#endif
static int
_wrap_new_XdmfObject(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfObject *result;

    if (SWIG_GetArgs(interp, objc, objv,":Xdmf::new_XdmfObject") == TCL_ERROR) SWIG_fail;
    result = (XdmfObject *)new XdmfObject();

    Tcl_SetObjResult(interp,SWIG_NewInstanceObj(interp, (void *) result, SWIGTYPE_p_XdmfObject,0));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_delete_XdmfObject(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfObject *arg1 = (XdmfObject *) 0 ;

    if (SWIG_GetArgs(interp, objc, objv,"o:Xdmf::delete_XdmfObjectself ",0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfObject,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    delete arg1;


    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfObject_GetClassName(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfObject *arg1 = (XdmfObject *) 0 ;
    XdmfConstString result;

    if (SWIG_GetArgs(interp, objc, objv,"o:Xdmf::XdmfObject_GetClassNameself ",0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfObject,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    result = (XdmfConstString)(arg1)->GetClassName();

    Tcl_SetObjResult(interp,Tcl_NewStringObj(result,-1));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfObject_SetDebug(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfObject *arg1 = (XdmfObject *) 0 ;
    XdmfBoolean arg2 ;
    XdmfInt32 result;

    if (SWIG_GetArgs(interp, objc, objv,"oi:Xdmf::XdmfObject_SetDebugself _arg ",0,&arg2) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfObject,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    result = (XdmfInt32)(arg1)->SetDebug(arg2);

    Tcl_SetObjResult(interp,Tcl_NewIntObj((long) result));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfObject_GetDebug(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfObject *arg1 = (XdmfObject *) 0 ;
    XdmfBoolean result;

    if (SWIG_GetArgs(interp, objc, objv,"o:Xdmf::XdmfObject_GetDebugself ",0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfObject,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    result = (XdmfBoolean)(arg1)->GetDebug();

    Tcl_SetObjResult(interp,Tcl_NewIntObj((long) result));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfObject_GetGlobalDebug(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfObject *arg1 = (XdmfObject *) 0 ;
    XdmfBoolean result;

    if (SWIG_GetArgs(interp, objc, objv,"o:Xdmf::XdmfObject_GetGlobalDebugself ",0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfObject,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    result = (XdmfBoolean)(arg1)->GetGlobalDebug();

    Tcl_SetObjResult(interp,Tcl_NewIntObj((long) result));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfObject_SetGlobalDebug(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfObject *arg1 = (XdmfObject *) 0 ;
    XdmfBoolean arg2 ;

    if (SWIG_GetArgs(interp, objc, objv,"oi:Xdmf::XdmfObject_SetGlobalDebugself Value ",0,&arg2) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfObject,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    (arg1)->SetGlobalDebug(arg2);


    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfObject_SetGlobalDebugOn(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfObject *arg1 = (XdmfObject *) 0 ;

    if (SWIG_GetArgs(interp, objc, objv,"o:Xdmf::XdmfObject_SetGlobalDebugOnself ",0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfObject,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    (arg1)->SetGlobalDebugOn();


    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfObject_SetGlobalDebugOff(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfObject *arg1 = (XdmfObject *) 0 ;

    if (SWIG_GetArgs(interp, objc, objv,"o:Xdmf::XdmfObject_SetGlobalDebugOffself ",0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfObject,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    (arg1)->SetGlobalDebugOff();


    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static void swig_delete_XdmfObject(void *obj) {
XdmfObject *arg1 = (XdmfObject *) obj;
delete arg1;
}
static swig_method swig_XdmfObject_methods[] = {
    {"GetClassName", _wrap_XdmfObject_GetClassName},
    {"SetDebug", _wrap_XdmfObject_SetDebug},
    {"GetDebug", _wrap_XdmfObject_GetDebug},
    {"GetGlobalDebug", _wrap_XdmfObject_GetGlobalDebug},
    {"SetGlobalDebug", _wrap_XdmfObject_SetGlobalDebug},
    {"SetGlobalDebugOn", _wrap_XdmfObject_SetGlobalDebugOn},
    {"SetGlobalDebugOff", _wrap_XdmfObject_SetGlobalDebugOff},
    {0,0}
};
static swig_attribute swig_XdmfObject_attributes[] = {
    {0,0,0}
};
static swig_class *swig_XdmfObject_bases[] = {0};
swig_class _wrap_class_XdmfObject = { "XdmfObject", &SWIGTYPE_p_XdmfObject,_wrap_new_XdmfObject, swig_delete_XdmfObject, swig_XdmfObject_methods, swig_XdmfObject_attributes, swig_XdmfObject_bases };
static int
_wrap_SetGlobalDebugOn(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    if (SWIG_GetArgs(interp, objc, objv,":Xdmf::SetGlobalDebugOn") == TCL_ERROR) SWIG_fail;
    SetGlobalDebugOn();


    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_SetGlobalDebugOff(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    if (SWIG_GetArgs(interp, objc, objv,":Xdmf::SetGlobalDebugOff") == TCL_ERROR) SWIG_fail;
    SetGlobalDebugOff();


    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_GetGlobalDebug(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfInt32 result;

    if (SWIG_GetArgs(interp, objc, objv,":Xdmf::GetGlobalDebug") == TCL_ERROR) SWIG_fail;
    result = (XdmfInt32)GetGlobalDebug();

    Tcl_SetObjResult(interp,Tcl_NewIntObj((long) result));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_SetGlobalDebug(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfInt32 arg1 ;

    if (SWIG_GetArgs(interp, objc, objv,"i:Xdmf::SetGlobalDebugDebugLevel ",&arg1) == TCL_ERROR) SWIG_fail;
    SetGlobalDebug(arg1);


    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_GetUnique(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfString arg1 = (XdmfString) NULL ;
    XdmfString result;

    if (SWIG_GetArgs(interp, objc, objv,"|s:Xdmf::GetUniquePattern ",&arg1) == TCL_ERROR) SWIG_fail;
    result = (XdmfString)GetUnique(arg1);

    Tcl_SetObjResult(interp,Tcl_NewStringObj(result,-1));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfObjectToHandle(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfObject *arg1 = (XdmfObject *) 0 ;
    XdmfString result;

    if (SWIG_GetArgs(interp, objc, objv,"o:Xdmf::XdmfObjectToHandleSource ",0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfObject,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    result = (XdmfString)XdmfObjectToHandle(arg1);

    Tcl_SetObjResult(interp,Tcl_NewStringObj(result,-1));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_HandleToXdmfObject(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfConstString arg1 ;
    XdmfObject *result;

    if (SWIG_GetArgs(interp, objc, objv,"s:Xdmf::HandleToXdmfObjectSource ",&arg1) == TCL_ERROR) SWIG_fail;
    result = (XdmfObject *)HandleToXdmfObject(arg1);

    Tcl_SetObjResult(interp,SWIG_NewInstanceObj(interp, (void *) result, SWIGTYPE_p_XdmfObject,0));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_ICE_READ_STREAM64(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    istrstream *arg1 = 0 ;
    long long *arg2 = 0 ;
    istrstream *result;

    if (SWIG_GetArgs(interp, objc, objv,"oo:Xdmf::ICE_READ_STREAM64istr i ",0,0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_istrstream,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[2], (void **) &arg2, SWIGTYPE_p_long_long,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    {
        istrstream &_result_ref = ICE_READ_STREAM64(*arg1,*arg2);
        result = (istrstream *) &_result_ref;
    }

    Tcl_SetObjResult(interp,SWIG_NewInstanceObj(interp, (void *) result, SWIGTYPE_p_istrstream,0));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfTypeToHDF5Type(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfInt32 arg1 ;
    hid_t result;

    if (SWIG_GetArgs(interp, objc, objv,"i:Xdmf::XdmfTypeToHDF5TypeXdmfType ",&arg1) == TCL_ERROR) SWIG_fail;
    result = XdmfTypeToHDF5Type(arg1);

    {
        hid_t * resultptr;
        resultptr = new hid_t((hid_t &) result);
        Tcl_SetObjResult(interp,SWIG_NewInstanceObj(interp,(void*) resultptr, SWIGTYPE_p_hid_t,1));
    }
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_HDF5TypeToXdmfType(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    hid_t arg1 ;
    XdmfInt32 result;
    hid_t *argp1 ;

    if (SWIG_GetArgs(interp, objc, objv,"o:Xdmf::HDF5TypeToXdmfTypeHDF5Type ",0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &argp1, SWIGTYPE_p_hid_t,SWIG_POINTER_EXCEPTION ) != TCL_OK)) SWIG_fail;
    arg1 = *argp1;
    result = (XdmfInt32)HDF5TypeToXdmfType(arg1);

    Tcl_SetObjResult(interp,Tcl_NewIntObj((long) result));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfTypeToString(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfInt32 arg1 ;
    XdmfString result;

    if (SWIG_GetArgs(interp, objc, objv,"i:Xdmf::XdmfTypeToStringXdmfType ",&arg1) == TCL_ERROR) SWIG_fail;
    result = (XdmfString)XdmfTypeToString(arg1);

    Tcl_SetObjResult(interp,Tcl_NewStringObj(result,-1));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_StringToXdmfType(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfString arg1 ;
    XdmfInt32 result;

    if (SWIG_GetArgs(interp, objc, objv,"s:Xdmf::StringToXdmfTypeTypeName ",&arg1) == TCL_ERROR) SWIG_fail;
    result = (XdmfInt32)StringToXdmfType(arg1);

    Tcl_SetObjResult(interp,Tcl_NewIntObj((long) result));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfTypeToClassString(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfInt32 arg1 ;
    XdmfString result;

    if (SWIG_GetArgs(interp, objc, objv,"i:Xdmf::XdmfTypeToClassStringXdmfType ",&arg1) == TCL_ERROR) SWIG_fail;
    result = (XdmfString)XdmfTypeToClassString(arg1);

    Tcl_SetObjResult(interp,Tcl_NewStringObj(result,-1));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_new_XdmfDataDesc(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfDataDesc *result;

    if (SWIG_GetArgs(interp, objc, objv,":Xdmf::new_XdmfDataDesc") == TCL_ERROR) SWIG_fail;
    result = (XdmfDataDesc *)new XdmfDataDesc();

    Tcl_SetObjResult(interp,SWIG_NewInstanceObj(interp, (void *) result, SWIGTYPE_p_XdmfDataDesc,0));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_delete_XdmfDataDesc(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfDataDesc *arg1 = (XdmfDataDesc *) 0 ;

    if (SWIG_GetArgs(interp, objc, objv,"o:Xdmf::delete_XdmfDataDescself ",0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfDataDesc,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    delete arg1;


    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfDataDesc_Print(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfDataDesc *arg1 = (XdmfDataDesc *) 0 ;

    if (SWIG_GetArgs(interp, objc, objv,"o:Xdmf::XdmfDataDesc_Printself ",0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfDataDesc,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    (arg1)->Print();


    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfDataDesc_SetNumberType(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfDataDesc *arg1 = (XdmfDataDesc *) 0 ;
    XdmfInt32 arg2 ;
    XdmfInt64 arg3 = (XdmfInt64) 16 ;
    XdmfInt32 result;

    if (SWIG_GetArgs(interp, objc, objv,"oi|o:Xdmf::XdmfDataDesc_SetNumberTypeself NumberType CompoundSize ",0,&arg2,0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfDataDesc,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    if (objc > 3) {
        arg3 = (XdmfInt64) XDMF_strtoll(Tcl_GetStringFromObj(objv[3],NULL),0,0);
    }
    result = (XdmfInt32)(arg1)->SetNumberType(arg2,arg3);

    Tcl_SetObjResult(interp,Tcl_NewIntObj((long) result));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfDataDesc_SetNumberTypeFromString(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfDataDesc *arg1 = (XdmfDataDesc *) 0 ;
    XdmfString arg2 ;
    XdmfInt64 arg3 = (XdmfInt64) 16 ;
    XdmfInt32 result;

    if (SWIG_GetArgs(interp, objc, objv,"os|o:Xdmf::XdmfDataDesc_SetNumberTypeFromStringself NumberType CompoundSize ",0,&arg2,0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfDataDesc,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    if (objc > 3) {
        arg3 = (XdmfInt64) XDMF_strtoll(Tcl_GetStringFromObj(objv[3],NULL),0,0);
    }
    result = (XdmfInt32)(arg1)->SetNumberTypeFromString(arg2,arg3);

    Tcl_SetObjResult(interp,Tcl_NewIntObj((long) result));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfDataDesc_GetNumberType(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfDataDesc *arg1 = (XdmfDataDesc *) 0 ;
    XdmfInt32 result;

    if (SWIG_GetArgs(interp, objc, objv,"o:Xdmf::XdmfDataDesc_GetNumberTypeself ",0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfDataDesc,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    result = (XdmfInt32)(arg1)->GetNumberType();

    Tcl_SetObjResult(interp,Tcl_NewIntObj((long) result));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfDataDesc_GetNumberTypeAsString(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfDataDesc *arg1 = (XdmfDataDesc *) 0 ;
    XdmfString result;

    if (SWIG_GetArgs(interp, objc, objv,"o:Xdmf::XdmfDataDesc_GetNumberTypeAsStringself ",0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfDataDesc,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    result = (XdmfString)(arg1)->GetNumberTypeAsString();

    Tcl_SetObjResult(interp,Tcl_NewStringObj(result,-1));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfDataDesc_SetShape(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfDataDesc *arg1 = (XdmfDataDesc *) 0 ;
    XdmfInt32 arg2 ;
    XdmfInt64 *arg3 = (XdmfInt64 *) 0 ;
    XdmfInt32 result;

    if (SWIG_GetArgs(interp, objc, objv,"oio:Xdmf::XdmfDataDesc_SetShapeself Rank Dimensions ",0,&arg2,0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfDataDesc,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[3], (void **) &arg3, SWIGTYPE_p_XdmfInt64,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    result = (XdmfInt32)(arg1)->SetShape(arg2,arg3);

    Tcl_SetObjResult(interp,Tcl_NewIntObj((long) result));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfDataDesc_GetShape(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfDataDesc *arg1 = (XdmfDataDesc *) 0 ;
    XdmfInt64 *arg2 = (XdmfInt64 *) 0 ;
    XdmfInt32 result;

    if (SWIG_GetArgs(interp, objc, objv,"oo:Xdmf::XdmfDataDesc_GetShapeself Dimensions ",0,0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfDataDesc,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[2], (void **) &arg2, SWIGTYPE_p_XdmfInt64,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    result = (XdmfInt32)(arg1)->GetShape(arg2);

    Tcl_SetObjResult(interp,Tcl_NewIntObj((long) result));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfDataDesc_GetShapeAsString(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfDataDesc *arg1 = (XdmfDataDesc *) 0 ;
    XdmfString result;

    if (SWIG_GetArgs(interp, objc, objv,"o:Xdmf::XdmfDataDesc_GetShapeAsStringself ",0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfDataDesc,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    result = (XdmfString)(arg1)->GetShapeAsString();

    Tcl_SetObjResult(interp,Tcl_NewStringObj(result,-1));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfDataDesc_CopySelection(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfDataDesc *arg1 = (XdmfDataDesc *) 0 ;
    XdmfDataDesc *arg2 = (XdmfDataDesc *) 0 ;
    XdmfInt32 result;

    if (SWIG_GetArgs(interp, objc, objv,"oo:Xdmf::XdmfDataDesc_CopySelectionself DataDesc ",0,0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfDataDesc,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[2], (void **) &arg2, SWIGTYPE_p_XdmfDataDesc,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    result = (XdmfInt32)(arg1)->CopySelection(arg2);

    Tcl_SetObjResult(interp,Tcl_NewIntObj((long) result));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfDataDesc_CopyShape(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfDataDesc *arg1 = (XdmfDataDesc *) 0 ;
    XdmfDataDesc *arg2 = (XdmfDataDesc *) 0 ;
    XdmfInt32 result;

    if (SWIG_GetArgs(interp, objc, objv,"oo:Xdmf::XdmfDataDesc_CopyShapeself DataDesc ",0,0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfDataDesc,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[2], (void **) &arg2, SWIGTYPE_p_XdmfDataDesc,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    result = (XdmfInt32)(arg1)->CopyShape(arg2);

    Tcl_SetObjResult(interp,Tcl_NewIntObj((long) result));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfDataDesc_CopyType(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfDataDesc *arg1 = (XdmfDataDesc *) 0 ;
    XdmfDataDesc *arg2 = (XdmfDataDesc *) 0 ;
    XdmfInt32 result;

    if (SWIG_GetArgs(interp, objc, objv,"oo:Xdmf::XdmfDataDesc_CopyTypeself DataDesc ",0,0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfDataDesc,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[2], (void **) &arg2, SWIGTYPE_p_XdmfDataDesc,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    result = (XdmfInt32)(arg1)->CopyType(arg2);

    Tcl_SetObjResult(interp,Tcl_NewIntObj((long) result));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfDataDesc_SetNumberOfElements(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfDataDesc *arg1 = (XdmfDataDesc *) 0 ;
    XdmfInt64 arg2 ;
    XdmfInt32 result;

    if (SWIG_GetArgs(interp, objc, objv,"oo:Xdmf::XdmfDataDesc_SetNumberOfElementsself Length ",0,0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfDataDesc,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    arg2 = (XdmfInt64) XDMF_strtoll(Tcl_GetStringFromObj(objv[2],NULL),0,0);
    result = (XdmfInt32)(arg1)->SetNumberOfElements(arg2);

    Tcl_SetObjResult(interp,Tcl_NewIntObj((long) result));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfDataDesc_SetShapeFromString(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfDataDesc *arg1 = (XdmfDataDesc *) 0 ;
    XdmfConstString arg2 ;
    XdmfInt32 result;

    if (SWIG_GetArgs(interp, objc, objv,"os:Xdmf::XdmfDataDesc_SetShapeFromStringself String ",0,&arg2) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfDataDesc,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    result = (XdmfInt32)(arg1)->SetShapeFromString(arg2);

    Tcl_SetObjResult(interp,Tcl_NewIntObj((long) result));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfDataDesc_SelectAll(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfDataDesc *arg1 = (XdmfDataDesc *) 0 ;
    XdmfInt32 result;

    if (SWIG_GetArgs(interp, objc, objv,"o:Xdmf::XdmfDataDesc_SelectAllself ",0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfDataDesc,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    result = (XdmfInt32)(arg1)->SelectAll();

    Tcl_SetObjResult(interp,Tcl_NewIntObj((long) result));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfDataDesc_SelectHyperSlab(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfDataDesc *arg1 = (XdmfDataDesc *) 0 ;
    XdmfInt64 *arg2 = (XdmfInt64 *) 0 ;
    XdmfInt64 *arg3 = (XdmfInt64 *) 0 ;
    XdmfInt64 *arg4 = (XdmfInt64 *) 0 ;
    XdmfInt32 result;

    if (SWIG_GetArgs(interp, objc, objv,"oooo:Xdmf::XdmfDataDesc_SelectHyperSlabself Start Stride Count ",0,0,0,0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfDataDesc,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[2], (void **) &arg2, SWIGTYPE_p_XdmfInt64,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[3], (void **) &arg3, SWIGTYPE_p_XdmfInt64,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[4], (void **) &arg4, SWIGTYPE_p_XdmfInt64,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    result = (XdmfInt32)(arg1)->SelectHyperSlab(arg2,arg3,arg4);

    Tcl_SetObjResult(interp,Tcl_NewIntObj((long) result));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfDataDesc_SelectHyperSlabFromString(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfDataDesc *arg1 = (XdmfDataDesc *) 0 ;
    XdmfString arg2 ;
    XdmfString arg3 ;
    XdmfString arg4 ;
    XdmfInt32 result;

    if (SWIG_GetArgs(interp, objc, objv,"osss:Xdmf::XdmfDataDesc_SelectHyperSlabFromStringself Start Stride Count ",0,&arg2,&arg3,&arg4) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfDataDesc,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    result = (XdmfInt32)(arg1)->SelectHyperSlabFromString(arg2,arg3,arg4);

    Tcl_SetObjResult(interp,Tcl_NewIntObj((long) result));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfDataDesc_GetHyperSlab(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfDataDesc *arg1 = (XdmfDataDesc *) 0 ;
    XdmfInt64 *arg2 = (XdmfInt64 *) 0 ;
    XdmfInt64 *arg3 = (XdmfInt64 *) 0 ;
    XdmfInt64 *arg4 = (XdmfInt64 *) 0 ;
    XdmfInt32 result;

    if (SWIG_GetArgs(interp, objc, objv,"oooo:Xdmf::XdmfDataDesc_GetHyperSlabself Start Stride Count ",0,0,0,0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfDataDesc,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[2], (void **) &arg2, SWIGTYPE_p_XdmfInt64,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[3], (void **) &arg3, SWIGTYPE_p_XdmfInt64,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[4], (void **) &arg4, SWIGTYPE_p_XdmfInt64,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    result = (XdmfInt32)(arg1)->GetHyperSlab(arg2,arg3,arg4);

    Tcl_SetObjResult(interp,Tcl_NewIntObj((long) result));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfDataDesc_GetHyperSlabAsString(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfDataDesc *arg1 = (XdmfDataDesc *) 0 ;
    XdmfString result;

    if (SWIG_GetArgs(interp, objc, objv,"o:Xdmf::XdmfDataDesc_GetHyperSlabAsStringself ",0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfDataDesc,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    result = (XdmfString)(arg1)->GetHyperSlabAsString();

    Tcl_SetObjResult(interp,Tcl_NewStringObj(result,-1));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfDataDesc_SelectCoordinates(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfDataDesc *arg1 = (XdmfDataDesc *) 0 ;
    XdmfInt64 arg2 ;
    XdmfInt64 *arg3 = (XdmfInt64 *) 0 ;
    XdmfInt32 result;

    if (SWIG_GetArgs(interp, objc, objv,"ooo:Xdmf::XdmfDataDesc_SelectCoordinatesself NumberOfElements Coordinates ",0,0,0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfDataDesc,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    arg2 = (XdmfInt64) XDMF_strtoll(Tcl_GetStringFromObj(objv[2],NULL),0,0);
    if ((SWIG_ConvertPtr(interp, objv[3], (void **) &arg3, SWIGTYPE_p_XdmfInt64,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    result = (XdmfInt32)(arg1)->SelectCoordinates(arg2,arg3);

    Tcl_SetObjResult(interp,Tcl_NewIntObj((long) result));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfDataDesc_SelectCoordinatesFromString(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfDataDesc *arg1 = (XdmfDataDesc *) 0 ;
    XdmfString arg2 ;
    XdmfInt32 result;

    if (SWIG_GetArgs(interp, objc, objv,"os:Xdmf::XdmfDataDesc_SelectCoordinatesFromStringself Coordinates ",0,&arg2) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfDataDesc,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    result = (XdmfInt32)(arg1)->SelectCoordinatesFromString(arg2);

    Tcl_SetObjResult(interp,Tcl_NewIntObj((long) result));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfDataDesc_GetCoordinates(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfDataDesc *arg1 = (XdmfDataDesc *) 0 ;
    XdmfInt64 arg2 = (XdmfInt64) 0 ;
    XdmfInt64 arg3 = (XdmfInt64) 0 ;
    XdmfInt64 *result;

    if (SWIG_GetArgs(interp, objc, objv,"o|oo:Xdmf::XdmfDataDesc_GetCoordinatesself Start Nelements ",0,0,0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfDataDesc,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    if (objc > 2) {
        arg2 = (XdmfInt64) XDMF_strtoll(Tcl_GetStringFromObj(objv[2],NULL),0,0);
    }
    if (objc > 3) {
        arg3 = (XdmfInt64) XDMF_strtoll(Tcl_GetStringFromObj(objv[3],NULL),0,0);
    }
    result = (XdmfInt64 *)(arg1)->GetCoordinates(arg2,arg3);

    Tcl_SetObjResult(interp,SWIG_NewInstanceObj(interp, (void *) result, SWIGTYPE_p_XdmfInt64,0));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfDataDesc_GetCoordinatesAsString(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfDataDesc *arg1 = (XdmfDataDesc *) 0 ;
    XdmfInt64 arg2 = (XdmfInt64) 0 ;
    XdmfInt64 arg3 = (XdmfInt64) 0 ;
    XdmfString result;

    if (SWIG_GetArgs(interp, objc, objv,"o|oo:Xdmf::XdmfDataDesc_GetCoordinatesAsStringself Start Nelements ",0,0,0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfDataDesc,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    if (objc > 2) {
        arg2 = (XdmfInt64) XDMF_strtoll(Tcl_GetStringFromObj(objv[2],NULL),0,0);
    }
    if (objc > 3) {
        arg3 = (XdmfInt64) XDMF_strtoll(Tcl_GetStringFromObj(objv[3],NULL),0,0);
    }
    result = (XdmfString)(arg1)->GetCoordinatesAsString(arg2,arg3);

    Tcl_SetObjResult(interp,Tcl_NewStringObj(result,-1));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfDataDesc_GetSelectionSize(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfDataDesc *arg1 = (XdmfDataDesc *) 0 ;
    XdmfInt64 result;

    if (SWIG_GetArgs(interp, objc, objv,"o:Xdmf::XdmfDataDesc_GetSelectionSizeself ",0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfDataDesc,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    result = (XdmfInt64)(arg1)->GetSelectionSize();

    {
        char temp[256];
        sprintf(temp,"%lld", result);
        Tcl_SetObjResult(interp,Tcl_NewStringObj(temp,-1));
    }
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfDataDesc_GetNumberOfElements(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfDataDesc *arg1 = (XdmfDataDesc *) 0 ;
    XdmfInt64 result;

    if (SWIG_GetArgs(interp, objc, objv,"o:Xdmf::XdmfDataDesc_GetNumberOfElementsself ",0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfDataDesc,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    result = (XdmfInt64)(arg1)->GetNumberOfElements();

    {
        char temp[256];
        sprintf(temp,"%lld", result);
        Tcl_SetObjResult(interp,Tcl_NewStringObj(temp,-1));
    }
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfDataDesc_GetRank(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfDataDesc *arg1 = (XdmfDataDesc *) 0 ;
    XdmfInt32 result;

    if (SWIG_GetArgs(interp, objc, objv,"o:Xdmf::XdmfDataDesc_GetRankself ",0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfDataDesc,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    result = (XdmfInt32)(arg1)->GetRank();

    Tcl_SetObjResult(interp,Tcl_NewIntObj((long) result));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfDataDesc_GetDimension(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfDataDesc *arg1 = (XdmfDataDesc *) 0 ;
    XdmfInt64 arg2 ;
    XdmfInt64 result;

    if (SWIG_GetArgs(interp, objc, objv,"oo:Xdmf::XdmfDataDesc_GetDimensionself Index ",0,0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfDataDesc,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    arg2 = (XdmfInt64) XDMF_strtoll(Tcl_GetStringFromObj(objv[2],NULL),0,0);
    result = (XdmfInt64)(arg1)->GetDimension(arg2);

    {
        char temp[256];
        sprintf(temp,"%lld", result);
        Tcl_SetObjResult(interp,Tcl_NewStringObj(temp,-1));
    }
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfDataDesc_GetStart(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfDataDesc *arg1 = (XdmfDataDesc *) 0 ;
    XdmfInt64 arg2 ;
    XdmfInt64 result;

    if (SWIG_GetArgs(interp, objc, objv,"oo:Xdmf::XdmfDataDesc_GetStartself Index ",0,0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfDataDesc,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    arg2 = (XdmfInt64) XDMF_strtoll(Tcl_GetStringFromObj(objv[2],NULL),0,0);
    result = (XdmfInt64)(arg1)->GetStart(arg2);

    {
        char temp[256];
        sprintf(temp,"%lld", result);
        Tcl_SetObjResult(interp,Tcl_NewStringObj(temp,-1));
    }
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfDataDesc_GetStride(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfDataDesc *arg1 = (XdmfDataDesc *) 0 ;
    XdmfInt64 arg2 ;
    XdmfInt64 result;

    if (SWIG_GetArgs(interp, objc, objv,"oo:Xdmf::XdmfDataDesc_GetStrideself Index ",0,0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfDataDesc,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    arg2 = (XdmfInt64) XDMF_strtoll(Tcl_GetStringFromObj(objv[2],NULL),0,0);
    result = (XdmfInt64)(arg1)->GetStride(arg2);

    {
        char temp[256];
        sprintf(temp,"%lld", result);
        Tcl_SetObjResult(interp,Tcl_NewStringObj(temp,-1));
    }
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfDataDesc_GetCount(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfDataDesc *arg1 = (XdmfDataDesc *) 0 ;
    XdmfInt64 arg2 ;
    XdmfInt64 result;

    if (SWIG_GetArgs(interp, objc, objv,"oo:Xdmf::XdmfDataDesc_GetCountself Index ",0,0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfDataDesc,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    arg2 = (XdmfInt64) XDMF_strtoll(Tcl_GetStringFromObj(objv[2],NULL),0,0);
    result = (XdmfInt64)(arg1)->GetCount(arg2);

    {
        char temp[256];
        sprintf(temp,"%lld", result);
        Tcl_SetObjResult(interp,Tcl_NewStringObj(temp,-1));
    }
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfDataDesc_GetSelectionType(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfDataDesc *arg1 = (XdmfDataDesc *) 0 ;
    XdmfInt32 result;

    if (SWIG_GetArgs(interp, objc, objv,"o:Xdmf::XdmfDataDesc_GetSelectionTypeself ",0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfDataDesc,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    result = (XdmfInt32)(arg1)->GetSelectionType();

    Tcl_SetObjResult(interp,Tcl_NewIntObj((long) result));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfDataDesc_GetSelectionTypeAsString(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfDataDesc *arg1 = (XdmfDataDesc *) 0 ;
    XdmfString result;

    if (SWIG_GetArgs(interp, objc, objv,"o:Xdmf::XdmfDataDesc_GetSelectionTypeAsStringself ",0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfDataDesc,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    result = (XdmfString)(arg1)->GetSelectionTypeAsString();

    Tcl_SetObjResult(interp,Tcl_NewStringObj(result,-1));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfDataDesc_GetDataType(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfDataDesc *arg1 = (XdmfDataDesc *) 0 ;
    hid_t result;

    if (SWIG_GetArgs(interp, objc, objv,"o:Xdmf::XdmfDataDesc_GetDataTypeself ",0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfDataDesc,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    result = (arg1)->GetDataType();

    {
        hid_t * resultptr;
        resultptr = new hid_t((hid_t &) result);
        Tcl_SetObjResult(interp,SWIG_NewInstanceObj(interp,(void*) resultptr, SWIGTYPE_p_hid_t,1));
    }
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfDataDesc_GetDataSpace(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfDataDesc *arg1 = (XdmfDataDesc *) 0 ;
    hid_t result;

    if (SWIG_GetArgs(interp, objc, objv,"o:Xdmf::XdmfDataDesc_GetDataSpaceself ",0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfDataDesc,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    result = (arg1)->GetDataSpace();

    {
        hid_t * resultptr;
        resultptr = new hid_t((hid_t &) result);
        Tcl_SetObjResult(interp,SWIG_NewInstanceObj(interp,(void*) resultptr, SWIGTYPE_p_hid_t,1));
    }
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfDataDesc_GetElementSize(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfDataDesc *arg1 = (XdmfDataDesc *) 0 ;
    XdmfInt64 result;

    if (SWIG_GetArgs(interp, objc, objv,"o:Xdmf::XdmfDataDesc_GetElementSizeself ",0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfDataDesc,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    result = (XdmfInt64)(arg1)->GetElementSize();

    {
        char temp[256];
        sprintf(temp,"%lld", result);
        Tcl_SetObjResult(interp,Tcl_NewStringObj(temp,-1));
    }
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfDataDesc_AddCompoundMemberFromString(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfDataDesc *arg1 = (XdmfDataDesc *) 0 ;
    XdmfConstString arg2 ;
    XdmfString arg3 ;
    XdmfString arg4 ;
    XdmfInt64 arg5 = (XdmfInt64) 0 ;
    XdmfInt32 result;

    if (SWIG_GetArgs(interp, objc, objv,"osss|o:Xdmf::XdmfDataDesc_AddCompoundMemberFromStringself Name NumberType Shape Offset ",0,&arg2,&arg3,&arg4,0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfDataDesc,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    if (objc > 5) {
        arg5 = (XdmfInt64) XDMF_strtoll(Tcl_GetStringFromObj(objv[5],NULL),0,0);
    }
    result = (XdmfInt32)(arg1)->AddCompoundMemberFromString(arg2,arg3,arg4,arg5);

    Tcl_SetObjResult(interp,Tcl_NewIntObj((long) result));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfDataDesc_GetNumberOfMembers(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfDataDesc *arg1 = (XdmfDataDesc *) 0 ;
    XdmfInt64 result;

    if (SWIG_GetArgs(interp, objc, objv,"o:Xdmf::XdmfDataDesc_GetNumberOfMembersself ",0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfDataDesc,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    result = (XdmfInt64)(arg1)->GetNumberOfMembers();

    {
        char temp[256];
        sprintf(temp,"%lld", result);
        Tcl_SetObjResult(interp,Tcl_NewStringObj(temp,-1));
    }
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfDataDesc_GetMemberName(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfDataDesc *arg1 = (XdmfDataDesc *) 0 ;
    XdmfInt64 arg2 ;
    XdmfString result;

    if (SWIG_GetArgs(interp, objc, objv,"oo:Xdmf::XdmfDataDesc_GetMemberNameself Index ",0,0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfDataDesc,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    arg2 = (XdmfInt64) XDMF_strtoll(Tcl_GetStringFromObj(objv[2],NULL),0,0);
    result = (XdmfString)(arg1)->GetMemberName(arg2);

    Tcl_SetObjResult(interp,Tcl_NewStringObj(result,-1));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfDataDesc_GetMemberLength(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfDataDesc *arg1 = (XdmfDataDesc *) 0 ;
    XdmfInt64 arg2 ;
    XdmfInt64 result;

    if (SWIG_GetArgs(interp, objc, objv,"oo:Xdmf::XdmfDataDesc_GetMemberLengthself Index ",0,0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfDataDesc,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    arg2 = (XdmfInt64) XDMF_strtoll(Tcl_GetStringFromObj(objv[2],NULL),0,0);
    result = (XdmfInt64)(arg1)->GetMemberLength(arg2);

    {
        char temp[256];
        sprintf(temp,"%lld", result);
        Tcl_SetObjResult(interp,Tcl_NewStringObj(temp,-1));
    }
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfDataDesc_GetMemberSize(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfDataDesc *arg1 = (XdmfDataDesc *) 0 ;
    XdmfInt64 arg2 ;
    XdmfInt64 result;

    if (SWIG_GetArgs(interp, objc, objv,"oo:Xdmf::XdmfDataDesc_GetMemberSizeself Index ",0,0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfDataDesc,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    arg2 = (XdmfInt64) XDMF_strtoll(Tcl_GetStringFromObj(objv[2],NULL),0,0);
    result = (XdmfInt64)(arg1)->GetMemberSize(arg2);

    {
        char temp[256];
        sprintf(temp,"%lld", result);
        Tcl_SetObjResult(interp,Tcl_NewStringObj(temp,-1));
    }
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfDataDesc_GetMemberShape(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfDataDesc *arg1 = (XdmfDataDesc *) 0 ;
    XdmfInt64 arg2 ;
    XdmfInt64 *arg3 = (XdmfInt64 *) 0 ;
    XdmfInt32 result;

    if (SWIG_GetArgs(interp, objc, objv,"ooo:Xdmf::XdmfDataDesc_GetMemberShapeself Index Dimensions ",0,0,0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfDataDesc,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    arg2 = (XdmfInt64) XDMF_strtoll(Tcl_GetStringFromObj(objv[2],NULL),0,0);
    if ((SWIG_ConvertPtr(interp, objv[3], (void **) &arg3, SWIGTYPE_p_XdmfInt64,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    result = (XdmfInt32)(arg1)->GetMemberShape(arg2,arg3);

    Tcl_SetObjResult(interp,Tcl_NewIntObj((long) result));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfDataDesc_GetMemberShapeAsString(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfDataDesc *arg1 = (XdmfDataDesc *) 0 ;
    XdmfInt64 arg2 ;
    XdmfString result;

    if (SWIG_GetArgs(interp, objc, objv,"oo:Xdmf::XdmfDataDesc_GetMemberShapeAsStringself Index ",0,0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfDataDesc,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    arg2 = (XdmfInt64) XDMF_strtoll(Tcl_GetStringFromObj(objv[2],NULL),0,0);
    result = (XdmfString)(arg1)->GetMemberShapeAsString(arg2);

    Tcl_SetObjResult(interp,Tcl_NewStringObj(result,-1));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfDataDesc_GetMemberType(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfDataDesc *arg1 = (XdmfDataDesc *) 0 ;
    XdmfInt64 arg2 ;
    XdmfInt32 result;

    if (SWIG_GetArgs(interp, objc, objv,"oo:Xdmf::XdmfDataDesc_GetMemberTypeself Index ",0,0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfDataDesc,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    arg2 = (XdmfInt64) XDMF_strtoll(Tcl_GetStringFromObj(objv[2],NULL),0,0);
    result = (XdmfInt32)(arg1)->GetMemberType(arg2);

    Tcl_SetObjResult(interp,Tcl_NewIntObj((long) result));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfDataDesc_GetMemberTypeAsString(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfDataDesc *arg1 = (XdmfDataDesc *) 0 ;
    XdmfInt64 arg2 ;
    XdmfString result;

    if (SWIG_GetArgs(interp, objc, objv,"oo:Xdmf::XdmfDataDesc_GetMemberTypeAsStringself Index ",0,0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfDataDesc,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    arg2 = (XdmfInt64) XDMF_strtoll(Tcl_GetStringFromObj(objv[2],NULL),0,0);
    result = (XdmfString)(arg1)->GetMemberTypeAsString(arg2);

    Tcl_SetObjResult(interp,Tcl_NewStringObj(result,-1));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfDataDesc_GetMemberOffset(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfDataDesc *arg1 = (XdmfDataDesc *) 0 ;
    XdmfInt64 arg2 ;
    XdmfInt64 result;

    if (SWIG_GetArgs(interp, objc, objv,"oo:Xdmf::XdmfDataDesc_GetMemberOffsetself Index ",0,0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfDataDesc,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    arg2 = (XdmfInt64) XDMF_strtoll(Tcl_GetStringFromObj(objv[2],NULL),0,0);
    result = (XdmfInt64)(arg1)->GetMemberOffset(arg2);

    {
        char temp[256];
        sprintf(temp,"%lld", result);
        Tcl_SetObjResult(interp,Tcl_NewStringObj(temp,-1));
    }
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static void swig_delete_XdmfDataDesc(void *obj) {
XdmfDataDesc *arg1 = (XdmfDataDesc *) obj;
delete arg1;
}
static swig_method swig_XdmfDataDesc_methods[] = {
    {"Print", _wrap_XdmfDataDesc_Print},
    {"SetNumberType", _wrap_XdmfDataDesc_SetNumberType},
    {"SetNumberTypeFromString", _wrap_XdmfDataDesc_SetNumberTypeFromString},
    {"GetNumberType", _wrap_XdmfDataDesc_GetNumberType},
    {"GetNumberTypeAsString", _wrap_XdmfDataDesc_GetNumberTypeAsString},
    {"SetShape", _wrap_XdmfDataDesc_SetShape},
    {"GetShape", _wrap_XdmfDataDesc_GetShape},
    {"GetShapeAsString", _wrap_XdmfDataDesc_GetShapeAsString},
    {"CopySelection", _wrap_XdmfDataDesc_CopySelection},
    {"CopyShape", _wrap_XdmfDataDesc_CopyShape},
    {"CopyType", _wrap_XdmfDataDesc_CopyType},
    {"SetNumberOfElements", _wrap_XdmfDataDesc_SetNumberOfElements},
    {"SetShapeFromString", _wrap_XdmfDataDesc_SetShapeFromString},
    {"SelectAll", _wrap_XdmfDataDesc_SelectAll},
    {"SelectHyperSlab", _wrap_XdmfDataDesc_SelectHyperSlab},
    {"SelectHyperSlabFromString", _wrap_XdmfDataDesc_SelectHyperSlabFromString},
    {"GetHyperSlab", _wrap_XdmfDataDesc_GetHyperSlab},
    {"GetHyperSlabAsString", _wrap_XdmfDataDesc_GetHyperSlabAsString},
    {"SelectCoordinates", _wrap_XdmfDataDesc_SelectCoordinates},
    {"SelectCoordinatesFromString", _wrap_XdmfDataDesc_SelectCoordinatesFromString},
    {"GetCoordinates", _wrap_XdmfDataDesc_GetCoordinates},
    {"GetCoordinatesAsString", _wrap_XdmfDataDesc_GetCoordinatesAsString},
    {"GetSelectionSize", _wrap_XdmfDataDesc_GetSelectionSize},
    {"GetNumberOfElements", _wrap_XdmfDataDesc_GetNumberOfElements},
    {"GetRank", _wrap_XdmfDataDesc_GetRank},
    {"GetDimension", _wrap_XdmfDataDesc_GetDimension},
    {"GetStart", _wrap_XdmfDataDesc_GetStart},
    {"GetStride", _wrap_XdmfDataDesc_GetStride},
    {"GetCount", _wrap_XdmfDataDesc_GetCount},
    {"GetSelectionType", _wrap_XdmfDataDesc_GetSelectionType},
    {"GetSelectionTypeAsString", _wrap_XdmfDataDesc_GetSelectionTypeAsString},
    {"GetDataType", _wrap_XdmfDataDesc_GetDataType},
    {"GetDataSpace", _wrap_XdmfDataDesc_GetDataSpace},
    {"GetElementSize", _wrap_XdmfDataDesc_GetElementSize},
    {"AddCompoundMemberFromString", _wrap_XdmfDataDesc_AddCompoundMemberFromString},
    {"GetNumberOfMembers", _wrap_XdmfDataDesc_GetNumberOfMembers},
    {"GetMemberName", _wrap_XdmfDataDesc_GetMemberName},
    {"GetMemberLength", _wrap_XdmfDataDesc_GetMemberLength},
    {"GetMemberSize", _wrap_XdmfDataDesc_GetMemberSize},
    {"GetMemberShape", _wrap_XdmfDataDesc_GetMemberShape},
    {"GetMemberShapeAsString", _wrap_XdmfDataDesc_GetMemberShapeAsString},
    {"GetMemberType", _wrap_XdmfDataDesc_GetMemberType},
    {"GetMemberTypeAsString", _wrap_XdmfDataDesc_GetMemberTypeAsString},
    {"GetMemberOffset", _wrap_XdmfDataDesc_GetMemberOffset},
    {0,0}
};
static swig_attribute swig_XdmfDataDesc_attributes[] = {
    {0,0,0}
};
extern swig_class _wrap_class_XdmfObject;
static swig_class *swig_XdmfDataDesc_bases[] = {&_wrap_class_XdmfObject,0};
swig_class _wrap_class_XdmfDataDesc = { "XdmfDataDesc", &SWIGTYPE_p_XdmfDataDesc,_wrap_new_XdmfDataDesc, swig_delete_XdmfDataDesc, swig_XdmfDataDesc_methods, swig_XdmfDataDesc_attributes, swig_XdmfDataDesc_bases };
static int
_wrap_new_XdmfArray(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfArray *result;

    if (SWIG_GetArgs(interp, objc, objv,":Xdmf::new_XdmfArray") == TCL_ERROR) SWIG_fail;
    result = (XdmfArray *)new XdmfArray();

    Tcl_SetObjResult(interp,SWIG_NewInstanceObj(interp, (void *) result, SWIGTYPE_p_XdmfArray,0));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_delete_XdmfArray(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfArray *arg1 = (XdmfArray *) 0 ;

    if (SWIG_GetArgs(interp, objc, objv,"o:Xdmf::delete_XdmfArrayself ",0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfArray,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    delete arg1;


    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfArray_GetClassName(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfArray *arg1 = (XdmfArray *) 0 ;
    XdmfConstString result;

    if (SWIG_GetArgs(interp, objc, objv,"o:Xdmf::XdmfArray_GetClassNameself ",0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfArray,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    result = (XdmfConstString)(arg1)->GetClassName();

    Tcl_SetObjResult(interp,Tcl_NewStringObj(result,-1));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfArray_GetTagName(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfArray *arg1 = (XdmfArray *) 0 ;
    XdmfString result;

    if (SWIG_GetArgs(interp, objc, objv,"o:Xdmf::XdmfArray_GetTagNameself ",0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfArray,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    result = (XdmfString)(arg1)->GetTagName();

    Tcl_SetObjResult(interp,Tcl_NewStringObj(result,-1));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfArray_GetCoreLength(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfArray *arg1 = (XdmfArray *) 0 ;
    XdmfLength result;

    if (SWIG_GetArgs(interp, objc, objv,"o:Xdmf::XdmfArray_GetCoreLengthself ",0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfArray,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    result = (XdmfLength)(arg1)->GetCoreLength();

    {
        char temp[256];
        sprintf(temp,"%lld", result);
        Tcl_SetObjResult(interp,Tcl_NewStringObj(temp,-1));
    }
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfArray_Allocate(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfArray *arg1 = (XdmfArray *) 0 ;
    XdmfInt32 result;

    if (SWIG_GetArgs(interp, objc, objv,"o:Xdmf::XdmfArray_Allocateself ",0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfArray,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    result = (XdmfInt32)(arg1)->Allocate();

    Tcl_SetObjResult(interp,Tcl_NewIntObj((long) result));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfArray_SetShape(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfArray *arg1 = (XdmfArray *) 0 ;
    XdmfInt32 arg2 ;
    XdmfInt64 *arg3 = (XdmfInt64 *) 0 ;
    XdmfInt32 result;

    if (SWIG_GetArgs(interp, objc, objv,"oio:Xdmf::XdmfArray_SetShapeself Rank Dimensions ",0,&arg2,0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfArray,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[3], (void **) &arg3, SWIGTYPE_p_XdmfInt64,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    result = (XdmfInt32)(arg1)->SetShape(arg2,arg3);

    Tcl_SetObjResult(interp,Tcl_NewIntObj((long) result));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfArray_SetShapeFromString(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfArray *arg1 = (XdmfArray *) 0 ;
    XdmfString arg2 ;
    XdmfInt32 result;

    if (SWIG_GetArgs(interp, objc, objv,"os:Xdmf::XdmfArray_SetShapeFromStringself Dimensions ",0,&arg2) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfArray,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    result = (XdmfInt32)(arg1)->SetShapeFromString(arg2);

    Tcl_SetObjResult(interp,Tcl_NewIntObj((long) result));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfArray_SetNumberOfElements(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfArray *arg1 = (XdmfArray *) 0 ;
    XdmfInt64 arg2 ;
    XdmfInt32 result;

    if (SWIG_GetArgs(interp, objc, objv,"oo:Xdmf::XdmfArray_SetNumberOfElementsself Length ",0,0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfArray,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    arg2 = (XdmfInt64) XDMF_strtoll(Tcl_GetStringFromObj(objv[2],NULL),0,0);
    result = (XdmfInt32)(arg1)->SetNumberOfElements(arg2);

    Tcl_SetObjResult(interp,Tcl_NewIntObj((long) result));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfArray_ReformFromString(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfArray *arg1 = (XdmfArray *) 0 ;
    XdmfConstString arg2 ;
    XdmfInt32 result;

    if (SWIG_GetArgs(interp, objc, objv,"os:Xdmf::XdmfArray_ReformFromStringself Dimensions ",0,&arg2) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfArray,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    result = (XdmfInt32)(arg1)->ReformFromString(arg2);

    Tcl_SetObjResult(interp,Tcl_NewIntObj((long) result));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfArray_CopyShape(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfArray *arg1 = (XdmfArray *) 0 ;
    XdmfDataDesc *arg2 = (XdmfDataDesc *) 0 ;
    XdmfInt32 result;

    if (SWIG_GetArgs(interp, objc, objv,"oo:Xdmf::XdmfArray_CopyShapeself DataDesc ",0,0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfArray,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[2], (void **) &arg2, SWIGTYPE_p_XdmfDataDesc,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    result = (XdmfInt32)(arg1)->CopyShape(arg2);

    Tcl_SetObjResult(interp,Tcl_NewIntObj((long) result));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfArray_GetDataPointer(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfArray *arg1 = (XdmfArray *) 0 ;
    XdmfInt64 arg2 = (XdmfInt64) 0 ;
    XdmfPointer result;

    if (SWIG_GetArgs(interp, objc, objv,"o|o:Xdmf::XdmfArray_GetDataPointerself Index ",0,0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfArray,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    if (objc > 2) {
        arg2 = (XdmfInt64) XDMF_strtoll(Tcl_GetStringFromObj(objv[2],NULL),0,0);
    }
    result = (XdmfPointer)(arg1)->GetDataPointer(arg2);

    Tcl_SetObjResult(interp,SWIG_NewInstanceObj(interp, (void *) result, SWIGTYPE_XdmfPointer,0));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfArray_SetDataPointer(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfArray *arg1 = (XdmfArray *) 0 ;
    XdmfPointer arg2 = (XdmfPointer) 0 ;

    if (SWIG_GetArgs(interp, objc, objv,"oo:Xdmf::XdmfArray_SetDataPointerself Pointer ",0,0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfArray,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[2], (void **) &arg2, 0,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    (arg1)->SetDataPointer(arg2);


    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfArray_SetValueFromFloat64(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfArray *arg1 = (XdmfArray *) 0 ;
    XdmfInt64 arg2 ;
    XdmfFloat64 arg3 ;
    XdmfInt32 result;

    if (SWIG_GetArgs(interp, objc, objv,"ood:Xdmf::XdmfArray_SetValueFromFloat64self Index Value ",0,0,&arg3) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfArray,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    arg2 = (XdmfInt64) XDMF_strtoll(Tcl_GetStringFromObj(objv[2],NULL),0,0);
    result = (XdmfInt32)(arg1)->SetValueFromFloat64(arg2,arg3);

    Tcl_SetObjResult(interp,Tcl_NewIntObj((long) result));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfArray_SetValueFromInt64(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfArray *arg1 = (XdmfArray *) 0 ;
    XdmfInt64 arg2 ;
    XdmfInt64 arg3 ;
    XdmfInt32 result;

    if (SWIG_GetArgs(interp, objc, objv,"ooo:Xdmf::XdmfArray_SetValueFromInt64self Index Value ",0,0,0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfArray,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    arg2 = (XdmfInt64) XDMF_strtoll(Tcl_GetStringFromObj(objv[2],NULL),0,0);
    arg3 = (XdmfInt64) XDMF_strtoll(Tcl_GetStringFromObj(objv[3],NULL),0,0);
    result = (XdmfInt32)(arg1)->SetValueFromInt64(arg2,arg3);

    Tcl_SetObjResult(interp,Tcl_NewIntObj((long) result));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfArray_SetValues(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfArray *arg1 = (XdmfArray *) 0 ;
    XdmfInt64 arg2 ;
    XdmfConstString arg3 ;
    XdmfInt64 arg4 = (XdmfInt64) 1 ;
    XdmfInt64 arg5 = (XdmfInt64) 1 ;
    XdmfInt32 result;

    if (SWIG_GetArgs(interp, objc, objv,"oos|oo:Xdmf::XdmfArray_SetValuesself Index Values ArrayStride ValuesStride ",0,0,&arg3,0,0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfArray,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    arg2 = (XdmfInt64) XDMF_strtoll(Tcl_GetStringFromObj(objv[2],NULL),0,0);
    if (objc > 4) {
        arg4 = (XdmfInt64) XDMF_strtoll(Tcl_GetStringFromObj(objv[4],NULL),0,0);
    }
    if (objc > 5) {
        arg5 = (XdmfInt64) XDMF_strtoll(Tcl_GetStringFromObj(objv[5],NULL),0,0);
    }
    result = (XdmfInt32)(arg1)->SetValues(arg2,arg3,arg4,arg5);

    Tcl_SetObjResult(interp,Tcl_NewIntObj((long) result));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfArray_GetValuesAsInt8(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfArray *arg1 = (XdmfArray *) 0 ;
    XdmfInt64 arg2 ;
    XdmfInt8 *arg3 = (XdmfInt8 *) 0 ;
    XdmfInt64 arg4 ;
    XdmfInt64 arg5 = (XdmfInt64) 1 ;
    XdmfInt64 arg6 = (XdmfInt64) 1 ;
    XdmfInt32 result;

    if (SWIG_GetArgs(interp, objc, objv,"oooo|oo:Xdmf::XdmfArray_GetValuesAsInt8self Index Values NumberOfValues ArrayStride ValuesStride ",0,0,0,0,0,0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfArray,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    arg2 = (XdmfInt64) XDMF_strtoll(Tcl_GetStringFromObj(objv[2],NULL),0,0);
    if ((SWIG_ConvertPtr(interp, objv[3], (void **) &arg3, SWIGTYPE_p_XdmfInt8,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    arg4 = (XdmfInt64) XDMF_strtoll(Tcl_GetStringFromObj(objv[4],NULL),0,0);
    if (objc > 5) {
        arg5 = (XdmfInt64) XDMF_strtoll(Tcl_GetStringFromObj(objv[5],NULL),0,0);
    }
    if (objc > 6) {
        arg6 = (XdmfInt64) XDMF_strtoll(Tcl_GetStringFromObj(objv[6],NULL),0,0);
    }
    result = (XdmfInt32)(arg1)->GetValuesAsInt8(arg2,arg3,arg4,arg5,arg6);

    Tcl_SetObjResult(interp,Tcl_NewIntObj((long) result));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfArray_SetValuesFromInt8(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfArray *arg1 = (XdmfArray *) 0 ;
    XdmfInt64 arg2 ;
    XdmfInt8 *arg3 = (XdmfInt8 *) 0 ;
    XdmfInt64 arg4 ;
    XdmfInt64 arg5 = (XdmfInt64) 1 ;
    XdmfInt64 arg6 = (XdmfInt64) 1 ;
    XdmfInt32 result;

    if (SWIG_GetArgs(interp, objc, objv,"oooo|oo:Xdmf::XdmfArray_SetValuesFromInt8self Index Values NumberOfValues ArrayStride ValuesStride ",0,0,0,0,0,0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfArray,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    arg2 = (XdmfInt64) XDMF_strtoll(Tcl_GetStringFromObj(objv[2],NULL),0,0);
    if ((SWIG_ConvertPtr(interp, objv[3], (void **) &arg3, SWIGTYPE_p_XdmfInt8,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    arg4 = (XdmfInt64) XDMF_strtoll(Tcl_GetStringFromObj(objv[4],NULL),0,0);
    if (objc > 5) {
        arg5 = (XdmfInt64) XDMF_strtoll(Tcl_GetStringFromObj(objv[5],NULL),0,0);
    }
    if (objc > 6) {
        arg6 = (XdmfInt64) XDMF_strtoll(Tcl_GetStringFromObj(objv[6],NULL),0,0);
    }
    result = (XdmfInt32)(arg1)->SetValuesFromInt8(arg2,arg3,arg4,arg5,arg6);

    Tcl_SetObjResult(interp,Tcl_NewIntObj((long) result));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfArray_GetValuesAsInt32(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfArray *arg1 = (XdmfArray *) 0 ;
    XdmfInt64 arg2 ;
    XdmfInt32 *arg3 = (XdmfInt32 *) 0 ;
    XdmfInt64 arg4 ;
    XdmfInt64 arg5 = (XdmfInt64) 1 ;
    XdmfInt64 arg6 = (XdmfInt64) 1 ;
    XdmfInt32 result;

    if (SWIG_GetArgs(interp, objc, objv,"oooo|oo:Xdmf::XdmfArray_GetValuesAsInt32self Index Values NumberOfValues ArrayStride ValuesStride ",0,0,0,0,0,0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfArray,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    arg2 = (XdmfInt64) XDMF_strtoll(Tcl_GetStringFromObj(objv[2],NULL),0,0);
    if ((SWIG_ConvertPtr(interp, objv[3], (void **) &arg3, SWIGTYPE_p_XdmfInt32,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    arg4 = (XdmfInt64) XDMF_strtoll(Tcl_GetStringFromObj(objv[4],NULL),0,0);
    if (objc > 5) {
        arg5 = (XdmfInt64) XDMF_strtoll(Tcl_GetStringFromObj(objv[5],NULL),0,0);
    }
    if (objc > 6) {
        arg6 = (XdmfInt64) XDMF_strtoll(Tcl_GetStringFromObj(objv[6],NULL),0,0);
    }
    result = (XdmfInt32)(arg1)->GetValuesAsInt32(arg2,arg3,arg4,arg5,arg6);

    Tcl_SetObjResult(interp,Tcl_NewIntObj((long) result));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfArray_SetValuesFromInt32(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfArray *arg1 = (XdmfArray *) 0 ;
    XdmfInt64 arg2 ;
    XdmfInt32 *arg3 = (XdmfInt32 *) 0 ;
    XdmfInt64 arg4 ;
    XdmfInt64 arg5 = (XdmfInt64) 1 ;
    XdmfInt64 arg6 = (XdmfInt64) 1 ;
    XdmfInt32 result;

    if (SWIG_GetArgs(interp, objc, objv,"oooo|oo:Xdmf::XdmfArray_SetValuesFromInt32self Index Values NumberOfValues ArrayStride ValuesStride ",0,0,0,0,0,0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfArray,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    arg2 = (XdmfInt64) XDMF_strtoll(Tcl_GetStringFromObj(objv[2],NULL),0,0);
    if ((SWIG_ConvertPtr(interp, objv[3], (void **) &arg3, SWIGTYPE_p_XdmfInt32,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    arg4 = (XdmfInt64) XDMF_strtoll(Tcl_GetStringFromObj(objv[4],NULL),0,0);
    if (objc > 5) {
        arg5 = (XdmfInt64) XDMF_strtoll(Tcl_GetStringFromObj(objv[5],NULL),0,0);
    }
    if (objc > 6) {
        arg6 = (XdmfInt64) XDMF_strtoll(Tcl_GetStringFromObj(objv[6],NULL),0,0);
    }
    result = (XdmfInt32)(arg1)->SetValuesFromInt32(arg2,arg3,arg4,arg5,arg6);

    Tcl_SetObjResult(interp,Tcl_NewIntObj((long) result));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfArray_GetValuesAsInt64(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfArray *arg1 = (XdmfArray *) 0 ;
    XdmfInt64 arg2 ;
    XdmfInt64 *arg3 = (XdmfInt64 *) 0 ;
    XdmfInt64 arg4 ;
    XdmfInt64 arg5 = (XdmfInt64) 1 ;
    XdmfInt64 arg6 = (XdmfInt64) 1 ;
    XdmfInt32 result;

    if (SWIG_GetArgs(interp, objc, objv,"oooo|oo:Xdmf::XdmfArray_GetValuesAsInt64self Index Values NumberOfValues ArrayStride ValuesStride ",0,0,0,0,0,0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfArray,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    arg2 = (XdmfInt64) XDMF_strtoll(Tcl_GetStringFromObj(objv[2],NULL),0,0);
    if ((SWIG_ConvertPtr(interp, objv[3], (void **) &arg3, SWIGTYPE_p_XdmfInt64,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    arg4 = (XdmfInt64) XDMF_strtoll(Tcl_GetStringFromObj(objv[4],NULL),0,0);
    if (objc > 5) {
        arg5 = (XdmfInt64) XDMF_strtoll(Tcl_GetStringFromObj(objv[5],NULL),0,0);
    }
    if (objc > 6) {
        arg6 = (XdmfInt64) XDMF_strtoll(Tcl_GetStringFromObj(objv[6],NULL),0,0);
    }
    result = (XdmfInt32)(arg1)->GetValuesAsInt64(arg2,arg3,arg4,arg5,arg6);

    Tcl_SetObjResult(interp,Tcl_NewIntObj((long) result));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfArray_SetValuesFromInt64(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfArray *arg1 = (XdmfArray *) 0 ;
    XdmfInt64 arg2 ;
    XdmfInt64 *arg3 = (XdmfInt64 *) 0 ;
    XdmfInt64 arg4 ;
    XdmfInt64 arg5 = (XdmfInt64) 1 ;
    XdmfInt64 arg6 = (XdmfInt64) 1 ;
    XdmfInt32 result;

    if (SWIG_GetArgs(interp, objc, objv,"oooo|oo:Xdmf::XdmfArray_SetValuesFromInt64self Index Values NumberOfValues ArrayStride ValuesStride ",0,0,0,0,0,0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfArray,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    arg2 = (XdmfInt64) XDMF_strtoll(Tcl_GetStringFromObj(objv[2],NULL),0,0);
    if ((SWIG_ConvertPtr(interp, objv[3], (void **) &arg3, SWIGTYPE_p_XdmfInt64,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    arg4 = (XdmfInt64) XDMF_strtoll(Tcl_GetStringFromObj(objv[4],NULL),0,0);
    if (objc > 5) {
        arg5 = (XdmfInt64) XDMF_strtoll(Tcl_GetStringFromObj(objv[5],NULL),0,0);
    }
    if (objc > 6) {
        arg6 = (XdmfInt64) XDMF_strtoll(Tcl_GetStringFromObj(objv[6],NULL),0,0);
    }
    result = (XdmfInt32)(arg1)->SetValuesFromInt64(arg2,arg3,arg4,arg5,arg6);

    Tcl_SetObjResult(interp,Tcl_NewIntObj((long) result));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfArray_GetValuesAsFloat32(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfArray *arg1 = (XdmfArray *) 0 ;
    XdmfInt64 arg2 ;
    XdmfFloat32 *arg3 = (XdmfFloat32 *) 0 ;
    XdmfInt64 arg4 ;
    XdmfInt64 arg5 = (XdmfInt64) 1 ;
    XdmfInt64 arg6 = (XdmfInt64) 1 ;
    XdmfInt32 result;

    if (SWIG_GetArgs(interp, objc, objv,"oooo|oo:Xdmf::XdmfArray_GetValuesAsFloat32self Index Values NumberOfValues ArrayStride ValuesStride ",0,0,0,0,0,0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfArray,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    arg2 = (XdmfInt64) XDMF_strtoll(Tcl_GetStringFromObj(objv[2],NULL),0,0);
    if ((SWIG_ConvertPtr(interp, objv[3], (void **) &arg3, SWIGTYPE_p_XdmfFloat32,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    arg4 = (XdmfInt64) XDMF_strtoll(Tcl_GetStringFromObj(objv[4],NULL),0,0);
    if (objc > 5) {
        arg5 = (XdmfInt64) XDMF_strtoll(Tcl_GetStringFromObj(objv[5],NULL),0,0);
    }
    if (objc > 6) {
        arg6 = (XdmfInt64) XDMF_strtoll(Tcl_GetStringFromObj(objv[6],NULL),0,0);
    }
    result = (XdmfInt32)(arg1)->GetValuesAsFloat32(arg2,arg3,arg4,arg5,arg6);

    Tcl_SetObjResult(interp,Tcl_NewIntObj((long) result));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfArray_SetValuesFromFloat32(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfArray *arg1 = (XdmfArray *) 0 ;
    XdmfInt64 arg2 ;
    XdmfFloat32 *arg3 = (XdmfFloat32 *) 0 ;
    XdmfInt64 arg4 ;
    XdmfInt64 arg5 = (XdmfInt64) 1 ;
    XdmfInt64 arg6 = (XdmfInt64) 1 ;
    XdmfInt32 result;

    if (SWIG_GetArgs(interp, objc, objv,"oooo|oo:Xdmf::XdmfArray_SetValuesFromFloat32self Index Values NumberOfValues ArrayStride ValuesStride ",0,0,0,0,0,0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfArray,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    arg2 = (XdmfInt64) XDMF_strtoll(Tcl_GetStringFromObj(objv[2],NULL),0,0);
    if ((SWIG_ConvertPtr(interp, objv[3], (void **) &arg3, SWIGTYPE_p_XdmfFloat32,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    arg4 = (XdmfInt64) XDMF_strtoll(Tcl_GetStringFromObj(objv[4],NULL),0,0);
    if (objc > 5) {
        arg5 = (XdmfInt64) XDMF_strtoll(Tcl_GetStringFromObj(objv[5],NULL),0,0);
    }
    if (objc > 6) {
        arg6 = (XdmfInt64) XDMF_strtoll(Tcl_GetStringFromObj(objv[6],NULL),0,0);
    }
    result = (XdmfInt32)(arg1)->SetValuesFromFloat32(arg2,arg3,arg4,arg5,arg6);

    Tcl_SetObjResult(interp,Tcl_NewIntObj((long) result));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfArray_GetValuesAsFloat64(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfArray *arg1 = (XdmfArray *) 0 ;
    XdmfInt64 arg2 ;
    XdmfFloat64 *arg3 = (XdmfFloat64 *) 0 ;
    XdmfInt64 arg4 ;
    XdmfInt64 arg5 = (XdmfInt64) 1 ;
    XdmfInt64 arg6 = (XdmfInt64) 1 ;
    XdmfInt32 result;

    if (SWIG_GetArgs(interp, objc, objv,"oooo|oo:Xdmf::XdmfArray_GetValuesAsFloat64self Index Values NumberOfValues ArrayStride ValuesStride ",0,0,0,0,0,0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfArray,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    arg2 = (XdmfInt64) XDMF_strtoll(Tcl_GetStringFromObj(objv[2],NULL),0,0);
    if ((SWIG_ConvertPtr(interp, objv[3], (void **) &arg3, SWIGTYPE_p_XdmfFloat64,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    arg4 = (XdmfInt64) XDMF_strtoll(Tcl_GetStringFromObj(objv[4],NULL),0,0);
    if (objc > 5) {
        arg5 = (XdmfInt64) XDMF_strtoll(Tcl_GetStringFromObj(objv[5],NULL),0,0);
    }
    if (objc > 6) {
        arg6 = (XdmfInt64) XDMF_strtoll(Tcl_GetStringFromObj(objv[6],NULL),0,0);
    }
    result = (XdmfInt32)(arg1)->GetValuesAsFloat64(arg2,arg3,arg4,arg5,arg6);

    Tcl_SetObjResult(interp,Tcl_NewIntObj((long) result));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfArray_SetValuesFromFloat64(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfArray *arg1 = (XdmfArray *) 0 ;
    XdmfInt64 arg2 ;
    XdmfFloat64 *arg3 = (XdmfFloat64 *) 0 ;
    XdmfInt64 arg4 ;
    XdmfInt64 arg5 = (XdmfInt64) 1 ;
    XdmfInt64 arg6 = (XdmfInt64) 1 ;
    XdmfInt32 result;

    if (SWIG_GetArgs(interp, objc, objv,"oooo|oo:Xdmf::XdmfArray_SetValuesFromFloat64self Index Values NumberOfValues ArrayStride ValuesStride ",0,0,0,0,0,0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfArray,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    arg2 = (XdmfInt64) XDMF_strtoll(Tcl_GetStringFromObj(objv[2],NULL),0,0);
    if ((SWIG_ConvertPtr(interp, objv[3], (void **) &arg3, SWIGTYPE_p_XdmfFloat64,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    arg4 = (XdmfInt64) XDMF_strtoll(Tcl_GetStringFromObj(objv[4],NULL),0,0);
    if (objc > 5) {
        arg5 = (XdmfInt64) XDMF_strtoll(Tcl_GetStringFromObj(objv[5],NULL),0,0);
    }
    if (objc > 6) {
        arg6 = (XdmfInt64) XDMF_strtoll(Tcl_GetStringFromObj(objv[6],NULL),0,0);
    }
    result = (XdmfInt32)(arg1)->SetValuesFromFloat64(arg2,arg3,arg4,arg5,arg6);

    Tcl_SetObjResult(interp,Tcl_NewIntObj((long) result));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfArray_GetValueAsFloat64(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfArray *arg1 = (XdmfArray *) 0 ;
    XdmfInt64 arg2 ;
    XdmfFloat64 result;

    if (SWIG_GetArgs(interp, objc, objv,"oo:Xdmf::XdmfArray_GetValueAsFloat64self Index ",0,0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfArray,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    arg2 = (XdmfInt64) XDMF_strtoll(Tcl_GetStringFromObj(objv[2],NULL),0,0);
    result = (XdmfFloat64)(arg1)->GetValueAsFloat64(arg2);

    Tcl_SetObjResult(interp,Tcl_NewDoubleObj((double) result));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfArray_GetValueAsFloat32(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfArray *arg1 = (XdmfArray *) 0 ;
    XdmfInt64 arg2 ;
    XdmfFloat32 result;

    if (SWIG_GetArgs(interp, objc, objv,"oo:Xdmf::XdmfArray_GetValueAsFloat32self Index ",0,0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfArray,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    arg2 = (XdmfInt64) XDMF_strtoll(Tcl_GetStringFromObj(objv[2],NULL),0,0);
    result = (XdmfFloat32)(arg1)->GetValueAsFloat32(arg2);

    Tcl_SetObjResult(interp,Tcl_NewDoubleObj((double) result));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfArray_GetValueAsInt64(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfArray *arg1 = (XdmfArray *) 0 ;
    XdmfInt64 arg2 ;
    XdmfInt64 result;

    if (SWIG_GetArgs(interp, objc, objv,"oo:Xdmf::XdmfArray_GetValueAsInt64self Index ",0,0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfArray,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    arg2 = (XdmfInt64) XDMF_strtoll(Tcl_GetStringFromObj(objv[2],NULL),0,0);
    result = (XdmfInt64)(arg1)->GetValueAsInt64(arg2);

    {
        char temp[256];
        sprintf(temp,"%lld", result);
        Tcl_SetObjResult(interp,Tcl_NewStringObj(temp,-1));
    }
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfArray_GetValueAsInt32(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfArray *arg1 = (XdmfArray *) 0 ;
    XdmfInt64 arg2 ;
    XdmfInt32 result;

    if (SWIG_GetArgs(interp, objc, objv,"oo:Xdmf::XdmfArray_GetValueAsInt32self Index ",0,0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfArray,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    arg2 = (XdmfInt64) XDMF_strtoll(Tcl_GetStringFromObj(objv[2],NULL),0,0);
    result = (XdmfInt32)(arg1)->GetValueAsInt32(arg2);

    Tcl_SetObjResult(interp,Tcl_NewIntObj((long) result));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfArray_GetValueAsInt8(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfArray *arg1 = (XdmfArray *) 0 ;
    XdmfInt64 arg2 ;
    XdmfInt8 result;

    if (SWIG_GetArgs(interp, objc, objv,"oo:Xdmf::XdmfArray_GetValueAsInt8self Index ",0,0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfArray,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    arg2 = (XdmfInt64) XDMF_strtoll(Tcl_GetStringFromObj(objv[2],NULL),0,0);
    result = (XdmfInt8)(arg1)->GetValueAsInt8(arg2);

    Tcl_SetObjResult(interp,Tcl_NewIntObj((long) result));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfArray_GetValues(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfArray *arg1 = (XdmfArray *) 0 ;
    XdmfInt64 arg2 = (XdmfInt64) 0 ;
    XdmfInt64 arg3 = (XdmfInt64) 0 ;
    XdmfInt64 arg4 = (XdmfInt64) 1 ;
    XdmfString result;

    if (SWIG_GetArgs(interp, objc, objv,"o|ooo:Xdmf::XdmfArray_GetValuesself Index NumberOfValues ArrayStride ",0,0,0,0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfArray,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    if (objc > 2) {
        arg2 = (XdmfInt64) XDMF_strtoll(Tcl_GetStringFromObj(objv[2],NULL),0,0);
    }
    if (objc > 3) {
        arg3 = (XdmfInt64) XDMF_strtoll(Tcl_GetStringFromObj(objv[3],NULL),0,0);
    }
    if (objc > 4) {
        arg4 = (XdmfInt64) XDMF_strtoll(Tcl_GetStringFromObj(objv[4],NULL),0,0);
    }
    result = (XdmfString)(arg1)->GetValues(arg2,arg3,arg4);

    Tcl_SetObjResult(interp,Tcl_NewStringObj(result,-1));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfArray_Generate(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfArray *arg1 = (XdmfArray *) 0 ;
    XdmfFloat64 arg2 ;
    XdmfFloat64 arg3 ;
    XdmfInt64 arg4 = (XdmfInt64) 0 ;
    XdmfInt64 arg5 = (XdmfInt64) 0 ;
    XdmfInt32 result;

    if (SWIG_GetArgs(interp, objc, objv,"odd|oo:Xdmf::XdmfArray_Generateself StartValue EndValue StartIndex EndIndex ",0,&arg2,&arg3,0,0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfArray,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    if (objc > 4) {
        arg4 = (XdmfInt64) XDMF_strtoll(Tcl_GetStringFromObj(objv[4],NULL),0,0);
    }
    if (objc > 5) {
        arg5 = (XdmfInt64) XDMF_strtoll(Tcl_GetStringFromObj(objv[5],NULL),0,0);
    }
    result = (XdmfInt32)(arg1)->Generate(arg2,arg3,arg4,arg5);

    Tcl_SetObjResult(interp,Tcl_NewIntObj((long) result));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfArray_Clone(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfArray *arg1 = (XdmfArray *) 0 ;
    XdmfLength arg2 = (XdmfLength) 0 ;
    XdmfLength arg3 = (XdmfLength) 0 ;
    XdmfArray *result;

    if (SWIG_GetArgs(interp, objc, objv,"o|oo:Xdmf::XdmfArray_Cloneself Start End ",0,0,0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfArray,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    if (objc > 2) {
        arg2 = (XdmfLength) XDMF_strtoll(Tcl_GetStringFromObj(objv[2],NULL),0,0);
    }
    if (objc > 3) {
        arg3 = (XdmfLength) XDMF_strtoll(Tcl_GetStringFromObj(objv[3],NULL),0,0);
    }
    result = (XdmfArray *)(arg1)->Clone(arg2,arg3);

    Tcl_SetObjResult(interp,SWIG_NewInstanceObj(interp, (void *) result, SWIGTYPE_p_XdmfArray,0));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfArray_Reference(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfArray *arg1 = (XdmfArray *) 0 ;
    XdmfLength arg2 = (XdmfLength) 0 ;
    XdmfLength arg3 = (XdmfLength) 0 ;
    XdmfArray *result;

    if (SWIG_GetArgs(interp, objc, objv,"o|oo:Xdmf::XdmfArray_Referenceself Start End ",0,0,0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfArray,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    if (objc > 2) {
        arg2 = (XdmfLength) XDMF_strtoll(Tcl_GetStringFromObj(objv[2],NULL),0,0);
    }
    if (objc > 3) {
        arg3 = (XdmfLength) XDMF_strtoll(Tcl_GetStringFromObj(objv[3],NULL),0,0);
    }
    result = (XdmfArray *)(arg1)->Reference(arg2,arg3);

    Tcl_SetObjResult(interp,SWIG_NewInstanceObj(interp, (void *) result, SWIGTYPE_p_XdmfArray,0));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfArray_GetMaxAsFloat64(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfArray *arg1 = (XdmfArray *) 0 ;
    XdmfFloat64 result;

    if (SWIG_GetArgs(interp, objc, objv,"o:Xdmf::XdmfArray_GetMaxAsFloat64self ",0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfArray,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    result = (XdmfFloat64)(arg1)->GetMaxAsFloat64();

    Tcl_SetObjResult(interp,Tcl_NewDoubleObj((double) result));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfArray_GetMinAsFloat64(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfArray *arg1 = (XdmfArray *) 0 ;
    XdmfFloat64 result;

    if (SWIG_GetArgs(interp, objc, objv,"o:Xdmf::XdmfArray_GetMinAsFloat64self ",0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfArray,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    result = (XdmfFloat64)(arg1)->GetMinAsFloat64();

    Tcl_SetObjResult(interp,Tcl_NewDoubleObj((double) result));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfArray_GetMaxAsInt64(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfArray *arg1 = (XdmfArray *) 0 ;
    XdmfInt64 result;

    if (SWIG_GetArgs(interp, objc, objv,"o:Xdmf::XdmfArray_GetMaxAsInt64self ",0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfArray,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    result = (XdmfInt64)(arg1)->GetMaxAsInt64();

    {
        char temp[256];
        sprintf(temp,"%lld", result);
        Tcl_SetObjResult(interp,Tcl_NewStringObj(temp,-1));
    }
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfArray_GetMinAsInt64(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfArray *arg1 = (XdmfArray *) 0 ;
    XdmfInt64 result;

    if (SWIG_GetArgs(interp, objc, objv,"o:Xdmf::XdmfArray_GetMinAsInt64self ",0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfArray,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    result = (XdmfInt64)(arg1)->GetMinAsInt64();

    {
        char temp[256];
        sprintf(temp,"%lld", result);
        Tcl_SetObjResult(interp,Tcl_NewStringObj(temp,-1));
    }
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfArray_GetMean(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfArray *arg1 = (XdmfArray *) 0 ;
    XdmfFloat64 result;

    if (SWIG_GetArgs(interp, objc, objv,"o:Xdmf::XdmfArray_GetMeanself ",0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfArray,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    result = (XdmfFloat64)(arg1)->GetMean();

    Tcl_SetObjResult(interp,Tcl_NewDoubleObj((double) result));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfArray_SetDataFromChars(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfArray *arg1 = (XdmfArray *) 0 ;
    XdmfString arg2 ;

    if (SWIG_GetArgs(interp, objc, objv,"os:Xdmf::XdmfArray_SetDataFromCharsself String ",0,&arg2) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfArray,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    (arg1)->SetDataFromChars(arg2);


    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfArray_GetDataPointerAsCharPointer(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfArray *arg1 = (XdmfArray *) 0 ;
    XdmfString result;

    if (SWIG_GetArgs(interp, objc, objv,"o:Xdmf::XdmfArray_GetDataPointerAsCharPointerself ",0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfArray,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    result = (XdmfString)(arg1)->GetDataPointerAsCharPointer();

    Tcl_SetObjResult(interp,Tcl_NewStringObj(result,-1));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static void swig_delete_XdmfArray(void *obj) {
XdmfArray *arg1 = (XdmfArray *) obj;
delete arg1;
}
static swig_method swig_XdmfArray_methods[] = {
    {"GetClassName", _wrap_XdmfArray_GetClassName},
    {"GetTagName", _wrap_XdmfArray_GetTagName},
    {"GetCoreLength", _wrap_XdmfArray_GetCoreLength},
    {"Allocate", _wrap_XdmfArray_Allocate},
    {"SetShape", _wrap_XdmfArray_SetShape},
    {"SetShapeFromString", _wrap_XdmfArray_SetShapeFromString},
    {"SetNumberOfElements", _wrap_XdmfArray_SetNumberOfElements},
    {"ReformFromString", _wrap_XdmfArray_ReformFromString},
    {"CopyShape", _wrap_XdmfArray_CopyShape},
    {"GetDataPointer", _wrap_XdmfArray_GetDataPointer},
    {"SetDataPointer", _wrap_XdmfArray_SetDataPointer},
    {"SetValueFromFloat64", _wrap_XdmfArray_SetValueFromFloat64},
    {"SetValueFromInt64", _wrap_XdmfArray_SetValueFromInt64},
    {"SetValues", _wrap_XdmfArray_SetValues},
    {"GetValuesAsInt8", _wrap_XdmfArray_GetValuesAsInt8},
    {"SetValuesFromInt8", _wrap_XdmfArray_SetValuesFromInt8},
    {"GetValuesAsInt32", _wrap_XdmfArray_GetValuesAsInt32},
    {"SetValuesFromInt32", _wrap_XdmfArray_SetValuesFromInt32},
    {"GetValuesAsInt64", _wrap_XdmfArray_GetValuesAsInt64},
    {"SetValuesFromInt64", _wrap_XdmfArray_SetValuesFromInt64},
    {"GetValuesAsFloat32", _wrap_XdmfArray_GetValuesAsFloat32},
    {"SetValuesFromFloat32", _wrap_XdmfArray_SetValuesFromFloat32},
    {"GetValuesAsFloat64", _wrap_XdmfArray_GetValuesAsFloat64},
    {"SetValuesFromFloat64", _wrap_XdmfArray_SetValuesFromFloat64},
    {"GetValueAsFloat64", _wrap_XdmfArray_GetValueAsFloat64},
    {"GetValueAsFloat32", _wrap_XdmfArray_GetValueAsFloat32},
    {"GetValueAsInt64", _wrap_XdmfArray_GetValueAsInt64},
    {"GetValueAsInt32", _wrap_XdmfArray_GetValueAsInt32},
    {"GetValueAsInt8", _wrap_XdmfArray_GetValueAsInt8},
    {"GetValues", _wrap_XdmfArray_GetValues},
    {"Generate", _wrap_XdmfArray_Generate},
    {"Clone", _wrap_XdmfArray_Clone},
    {"Reference", _wrap_XdmfArray_Reference},
    {"GetMaxAsFloat64", _wrap_XdmfArray_GetMaxAsFloat64},
    {"GetMinAsFloat64", _wrap_XdmfArray_GetMinAsFloat64},
    {"GetMaxAsInt64", _wrap_XdmfArray_GetMaxAsInt64},
    {"GetMinAsInt64", _wrap_XdmfArray_GetMinAsInt64},
    {"GetMean", _wrap_XdmfArray_GetMean},
    {"SetDataFromChars", _wrap_XdmfArray_SetDataFromChars},
    {"GetDataPointerAsCharPointer", _wrap_XdmfArray_GetDataPointerAsCharPointer},
    {0,0}
};
static swig_attribute swig_XdmfArray_attributes[] = {
    {0,0,0}
};
extern swig_class _wrap_class_XdmfDataDesc;
static swig_class *swig_XdmfArray_bases[] = {&_wrap_class_XdmfDataDesc,0};
swig_class _wrap_class_XdmfArray = { "XdmfArray", &SWIGTYPE_p_XdmfArray,_wrap_new_XdmfArray, swig_delete_XdmfArray, swig_XdmfArray_methods, swig_XdmfArray_attributes, swig_XdmfArray_bases };
static int
_wrap_XdmfArrayList_name_set(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfArrayList *arg1 = (XdmfArrayList *) 0 ;
    char *arg2 ;

    if (SWIG_GetArgs(interp, objc, objv,"os:Xdmf::XdmfArrayList_name_setself name ",0,&arg2) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfArrayList,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    {
        if (arg1->name) delete [] arg1->name;
        if (arg2) {
            arg1->name = (char *) (new char[strlen(arg2)+1]);
            strcpy((char *) arg1->name,arg2);
        }else {
            arg1->name = 0;
        }
    }

    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfArrayList_name_get(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfArrayList *arg1 = (XdmfArrayList *) 0 ;
    char *result;

    if (SWIG_GetArgs(interp, objc, objv,"o:Xdmf::XdmfArrayList_name_getself ",0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfArrayList,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    result = (char *) ((arg1)->name);

    Tcl_SetObjResult(interp,Tcl_NewStringObj(result,-1));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfArrayList_timecntr_set(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfArrayList *arg1 = (XdmfArrayList *) 0 ;
    XdmfLength arg2 ;

    if (SWIG_GetArgs(interp, objc, objv,"oo:Xdmf::XdmfArrayList_timecntr_setself timecntr ",0,0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfArrayList,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    arg2 = (XdmfLength) XDMF_strtoll(Tcl_GetStringFromObj(objv[2],NULL),0,0);
    if (arg1) (arg1)->timecntr = arg2;


    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfArrayList_timecntr_get(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfArrayList *arg1 = (XdmfArrayList *) 0 ;
    XdmfLength result;

    if (SWIG_GetArgs(interp, objc, objv,"o:Xdmf::XdmfArrayList_timecntr_getself ",0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfArrayList,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    result = (XdmfLength) ((arg1)->timecntr);

    {
        char temp[256];
        sprintf(temp,"%lld", result);
        Tcl_SetObjResult(interp,Tcl_NewStringObj(temp,-1));
    }
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfArrayList_Array_set(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfArrayList *arg1 = (XdmfArrayList *) 0 ;
    XdmfArray *arg2 = (XdmfArray *) 0 ;

    if (SWIG_GetArgs(interp, objc, objv,"oo:Xdmf::XdmfArrayList_Array_setself Array ",0,0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfArrayList,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[2], (void **) &arg2, SWIGTYPE_p_XdmfArray,SWIG_POINTER_EXCEPTION | SWIG_POINTER_DISOWN) != TCL_OK)) SWIG_fail;
    if (arg1) (arg1)->Array = arg2;


    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfArrayList_Array_get(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfArrayList *arg1 = (XdmfArrayList *) 0 ;
    XdmfArray *result;

    if (SWIG_GetArgs(interp, objc, objv,"o:Xdmf::XdmfArrayList_Array_getself ",0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfArrayList,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    result = (XdmfArray *) ((arg1)->Array);

    Tcl_SetObjResult(interp,SWIG_NewInstanceObj(interp, (void *) result, SWIGTYPE_p_XdmfArray,0));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_new_XdmfArrayList(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfArrayList *result;

    if (SWIG_GetArgs(interp, objc, objv,":Xdmf::new_XdmfArrayList") == TCL_ERROR) SWIG_fail;
    result = (XdmfArrayList *)new XdmfArrayList();

    Tcl_SetObjResult(interp,SWIG_NewInstanceObj(interp, (void *) result, SWIGTYPE_p_XdmfArrayList,0));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_delete_XdmfArrayList(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfArrayList *arg1 = (XdmfArrayList *) 0 ;

    if (SWIG_GetArgs(interp, objc, objv,"o:Xdmf::delete_XdmfArrayListself ",0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfArrayList,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    delete arg1;


    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static void swig_delete_XdmfArrayList(void *obj) {
XdmfArrayList *arg1 = (XdmfArrayList *) obj;
delete arg1;
}
static swig_method swig_XdmfArrayList_methods[] = {
    {0,0}
};
static swig_attribute swig_XdmfArrayList_attributes[] = {
    { "-name",_wrap_XdmfArrayList_name_get, _wrap_XdmfArrayList_name_set},
    { "-timecntr",_wrap_XdmfArrayList_timecntr_get, _wrap_XdmfArrayList_timecntr_set},
    { "-Array",_wrap_XdmfArrayList_Array_get, _wrap_XdmfArrayList_Array_set},
    {0,0,0}
};
static swig_class *swig_XdmfArrayList_bases[] = {0};
swig_class _wrap_class_XdmfArrayList = { "XdmfArrayList", &SWIGTYPE_p_XdmfArrayList,_wrap_new_XdmfArrayList, swig_delete_XdmfArrayList, swig_XdmfArrayList_methods, swig_XdmfArrayList_attributes, swig_XdmfArrayList_bases };
static int
_wrap_TagNameToArray(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfString arg1 ;
    XdmfArray *result;

    if (SWIG_GetArgs(interp, objc, objv,"s:Xdmf::TagNameToArrayTagName ",&arg1) == TCL_ERROR) SWIG_fail;
    result = (XdmfArray *)TagNameToArray(arg1);

    Tcl_SetObjResult(interp,SWIG_NewInstanceObj(interp, (void *) result, SWIGTYPE_p_XdmfArray,0));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_PrintAllXdmfArrays(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    if (SWIG_GetArgs(interp, objc, objv,":Xdmf::PrintAllXdmfArrays") == TCL_ERROR) SWIG_fail;
    PrintAllXdmfArrays();


    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_GetNextOlderArray(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfLength arg1 ;
    XdmfLength *arg2 = (XdmfLength *) NULL ;
    XdmfArray *result;

    if (SWIG_GetArgs(interp, objc, objv,"o|o:Xdmf::GetNextOlderArrayAge AgeOfArray ",0,0) == TCL_ERROR) SWIG_fail;
    arg1 = (XdmfLength) XDMF_strtoll(Tcl_GetStringFromObj(objv[1],NULL),0,0);
    if (objc > 2) {
        if ((SWIG_ConvertPtr(interp, objv[2], (void **) &arg2, SWIGTYPE_p_XdmfLength,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    }
    result = (XdmfArray *)GetNextOlderArray(arg1,arg2);

    Tcl_SetObjResult(interp,SWIG_NewInstanceObj(interp, (void *) result, SWIGTYPE_p_XdmfArray,0));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_GetCurrentArrayTime(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfLength result;

    if (SWIG_GetArgs(interp, objc, objv,":Xdmf::GetCurrentArrayTime") == TCL_ERROR) SWIG_fail;
    result = (XdmfLength)GetCurrentArrayTime();

    {
        char temp[256];
        sprintf(temp,"%lld", result);
        Tcl_SetObjResult(interp,Tcl_NewStringObj(temp,-1));
    }
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_new_XdmfLightData(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfLightData *result;

    if (SWIG_GetArgs(interp, objc, objv,":Xdmf::new_XdmfLightData") == TCL_ERROR) SWIG_fail;
    result = (XdmfLightData *)new XdmfLightData();

    Tcl_SetObjResult(interp,SWIG_NewInstanceObj(interp, (void *) result, SWIGTYPE_p_XdmfLightData,0));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_delete_XdmfLightData(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfLightData *arg1 = (XdmfLightData *) 0 ;

    if (SWIG_GetArgs(interp, objc, objv,"o:Xdmf::delete_XdmfLightDataself ",0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfLightData,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    delete arg1;


    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfLightData_GetClassName(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfLightData *arg1 = (XdmfLightData *) 0 ;
    XdmfConstString result;

    if (SWIG_GetArgs(interp, objc, objv,"o:Xdmf::XdmfLightData_GetClassNameself ",0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfLightData,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    result = (XdmfConstString)(arg1)->GetClassName();

    Tcl_SetObjResult(interp,Tcl_NewStringObj(result,-1));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfLightData_GetNdgmHost(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfLightData *arg1 = (XdmfLightData *) 0 ;
    XdmfString result;

    if (SWIG_GetArgs(interp, objc, objv,"o:Xdmf::XdmfLightData_GetNdgmHostself ",0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfLightData,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    result = (XdmfString)(arg1)->GetNdgmHost();

    Tcl_SetObjResult(interp,Tcl_NewStringObj(result,-1));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfLightData_SetNdgmHost(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfLightData *arg1 = (XdmfLightData *) 0 ;
    XdmfString arg2 ;

    if (SWIG_GetArgs(interp, objc, objv,"os:Xdmf::XdmfLightData_SetNdgmHostself String ",0,&arg2) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfLightData,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    (arg1)->SetNdgmHost(arg2);


    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfLightData_GetName(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfLightData *arg1 = (XdmfLightData *) 0 ;
    XdmfString result;

    if (SWIG_GetArgs(interp, objc, objv,"o:Xdmf::XdmfLightData_GetNameself ",0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfLightData,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    result = (XdmfString)(arg1)->GetName();

    Tcl_SetObjResult(interp,Tcl_NewStringObj(result,-1));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfLightData_SetName(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfLightData *arg1 = (XdmfLightData *) 0 ;
    XdmfConstString arg2 ;

    if (SWIG_GetArgs(interp, objc, objv,"os:Xdmf::XdmfLightData_SetNameself File ",0,&arg2) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfLightData,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    (arg1)->SetName(arg2);


    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfLightData_GetFileName(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfLightData *arg1 = (XdmfLightData *) 0 ;
    XdmfString result;

    if (SWIG_GetArgs(interp, objc, objv,"o:Xdmf::XdmfLightData_GetFileNameself ",0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfLightData,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    result = (XdmfString)(arg1)->GetFileName();

    Tcl_SetObjResult(interp,Tcl_NewStringObj(result,-1));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfLightData_SetFileName(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfLightData *arg1 = (XdmfLightData *) 0 ;
    XdmfString arg2 ;

    if (SWIG_GetArgs(interp, objc, objv,"os:Xdmf::XdmfLightData_SetFileNameself File ",0,&arg2) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfLightData,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    (arg1)->SetFileName(arg2);


    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfLightData_GetWorkingDirectory(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfLightData *arg1 = (XdmfLightData *) 0 ;
    XdmfString result;

    if (SWIG_GetArgs(interp, objc, objv,"o:Xdmf::XdmfLightData_GetWorkingDirectoryself ",0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfLightData,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    result = (XdmfString)(arg1)->GetWorkingDirectory();

    Tcl_SetObjResult(interp,Tcl_NewStringObj(result,-1));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfLightData_SetWorkingDirectory(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfLightData *arg1 = (XdmfLightData *) 0 ;
    XdmfString arg2 ;

    if (SWIG_GetArgs(interp, objc, objv,"os:Xdmf::XdmfLightData_SetWorkingDirectoryself File ",0,&arg2) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfLightData,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    (arg1)->SetWorkingDirectory(arg2);


    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfLightData_SetDOM(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfLightData *arg1 = (XdmfLightData *) 0 ;
    XdmfDOM *arg2 = (XdmfDOM *) 0 ;
    XdmfInt32 result;

    if (SWIG_GetArgs(interp, objc, objv,"oo:Xdmf::XdmfLightData_SetDOMself _arg ",0,0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfLightData,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[2], (void **) &arg2, SWIGTYPE_p_XdmfDOM,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    result = (XdmfInt32)(arg1)->SetDOM(arg2);

    Tcl_SetObjResult(interp,Tcl_NewIntObj((long) result));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfLightData_GetDOM(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfLightData *arg1 = (XdmfLightData *) 0 ;
    XdmfDOM *result;

    if (SWIG_GetArgs(interp, objc, objv,"o:Xdmf::XdmfLightData_GetDOMself ",0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfLightData,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    result = (XdmfDOM *)(arg1)->GetDOM();

    Tcl_SetObjResult(interp,SWIG_NewInstanceObj(interp, (void *) result, SWIGTYPE_p_XdmfDOM,0));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfLightData_SetCurrentElement(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfLightData *arg1 = (XdmfLightData *) 0 ;
    XdmfXNode *arg2 = (XdmfXNode *) 0 ;
    XdmfInt32 result;

    if (SWIG_GetArgs(interp, objc, objv,"oo:Xdmf::XdmfLightData_SetCurrentElementself _arg ",0,0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfLightData,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[2], (void **) &arg2, SWIGTYPE_p_XdmfXNode,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    result = (XdmfInt32)(arg1)->SetCurrentElement(arg2);

    Tcl_SetObjResult(interp,Tcl_NewIntObj((long) result));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfLightData_GetCurrentElement(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfLightData *arg1 = (XdmfLightData *) 0 ;
    XdmfXNode *result;

    if (SWIG_GetArgs(interp, objc, objv,"o:Xdmf::XdmfLightData_GetCurrentElementself ",0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfLightData,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    result = (XdmfXNode *)(arg1)->GetCurrentElement();

    Tcl_SetObjResult(interp,SWIG_NewInstanceObj(interp, (void *) result, SWIGTYPE_p_XdmfXNode,0));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfLightData_HasBeenInited(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfLightData *arg1 = (XdmfLightData *) 0 ;
    XdmfInt32 result;

    if (SWIG_GetArgs(interp, objc, objv,"o:Xdmf::XdmfLightData_HasBeenInitedself ",0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfLightData,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    result = (XdmfInt32)(arg1)->HasBeenInited();

    Tcl_SetObjResult(interp,Tcl_NewIntObj((long) result));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static void swig_delete_XdmfLightData(void *obj) {
XdmfLightData *arg1 = (XdmfLightData *) obj;
delete arg1;
}
static swig_method swig_XdmfLightData_methods[] = {
    {"GetClassName", _wrap_XdmfLightData_GetClassName},
    {"GetNdgmHost", _wrap_XdmfLightData_GetNdgmHost},
    {"SetNdgmHost", _wrap_XdmfLightData_SetNdgmHost},
    {"GetName", _wrap_XdmfLightData_GetName},
    {"SetName", _wrap_XdmfLightData_SetName},
    {"GetFileName", _wrap_XdmfLightData_GetFileName},
    {"SetFileName", _wrap_XdmfLightData_SetFileName},
    {"GetWorkingDirectory", _wrap_XdmfLightData_GetWorkingDirectory},
    {"SetWorkingDirectory", _wrap_XdmfLightData_SetWorkingDirectory},
    {"SetDOM", _wrap_XdmfLightData_SetDOM},
    {"GetDOM", _wrap_XdmfLightData_GetDOM},
    {"SetCurrentElement", _wrap_XdmfLightData_SetCurrentElement},
    {"GetCurrentElement", _wrap_XdmfLightData_GetCurrentElement},
    {"HasBeenInited", _wrap_XdmfLightData_HasBeenInited},
    {0,0}
};
static swig_attribute swig_XdmfLightData_attributes[] = {
    {0,0,0}
};
extern swig_class _wrap_class_XdmfObject;
static swig_class *swig_XdmfLightData_bases[] = {&_wrap_class_XdmfObject,0};
swig_class _wrap_class_XdmfLightData = { "XdmfLightData", &SWIGTYPE_p_XdmfLightData,_wrap_new_XdmfLightData, swig_delete_XdmfLightData, swig_XdmfLightData_methods, swig_XdmfLightData_attributes, swig_XdmfLightData_bases };
static int
_wrap_new_XdmfAttribute(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfAttribute *result;

    if (SWIG_GetArgs(interp, objc, objv,":Xdmf::new_XdmfAttribute") == TCL_ERROR) SWIG_fail;
    result = (XdmfAttribute *)new XdmfAttribute();

    Tcl_SetObjResult(interp,SWIG_NewInstanceObj(interp, (void *) result, SWIGTYPE_p_XdmfAttribute,0));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_delete_XdmfAttribute(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfAttribute *arg1 = (XdmfAttribute *) 0 ;

    if (SWIG_GetArgs(interp, objc, objv,"o:Xdmf::delete_XdmfAttributeself ",0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfAttribute,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    delete arg1;


    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfAttribute_GetClassName(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfAttribute *arg1 = (XdmfAttribute *) 0 ;
    XdmfConstString result;

    if (SWIG_GetArgs(interp, objc, objv,"o:Xdmf::XdmfAttribute_GetClassNameself ",0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfAttribute,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    result = (XdmfConstString)(arg1)->GetClassName();

    Tcl_SetObjResult(interp,Tcl_NewStringObj(result,-1));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfAttribute_SetAttributeType(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfAttribute *arg1 = (XdmfAttribute *) 0 ;
    XdmfInt32 arg2 ;
    XdmfInt32 result;

    if (SWIG_GetArgs(interp, objc, objv,"oi:Xdmf::XdmfAttribute_SetAttributeTypeself _arg ",0,&arg2) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfAttribute,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    result = (XdmfInt32)(arg1)->SetAttributeType(arg2);

    Tcl_SetObjResult(interp,Tcl_NewIntObj((long) result));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfAttribute_GetAttributeType(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfAttribute *arg1 = (XdmfAttribute *) 0 ;
    XdmfInt32 result;

    if (SWIG_GetArgs(interp, objc, objv,"o:Xdmf::XdmfAttribute_GetAttributeTypeself ",0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfAttribute,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    result = (XdmfInt32)(arg1)->GetAttributeType();

    Tcl_SetObjResult(interp,Tcl_NewIntObj((long) result));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfAttribute_SetAttributeTypeFromString(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfAttribute *arg1 = (XdmfAttribute *) 0 ;
    XdmfConstString arg2 ;
    XdmfInt32 result;

    if (SWIG_GetArgs(interp, objc, objv,"os:Xdmf::XdmfAttribute_SetAttributeTypeFromStringself AttributeType ",0,&arg2) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfAttribute,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    result = (XdmfInt32)(arg1)->SetAttributeTypeFromString(arg2);

    Tcl_SetObjResult(interp,Tcl_NewIntObj((long) result));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfAttribute_GetAttributeTypeAsString(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfAttribute *arg1 = (XdmfAttribute *) 0 ;
    XdmfString result;

    if (SWIG_GetArgs(interp, objc, objv,"o:Xdmf::XdmfAttribute_GetAttributeTypeAsStringself ",0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfAttribute,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    result = (XdmfString)(arg1)->GetAttributeTypeAsString();

    Tcl_SetObjResult(interp,Tcl_NewStringObj(result,-1));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfAttribute_SetAttributeCenterFromString(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfAttribute *arg1 = (XdmfAttribute *) 0 ;
    XdmfConstString arg2 ;
    XdmfInt32 result;

    if (SWIG_GetArgs(interp, objc, objv,"os:Xdmf::XdmfAttribute_SetAttributeCenterFromStringself AttributeCenter ",0,&arg2) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfAttribute,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    result = (XdmfInt32)(arg1)->SetAttributeCenterFromString(arg2);

    Tcl_SetObjResult(interp,Tcl_NewIntObj((long) result));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfAttribute_GetAttributeCenterAsString(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfAttribute *arg1 = (XdmfAttribute *) 0 ;
    XdmfString result;

    if (SWIG_GetArgs(interp, objc, objv,"o:Xdmf::XdmfAttribute_GetAttributeCenterAsStringself ",0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfAttribute,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    result = (XdmfString)(arg1)->GetAttributeCenterAsString();

    Tcl_SetObjResult(interp,Tcl_NewStringObj(result,-1));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfAttribute_SetAttributeCenter(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfAttribute *arg1 = (XdmfAttribute *) 0 ;
    XdmfInt32 arg2 ;
    XdmfInt32 result;

    if (SWIG_GetArgs(interp, objc, objv,"oi:Xdmf::XdmfAttribute_SetAttributeCenterself _arg ",0,&arg2) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfAttribute,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    result = (XdmfInt32)(arg1)->SetAttributeCenter(arg2);

    Tcl_SetObjResult(interp,Tcl_NewIntObj((long) result));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfAttribute_GetAttributeCenter(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfAttribute *arg1 = (XdmfAttribute *) 0 ;
    XdmfInt32 result;

    if (SWIG_GetArgs(interp, objc, objv,"o:Xdmf::XdmfAttribute_GetAttributeCenterself ",0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfAttribute,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    result = (XdmfInt32)(arg1)->GetAttributeCenter();

    Tcl_SetObjResult(interp,Tcl_NewIntObj((long) result));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfAttribute_GetShapeDesc(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfAttribute *arg1 = (XdmfAttribute *) 0 ;
    XdmfDataDesc *result;

    if (SWIG_GetArgs(interp, objc, objv,"o:Xdmf::XdmfAttribute_GetShapeDescself ",0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfAttribute,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    result = (XdmfDataDesc *)(arg1)->GetShapeDesc();

    Tcl_SetObjResult(interp,SWIG_NewInstanceObj(interp, (void *) result, SWIGTYPE_p_XdmfDataDesc,0));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfAttribute_SetValues(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfAttribute *arg1 = (XdmfAttribute *) 0 ;
    XdmfArray *arg2 = (XdmfArray *) 0 ;
    XdmfInt32 result;

    if (SWIG_GetArgs(interp, objc, objv,"oo:Xdmf::XdmfAttribute_SetValuesself _arg ",0,0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfAttribute,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[2], (void **) &arg2, SWIGTYPE_p_XdmfArray,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    result = (XdmfInt32)(arg1)->SetValues(arg2);

    Tcl_SetObjResult(interp,Tcl_NewIntObj((long) result));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfAttribute_GetValues(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfAttribute *arg1 = (XdmfAttribute *) 0 ;
    XdmfArray *result;

    if (SWIG_GetArgs(interp, objc, objv,"o:Xdmf::XdmfAttribute_GetValuesself ",0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfAttribute,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    result = (XdmfArray *)(arg1)->GetValues();

    Tcl_SetObjResult(interp,SWIG_NewInstanceObj(interp, (void *) result, SWIGTYPE_p_XdmfArray,0));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfAttribute_InitAttributeFromElement(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfAttribute *arg1 = (XdmfAttribute *) 0 ;
    XdmfXNode *arg2 = (XdmfXNode *) 0 ;
    XdmfInt32 result;

    if (SWIG_GetArgs(interp, objc, objv,"oo:Xdmf::XdmfAttribute_InitAttributeFromElementself Element ",0,0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfAttribute,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[2], (void **) &arg2, SWIGTYPE_p_XdmfXNode,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    result = (XdmfInt32)(arg1)->InitAttributeFromElement(arg2);

    Tcl_SetObjResult(interp,Tcl_NewIntObj((long) result));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfAttribute_SetAttributeFromElement(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfAttribute *arg1 = (XdmfAttribute *) 0 ;
    XdmfXNode *arg2 = (XdmfXNode *) 0 ;
    XdmfInt32 result;

    if (SWIG_GetArgs(interp, objc, objv,"oo:Xdmf::XdmfAttribute_SetAttributeFromElementself Element ",0,0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfAttribute,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[2], (void **) &arg2, SWIGTYPE_p_XdmfXNode,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    result = (XdmfInt32)(arg1)->SetAttributeFromElement(arg2);

    Tcl_SetObjResult(interp,Tcl_NewIntObj((long) result));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfAttribute_Update(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfAttribute *arg1 = (XdmfAttribute *) 0 ;
    XdmfInt32 result;

    if (SWIG_GetArgs(interp, objc, objv,"o:Xdmf::XdmfAttribute_Updateself ",0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfAttribute,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    result = (XdmfInt32)(arg1)->Update();

    Tcl_SetObjResult(interp,Tcl_NewIntObj((long) result));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static void swig_delete_XdmfAttribute(void *obj) {
XdmfAttribute *arg1 = (XdmfAttribute *) obj;
delete arg1;
}
static swig_method swig_XdmfAttribute_methods[] = {
    {"GetClassName", _wrap_XdmfAttribute_GetClassName},
    {"SetAttributeType", _wrap_XdmfAttribute_SetAttributeType},
    {"GetAttributeType", _wrap_XdmfAttribute_GetAttributeType},
    {"SetAttributeTypeFromString", _wrap_XdmfAttribute_SetAttributeTypeFromString},
    {"GetAttributeTypeAsString", _wrap_XdmfAttribute_GetAttributeTypeAsString},
    {"SetAttributeCenterFromString", _wrap_XdmfAttribute_SetAttributeCenterFromString},
    {"GetAttributeCenterAsString", _wrap_XdmfAttribute_GetAttributeCenterAsString},
    {"SetAttributeCenter", _wrap_XdmfAttribute_SetAttributeCenter},
    {"GetAttributeCenter", _wrap_XdmfAttribute_GetAttributeCenter},
    {"GetShapeDesc", _wrap_XdmfAttribute_GetShapeDesc},
    {"SetValues", _wrap_XdmfAttribute_SetValues},
    {"GetValues", _wrap_XdmfAttribute_GetValues},
    {"InitAttributeFromElement", _wrap_XdmfAttribute_InitAttributeFromElement},
    {"SetAttributeFromElement", _wrap_XdmfAttribute_SetAttributeFromElement},
    {"Update", _wrap_XdmfAttribute_Update},
    {0,0}
};
static swig_attribute swig_XdmfAttribute_attributes[] = {
    {0,0,0}
};
extern swig_class _wrap_class_XdmfLightData;
static swig_class *swig_XdmfAttribute_bases[] = {&_wrap_class_XdmfLightData,0};
swig_class _wrap_class_XdmfAttribute = { "XdmfAttribute", &SWIGTYPE_p_XdmfAttribute,_wrap_new_XdmfAttribute, swig_delete_XdmfAttribute, swig_XdmfAttribute_methods, swig_XdmfAttribute_attributes, swig_XdmfAttribute_bases };
static int
_wrap_new_XdmfCharArray(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfCharArray *result;

    if (SWIG_GetArgs(interp, objc, objv,":Xdmf::new_XdmfCharArray") == TCL_ERROR) SWIG_fail;
    result = (XdmfCharArray *)new XdmfCharArray();

    Tcl_SetObjResult(interp,SWIG_NewInstanceObj(interp, (void *) result, SWIGTYPE_p_XdmfCharArray,0));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_delete_XdmfCharArray(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfCharArray *arg1 = (XdmfCharArray *) 0 ;

    if (SWIG_GetArgs(interp, objc, objv,"o:Xdmf::delete_XdmfCharArrayself ",0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfCharArray,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    delete arg1;


    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfCharArray_GetClassName(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfCharArray *arg1 = (XdmfCharArray *) 0 ;
    XdmfConstString result;

    if (SWIG_GetArgs(interp, objc, objv,"o:Xdmf::XdmfCharArray_GetClassNameself ",0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfCharArray,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    result = (XdmfConstString)(arg1)->GetClassName();

    Tcl_SetObjResult(interp,Tcl_NewStringObj(result,-1));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfCharArray_GetString(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfCharArray *arg1 = (XdmfCharArray *) 0 ;
    XdmfString result;

    if (SWIG_GetArgs(interp, objc, objv,"o:Xdmf::XdmfCharArray_GetStringself ",0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfCharArray,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    result = (XdmfString)(arg1)->GetString();

    Tcl_SetObjResult(interp,Tcl_NewStringObj(result,-1));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfCharArray_SetString(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfCharArray *arg1 = (XdmfCharArray *) 0 ;
    XdmfString arg2 ;
    XdmfInt32 result;

    if (SWIG_GetArgs(interp, objc, objv,"os:Xdmf::XdmfCharArray_SetStringself String ",0,&arg2) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfCharArray,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    result = (XdmfInt32)(arg1)->SetString(arg2);

    Tcl_SetObjResult(interp,Tcl_NewIntObj((long) result));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfCharArray_SetFromFile(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfCharArray *arg1 = (XdmfCharArray *) 0 ;
    XdmfString arg2 ;
    XdmfInt32 result;

    if (SWIG_GetArgs(interp, objc, objv,"os:Xdmf::XdmfCharArray_SetFromFileself FileName ",0,&arg2) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfCharArray,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    result = (XdmfInt32)(arg1)->SetFromFile(arg2);

    Tcl_SetObjResult(interp,Tcl_NewIntObj((long) result));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static void swig_delete_XdmfCharArray(void *obj) {
XdmfCharArray *arg1 = (XdmfCharArray *) obj;
delete arg1;
}
static swig_method swig_XdmfCharArray_methods[] = {
    {"GetClassName", _wrap_XdmfCharArray_GetClassName},
    {"GetString", _wrap_XdmfCharArray_GetString},
    {"SetString", _wrap_XdmfCharArray_SetString},
    {"SetFromFile", _wrap_XdmfCharArray_SetFromFile},
    {0,0}
};
static swig_attribute swig_XdmfCharArray_attributes[] = {
    {0,0,0}
};
extern swig_class _wrap_class_XdmfArray;
static swig_class *swig_XdmfCharArray_bases[] = {&_wrap_class_XdmfArray,0};
swig_class _wrap_class_XdmfCharArray = { "XdmfCharArray", &SWIGTYPE_p_XdmfCharArray,_wrap_new_XdmfCharArray, swig_delete_XdmfCharArray, swig_XdmfCharArray_methods, swig_XdmfCharArray_attributes, swig_XdmfCharArray_bases };
static int
_wrap_new_XdmfXNode(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfXNode *result;

    if (SWIG_GetArgs(interp, objc, objv,":Xdmf::new_XdmfXNode") == TCL_ERROR) SWIG_fail;
    result = (XdmfXNode *)new XdmfXNode();

    Tcl_SetObjResult(interp,SWIG_NewInstanceObj(interp, (void *) result, SWIGTYPE_p_XdmfXNode,0));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_delete_XdmfXNode(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfXNode *arg1 = (XdmfXNode *) 0 ;

    if (SWIG_GetArgs(interp, objc, objv,"o:Xdmf::delete_XdmfXNodeself ",0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfXNode,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    delete arg1;


    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfXNode_Set(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfXNode *arg1 = (XdmfXNode *) 0 ;
    XdmfConstString arg2 ;
    XdmfConstString arg3 ;

    if (SWIG_GetArgs(interp, objc, objv,"oss:Xdmf::XdmfXNode_Setself name data ",0,&arg2,&arg3) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfXNode,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    (arg1)->Set(arg2,arg3);


    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfXNode_Get(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfXNode *arg1 = (XdmfXNode *) 0 ;
    XdmfConstString arg2 ;
    XdmfString result;

    if (SWIG_GetArgs(interp, objc, objv,"os:Xdmf::XdmfXNode_Getself name ",0,&arg2) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfXNode,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    result = (XdmfString)(arg1)->Get(arg2);

    Tcl_SetObjResult(interp,Tcl_NewStringObj(result,-1));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfXNode_Print(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfXNode *arg1 = (XdmfXNode *) 0 ;

    if (SWIG_GetArgs(interp, objc, objv,"o:Xdmf::XdmfXNode_Printself ",0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfXNode,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    (arg1)->Print();


    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfXNode_GetSize(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfXNode *arg1 = (XdmfXNode *) 0 ;
    int result;

    if (SWIG_GetArgs(interp, objc, objv,"o:Xdmf::XdmfXNode_GetSizeself ",0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfXNode,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    result = (int)(arg1)->GetSize();

    Tcl_SetObjResult(interp,Tcl_NewIntObj((long) result));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfXNode_GetNameByIndex(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfXNode *arg1 = (XdmfXNode *) 0 ;
    int arg2 ;
    XdmfString result;

    if (SWIG_GetArgs(interp, objc, objv,"oi:Xdmf::XdmfXNode_GetNameByIndexself index ",0,&arg2) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfXNode,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    result = (XdmfString)(arg1)->GetNameByIndex(arg2);

    Tcl_SetObjResult(interp,Tcl_NewStringObj(result,-1));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfXNode_GetDataByIndex(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfXNode *arg1 = (XdmfXNode *) 0 ;
    int arg2 ;
    XdmfString result;

    if (SWIG_GetArgs(interp, objc, objv,"oi:Xdmf::XdmfXNode_GetDataByIndexself index ",0,&arg2) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfXNode,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    result = (XdmfString)(arg1)->GetDataByIndex(arg2);

    Tcl_SetObjResult(interp,Tcl_NewStringObj(result,-1));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfXNode_GetClientData(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfXNode *arg1 = (XdmfXNode *) 0 ;
    void *result;

    if (SWIG_GetArgs(interp, objc, objv,"o:Xdmf::XdmfXNode_GetClientDataself ",0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfXNode,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    result = (void *)(arg1)->GetClientData();

    Tcl_SetObjResult(interp,SWIG_NewInstanceObj(interp, (void *) result, SWIGTYPE_p_void,0));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfXNode_SetClientData(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfXNode *arg1 = (XdmfXNode *) 0 ;
    void *arg2 = (void *) 0 ;

    if (SWIG_GetArgs(interp, objc, objv,"oo:Xdmf::XdmfXNode_SetClientDataself ClientData ",0,0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfXNode,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[2], (void **) &arg2, 0,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    (arg1)->SetClientData(arg2);


    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfXNode_ManualDelete(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfXNode *arg1 = (XdmfXNode *) 0 ;
    XdmfXNode *arg2 = (XdmfXNode *) 0 ;

    if (SWIG_GetArgs(interp, objc, objv,"oo:Xdmf::XdmfXNode_ManualDeleteself obj ",0,0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfXNode,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[2], (void **) &arg2, SWIGTYPE_p_XdmfXNode,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    (arg1)->ManualDelete(arg2);


    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static void swig_delete_XdmfXNode(void *obj) {
XdmfXNode *arg1 = (XdmfXNode *) obj;
delete arg1;
}
static swig_method swig_XdmfXNode_methods[] = {
    {"Set", _wrap_XdmfXNode_Set},
    {"Get", _wrap_XdmfXNode_Get},
    {"Print", _wrap_XdmfXNode_Print},
    {"GetSize", _wrap_XdmfXNode_GetSize},
    {"GetNameByIndex", _wrap_XdmfXNode_GetNameByIndex},
    {"GetDataByIndex", _wrap_XdmfXNode_GetDataByIndex},
    {"GetClientData", _wrap_XdmfXNode_GetClientData},
    {"SetClientData", _wrap_XdmfXNode_SetClientData},
    {"ManualDelete", _wrap_XdmfXNode_ManualDelete},
    {0,0}
};
static swig_attribute swig_XdmfXNode_attributes[] = {
    {0,0,0}
};
extern swig_class _wrap_class_XdmfObject;
static swig_class *swig_XdmfXNode_bases[] = {&_wrap_class_XdmfObject,0};
swig_class _wrap_class_XdmfXNode = { "XdmfXNode", &SWIGTYPE_p_XdmfXNode,_wrap_new_XdmfXNode, swig_delete_XdmfXNode, swig_XdmfXNode_methods, swig_XdmfXNode_attributes, swig_XdmfXNode_bases };
static int
_wrap_new_XdmfDOM(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfDOM *result;

    if (SWIG_GetArgs(interp, objc, objv,":Xdmf::new_XdmfDOM") == TCL_ERROR) SWIG_fail;
    result = (XdmfDOM *)new XdmfDOM();

    Tcl_SetObjResult(interp,SWIG_NewInstanceObj(interp, (void *) result, SWIGTYPE_p_XdmfDOM,0));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_delete_XdmfDOM(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfDOM *arg1 = (XdmfDOM *) 0 ;

    if (SWIG_GetArgs(interp, objc, objv,"o:Xdmf::delete_XdmfDOMself ",0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfDOM,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    delete arg1;


    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfDOM_GetClassName(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfDOM *arg1 = (XdmfDOM *) 0 ;
    XdmfConstString result;

    if (SWIG_GetArgs(interp, objc, objv,"o:Xdmf::XdmfDOM_GetClassNameself ",0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfDOM,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    result = (XdmfConstString)(arg1)->GetClassName();

    Tcl_SetObjResult(interp,Tcl_NewStringObj(result,-1));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfDOM_SetXMLVersion(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfDOM *arg1 = (XdmfDOM *) 0 ;
    float arg2 ;
    XdmfInt32 result;

    if (SWIG_GetArgs(interp, objc, objv,"of:Xdmf::XdmfDOM_SetXMLVersionself _arg ",0,&arg2) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfDOM,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    result = (XdmfInt32)(arg1)->SetXMLVersion(arg2);

    Tcl_SetObjResult(interp,Tcl_NewIntObj((long) result));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfDOM_GetXMLVersion(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfDOM *arg1 = (XdmfDOM *) 0 ;
    float result;

    if (SWIG_GetArgs(interp, objc, objv,"o:Xdmf::XdmfDOM_GetXMLVersionself ",0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfDOM,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    result = (float)(arg1)->GetXMLVersion();

    Tcl_SetObjResult(interp,Tcl_NewDoubleObj((double) result));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfDOM_SetDocType(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfDOM *arg1 = (XdmfDOM *) 0 ;
    XdmfConstString arg2 ;
    XdmfInt32 result;

    if (SWIG_GetArgs(interp, objc, objv,"os:Xdmf::XdmfDOM_SetDocTypeself _arg ",0,&arg2) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfDOM,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    result = (XdmfInt32)(arg1)->SetDocType(arg2);

    Tcl_SetObjResult(interp,Tcl_NewIntObj((long) result));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfDOM_GetDocType(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfDOM *arg1 = (XdmfDOM *) 0 ;
    XdmfConstString result;

    if (SWIG_GetArgs(interp, objc, objv,"o:Xdmf::XdmfDOM_GetDocTypeself ",0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfDOM,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    result = (XdmfConstString)(arg1)->GetDocType();

    Tcl_SetObjResult(interp,Tcl_NewStringObj(result,-1));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfDOM_SetSystem(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfDOM *arg1 = (XdmfDOM *) 0 ;
    XdmfConstString arg2 ;
    XdmfInt32 result;

    if (SWIG_GetArgs(interp, objc, objv,"os:Xdmf::XdmfDOM_SetSystemself _arg ",0,&arg2) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfDOM,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    result = (XdmfInt32)(arg1)->SetSystem(arg2);

    Tcl_SetObjResult(interp,Tcl_NewIntObj((long) result));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfDOM_GetSystem(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfDOM *arg1 = (XdmfDOM *) 0 ;
    XdmfConstString result;

    if (SWIG_GetArgs(interp, objc, objv,"o:Xdmf::XdmfDOM_GetSystemself ",0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfDOM,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    result = (XdmfConstString)(arg1)->GetSystem();

    Tcl_SetObjResult(interp,Tcl_NewStringObj(result,-1));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfDOM_SetInputFileName(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfDOM *arg1 = (XdmfDOM *) 0 ;
    XdmfConstString arg2 ;
    XdmfInt32 result;

    if (SWIG_GetArgs(interp, objc, objv,"os:Xdmf::XdmfDOM_SetInputFileNameself Filename ",0,&arg2) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfDOM,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    result = (XdmfInt32)(arg1)->SetInputFileName(arg2);

    Tcl_SetObjResult(interp,Tcl_NewIntObj((long) result));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfDOM_SetOutputFileName(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfDOM *arg1 = (XdmfDOM *) 0 ;
    XdmfConstString arg2 ;
    XdmfInt32 result;

    if (SWIG_GetArgs(interp, objc, objv,"os:Xdmf::XdmfDOM_SetOutputFileNameself Filename ",0,&arg2) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfDOM,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    result = (XdmfInt32)(arg1)->SetOutputFileName(arg2);

    Tcl_SetObjResult(interp,Tcl_NewIntObj((long) result));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfDOM_GetInputFileName(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfDOM *arg1 = (XdmfDOM *) 0 ;
    XdmfString result;

    if (SWIG_GetArgs(interp, objc, objv,"o:Xdmf::XdmfDOM_GetInputFileNameself ",0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfDOM,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    result = (XdmfString)(arg1)->GetInputFileName();

    Tcl_SetObjResult(interp,Tcl_NewStringObj(result,-1));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfDOM_GetOutputFileName(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfDOM *arg1 = (XdmfDOM *) 0 ;
    XdmfString result;

    if (SWIG_GetArgs(interp, objc, objv,"o:Xdmf::XdmfDOM_GetOutputFileNameself ",0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfDOM,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    result = (XdmfString)(arg1)->GetOutputFileName();

    Tcl_SetObjResult(interp,Tcl_NewStringObj(result,-1));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfDOM_GetOutput(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfDOM *arg1 = (XdmfDOM *) 0 ;
    ostream *result;

    if (SWIG_GetArgs(interp, objc, objv,"o:Xdmf::XdmfDOM_GetOutputself ",0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfDOM,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    result = (ostream *)(arg1)->GetOutput();

    Tcl_SetObjResult(interp,SWIG_NewInstanceObj(interp, (void *) result, SWIGTYPE_p_ostream,0));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfDOM_SetOutput(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfDOM *arg1 = (XdmfDOM *) 0 ;
    ostream *arg2 = (ostream *) 0 ;
    XdmfInt32 result;

    if (SWIG_GetArgs(interp, objc, objv,"oo:Xdmf::XdmfDOM_SetOutputself _arg ",0,0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfDOM,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[2], (void **) &arg2, SWIGTYPE_p_ostream,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    result = (XdmfInt32)(arg1)->SetOutput(arg2);

    Tcl_SetObjResult(interp,Tcl_NewIntObj((long) result));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfDOM_GetInput(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfDOM *arg1 = (XdmfDOM *) 0 ;
    istream *result;

    if (SWIG_GetArgs(interp, objc, objv,"o:Xdmf::XdmfDOM_GetInputself ",0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfDOM,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    result = (istream *)(arg1)->GetInput();

    Tcl_SetObjResult(interp,SWIG_NewInstanceObj(interp, (void *) result, SWIGTYPE_p_istream,0));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfDOM_SetInput(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfDOM *arg1 = (XdmfDOM *) 0 ;
    istream *arg2 = (istream *) 0 ;
    XdmfInt32 result;

    if (SWIG_GetArgs(interp, objc, objv,"oo:Xdmf::XdmfDOM_SetInputself _arg ",0,0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfDOM,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[2], (void **) &arg2, SWIGTYPE_p_istream,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    result = (XdmfInt32)(arg1)->SetInput(arg2);

    Tcl_SetObjResult(interp,Tcl_NewIntObj((long) result));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfDOM_GenerateHead(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfDOM *arg1 = (XdmfDOM *) 0 ;
    XdmfInt32 result;

    if (SWIG_GetArgs(interp, objc, objv,"o:Xdmf::XdmfDOM_GenerateHeadself ",0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfDOM,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    result = (XdmfInt32)(arg1)->GenerateHead();

    Tcl_SetObjResult(interp,Tcl_NewIntObj((long) result));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfDOM_Puts(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfDOM *arg1 = (XdmfDOM *) 0 ;
    XdmfConstString arg2 ;
    XdmfInt32 result;

    if (SWIG_GetArgs(interp, objc, objv,"os:Xdmf::XdmfDOM_Putsself String ",0,&arg2) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfDOM,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    result = (XdmfInt32)(arg1)->Puts(arg2);

    Tcl_SetObjResult(interp,Tcl_NewIntObj((long) result));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfDOM_GenerateTail(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfDOM *arg1 = (XdmfDOM *) 0 ;
    XdmfInt32 result;

    if (SWIG_GetArgs(interp, objc, objv,"o:Xdmf::XdmfDOM_GenerateTailself ",0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfDOM,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    result = (XdmfInt32)(arg1)->GenerateTail();

    Tcl_SetObjResult(interp,Tcl_NewIntObj((long) result));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfDOM_Gets(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfDOM *arg1 = (XdmfDOM *) 0 ;
    XdmfConstString result;

    if (SWIG_GetArgs(interp, objc, objv,"o:Xdmf::XdmfDOM_Getsself ",0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfDOM,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    result = (XdmfConstString)(arg1)->Gets();

    Tcl_SetObjResult(interp,Tcl_NewStringObj(result,-1));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfDOM_GetTree(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfDOM *arg1 = (XdmfDOM *) 0 ;
    XDMF_TREE_NODE *result;

    if (SWIG_GetArgs(interp, objc, objv,"o:Xdmf::XdmfDOM_GetTreeself ",0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfDOM,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    result = (XDMF_TREE_NODE *)(arg1)->GetTree();

    Tcl_SetObjResult(interp,SWIG_NewInstanceObj(interp, (void *) result, SWIGTYPE_p_XDMF_TREE_NODE,0));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfDOM___Parse(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfDOM *arg1 = (XdmfDOM *) 0 ;
    XdmfConstString arg2 ;
    XDMF_TREE_NODE *result;

    if (SWIG_GetArgs(interp, objc, objv,"os:Xdmf::XdmfDOM___Parseself xml ",0,&arg2) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfDOM,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    result = (XDMF_TREE_NODE *)(arg1)->__Parse(arg2);

    Tcl_SetObjResult(interp,SWIG_NewInstanceObj(interp, (void *) result, SWIGTYPE_p_XDMF_TREE_NODE,0));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfDOM_Parse(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfDOM *arg1 = (XdmfDOM *) 0 ;
    XdmfConstString arg2 = (XdmfConstString) NULL ;
    XdmfInt32 result;

    if (SWIG_GetArgs(interp, objc, objv,"o|s:Xdmf::XdmfDOM_Parseself xml ",0,&arg2) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfDOM,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    result = (XdmfInt32)(arg1)->Parse(arg2);

    Tcl_SetObjResult(interp,Tcl_NewIntObj((long) result));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfDOM_GetRoot(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfDOM *arg1 = (XdmfDOM *) 0 ;
    XdmfXNode *result;

    if (SWIG_GetArgs(interp, objc, objv,"o:Xdmf::XdmfDOM_GetRootself ",0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfDOM,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    result = (XdmfXNode *)(arg1)->GetRoot();

    Tcl_SetObjResult(interp,SWIG_NewInstanceObj(interp, (void *) result, SWIGTYPE_p_XdmfXNode,0));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfDOM_GetNumberOfChildren(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfDOM *arg1 = (XdmfDOM *) 0 ;
    XdmfXNode *arg2 = (XdmfXNode *) NULL ;
    XdmfInt64 result;

    if (SWIG_GetArgs(interp, objc, objv,"o|o:Xdmf::XdmfDOM_GetNumberOfChildrenself node ",0,0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfDOM,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    if (objc > 2) {
        if ((SWIG_ConvertPtr(interp, objv[2], (void **) &arg2, SWIGTYPE_p_XdmfXNode,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    }
    result = (XdmfInt64)(arg1)->GetNumberOfChildren(arg2);

    {
        char temp[256];
        sprintf(temp,"%lld", result);
        Tcl_SetObjResult(interp,Tcl_NewStringObj(temp,-1));
    }
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfDOM_GetChild(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfDOM *arg1 = (XdmfDOM *) 0 ;
    XdmfInt64 arg2 ;
    XdmfXNode *arg3 = (XdmfXNode *) 0 ;
    XdmfXNode *result;

    if (SWIG_GetArgs(interp, objc, objv,"ooo:Xdmf::XdmfDOM_GetChildself Index Node ",0,0,0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfDOM,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    arg2 = (XdmfInt64) XDMF_strtoll(Tcl_GetStringFromObj(objv[2],NULL),0,0);
    if ((SWIG_ConvertPtr(interp, objv[3], (void **) &arg3, SWIGTYPE_p_XdmfXNode,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    result = (XdmfXNode *)(arg1)->GetChild(arg2,arg3);

    Tcl_SetObjResult(interp,SWIG_NewInstanceObj(interp, (void *) result, SWIGTYPE_p_XdmfXNode,0));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfDOM_GetNumberOfAttributes(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfDOM *arg1 = (XdmfDOM *) 0 ;
    XdmfXNode *arg2 = (XdmfXNode *) 0 ;
    XdmfInt32 result;

    if (SWIG_GetArgs(interp, objc, objv,"oo:Xdmf::XdmfDOM_GetNumberOfAttributesself Node ",0,0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfDOM,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[2], (void **) &arg2, SWIGTYPE_p_XdmfXNode,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    result = (XdmfInt32)(arg1)->GetNumberOfAttributes(arg2);

    Tcl_SetObjResult(interp,Tcl_NewIntObj((long) result));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfDOM_GetAttribute(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfDOM *arg1 = (XdmfDOM *) 0 ;
    XdmfXNode *arg2 = (XdmfXNode *) 0 ;
    XdmfInt32 arg3 ;
    XdmfConstString result;

    if (SWIG_GetArgs(interp, objc, objv,"ooi:Xdmf::XdmfDOM_GetAttributeself Node Index ",0,0,&arg3) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfDOM,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[2], (void **) &arg2, SWIGTYPE_p_XdmfXNode,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    result = (XdmfConstString)(arg1)->GetAttribute(arg2,arg3);

    Tcl_SetObjResult(interp,Tcl_NewStringObj(result,-1));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfDOM_IsChild(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfDOM *arg1 = (XdmfDOM *) 0 ;
    XdmfXNode *arg2 = (XdmfXNode *) 0 ;
    XdmfXNode *arg3 = (XdmfXNode *) NULL ;
    XdmfInt32 result;

    if (SWIG_GetArgs(interp, objc, objv,"oo|o:Xdmf::XdmfDOM_IsChildself ChildToCheck Start ",0,0,0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfDOM,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[2], (void **) &arg2, SWIGTYPE_p_XdmfXNode,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    if (objc > 3) {
        if ((SWIG_ConvertPtr(interp, objv[3], (void **) &arg3, SWIGTYPE_p_XdmfXNode,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    }
    result = (XdmfInt32)(arg1)->IsChild(arg2,arg3);

    Tcl_SetObjResult(interp,Tcl_NewIntObj((long) result));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfDOM_Serialize(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfDOM *arg1 = (XdmfDOM *) 0 ;
    XdmfXNode *arg2 = (XdmfXNode *) NULL ;
    XdmfConstString result;

    if (SWIG_GetArgs(interp, objc, objv,"o|o:Xdmf::XdmfDOM_Serializeself node ",0,0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfDOM,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    if (objc > 2) {
        if ((SWIG_ConvertPtr(interp, objv[2], (void **) &arg2, SWIGTYPE_p_XdmfXNode,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    }
    result = (XdmfConstString)(arg1)->Serialize(arg2);

    Tcl_SetObjResult(interp,Tcl_NewStringObj(result,-1));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfDOM_Insert(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfDOM *arg1 = (XdmfDOM *) 0 ;
    XdmfXNode *arg2 = (XdmfXNode *) 0 ;
    XdmfXNode *arg3 = (XdmfXNode *) 0 ;
    XdmfInt32 arg4 = (XdmfInt32) 0 ;
    XdmfInt32 result;

    if (SWIG_GetArgs(interp, objc, objv,"ooo|i:Xdmf::XdmfDOM_Insertself parent node Level ",0,0,0,&arg4) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfDOM,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[2], (void **) &arg2, SWIGTYPE_p_XdmfXNode,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[3], (void **) &arg3, SWIGTYPE_p_XdmfXNode,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    result = (XdmfInt32)(arg1)->Insert(arg2,arg3,arg4);

    Tcl_SetObjResult(interp,Tcl_NewIntObj((long) result));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfDOM_InsertFromString(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfDOM *arg1 = (XdmfDOM *) 0 ;
    XdmfXNode *arg2 = (XdmfXNode *) 0 ;
    XdmfConstString arg3 ;
    XdmfInt32 result;

    if (SWIG_GetArgs(interp, objc, objv,"oos:Xdmf::XdmfDOM_InsertFromStringself parent xml ",0,0,&arg3) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfDOM,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[2], (void **) &arg2, SWIGTYPE_p_XdmfXNode,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    result = (XdmfInt32)(arg1)->InsertFromString(arg2,arg3);

    Tcl_SetObjResult(interp,Tcl_NewIntObj((long) result));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfDOM_DeleteNode(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfDOM *arg1 = (XdmfDOM *) 0 ;
    XdmfXNode *arg2 = (XdmfXNode *) 0 ;
    XdmfInt32 result;

    if (SWIG_GetArgs(interp, objc, objv,"oo:Xdmf::XdmfDOM_DeleteNodeself node ",0,0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfDOM,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[2], (void **) &arg2, SWIGTYPE_p_XdmfXNode,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    result = (XdmfInt32)(arg1)->DeleteNode(arg2);

    Tcl_SetObjResult(interp,Tcl_NewIntObj((long) result));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfDOM_FindElement(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfDOM *arg1 = (XdmfDOM *) 0 ;
    XdmfConstString arg2 ;
    XdmfInt32 arg3 = (XdmfInt32) 0 ;
    XdmfXNode *arg4 = (XdmfXNode *) NULL ;
    XdmfXNode *result;

    if (SWIG_GetArgs(interp, objc, objv,"os|io:Xdmf::XdmfDOM_FindElementself TagName Index Node ",0,&arg2,&arg3,0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfDOM,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    if (objc > 4) {
        if ((SWIG_ConvertPtr(interp, objv[4], (void **) &arg4, SWIGTYPE_p_XdmfXNode,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    }
    result = (XdmfXNode *)(arg1)->FindElement(arg2,arg3,arg4);

    Tcl_SetObjResult(interp,SWIG_NewInstanceObj(interp, (void *) result, SWIGTYPE_p_XdmfXNode,0));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfDOM_FindElementByAttribute(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfDOM *arg1 = (XdmfDOM *) 0 ;
    XdmfConstString arg2 ;
    XdmfConstString arg3 ;
    XdmfInt32 arg4 = (XdmfInt32) 0 ;
    XdmfXNode *arg5 = (XdmfXNode *) NULL ;
    XdmfXNode *result;

    if (SWIG_GetArgs(interp, objc, objv,"oss|io:Xdmf::XdmfDOM_FindElementByAttributeself Attribute Value Index Node ",0,&arg2,&arg3,&arg4,0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfDOM,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    if (objc > 5) {
        if ((SWIG_ConvertPtr(interp, objv[5], (void **) &arg5, SWIGTYPE_p_XdmfXNode,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    }
    result = (XdmfXNode *)(arg1)->FindElementByAttribute(arg2,arg3,arg4,arg5);

    Tcl_SetObjResult(interp,SWIG_NewInstanceObj(interp, (void *) result, SWIGTYPE_p_XdmfXNode,0));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfDOM_FindNumberOfElements(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfDOM *arg1 = (XdmfDOM *) 0 ;
    XdmfConstString arg2 ;
    XdmfXNode *arg3 = (XdmfXNode *) NULL ;
    XdmfInt32 result;

    if (SWIG_GetArgs(interp, objc, objv,"os|o:Xdmf::XdmfDOM_FindNumberOfElementsself TagName Node ",0,&arg2,0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfDOM,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    if (objc > 3) {
        if ((SWIG_ConvertPtr(interp, objv[3], (void **) &arg3, SWIGTYPE_p_XdmfXNode,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    }
    result = (XdmfInt32)(arg1)->FindNumberOfElements(arg2,arg3);

    Tcl_SetObjResult(interp,Tcl_NewIntObj((long) result));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfDOM_FindNumberOfElementsByAttribute(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfDOM *arg1 = (XdmfDOM *) 0 ;
    XdmfConstString arg2 ;
    XdmfConstString arg3 ;
    XdmfXNode *arg4 = (XdmfXNode *) NULL ;
    XdmfInt32 result;

    if (SWIG_GetArgs(interp, objc, objv,"oss|o:Xdmf::XdmfDOM_FindNumberOfElementsByAttributeself Attribute Value Node ",0,&arg2,&arg3,0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfDOM,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    if (objc > 4) {
        if ((SWIG_ConvertPtr(interp, objv[4], (void **) &arg4, SWIGTYPE_p_XdmfXNode,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    }
    result = (XdmfInt32)(arg1)->FindNumberOfElementsByAttribute(arg2,arg3,arg4);

    Tcl_SetObjResult(interp,Tcl_NewIntObj((long) result));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfDOM_FindProcessingInstruction(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfDOM *arg1 = (XdmfDOM *) 0 ;
    XdmfConstString arg2 = (XdmfConstString) NULL ;
    XdmfInt32 arg3 = (XdmfInt32) 0 ;
    XdmfXNode *arg4 = (XdmfXNode *) NULL ;
    XdmfXNode *result;

    if (SWIG_GetArgs(interp, objc, objv,"o|sio:Xdmf::XdmfDOM_FindProcessingInstructionself Target occurance Node ",0,&arg2,&arg3,0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfDOM,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    if (objc > 4) {
        if ((SWIG_ConvertPtr(interp, objv[4], (void **) &arg4, SWIGTYPE_p_XdmfXNode,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    }
    result = (XdmfXNode *)(arg1)->FindProcessingInstruction(arg2,arg3,arg4);

    Tcl_SetObjResult(interp,SWIG_NewInstanceObj(interp, (void *) result, SWIGTYPE_p_XdmfXNode,0));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfDOM_FindNumberOfProcessingInstructions(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfDOM *arg1 = (XdmfDOM *) 0 ;
    XdmfConstString arg2 = (XdmfConstString) NULL ;
    XdmfXNode *arg3 = (XdmfXNode *) NULL ;
    XdmfInt32 result;

    if (SWIG_GetArgs(interp, objc, objv,"o|so:Xdmf::XdmfDOM_FindNumberOfProcessingInstructionsself Target Node ",0,&arg2,0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfDOM,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    if (objc > 3) {
        if ((SWIG_ConvertPtr(interp, objv[3], (void **) &arg3, SWIGTYPE_p_XdmfXNode,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    }
    result = (XdmfInt32)(arg1)->FindNumberOfProcessingInstructions(arg2,arg3);

    Tcl_SetObjResult(interp,Tcl_NewIntObj((long) result));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfDOM_GetNdgmHost(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfDOM *arg1 = (XdmfDOM *) 0 ;
    XdmfString result;

    if (SWIG_GetArgs(interp, objc, objv,"o:Xdmf::XdmfDOM_GetNdgmHostself ",0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfDOM,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    result = (XdmfString)(arg1)->GetNdgmHost();

    Tcl_SetObjResult(interp,Tcl_NewStringObj(result,-1));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfDOM_SetNdgmHost(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfDOM *arg1 = (XdmfDOM *) 0 ;
    XdmfConstString arg2 ;

    if (SWIG_GetArgs(interp, objc, objv,"os:Xdmf::XdmfDOM_SetNdgmHostself String ",0,&arg2) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfDOM,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    (arg1)->SetNdgmHost(arg2);


    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfDOM_GetWorkingDirectory(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfDOM *arg1 = (XdmfDOM *) 0 ;
    XdmfString result;

    if (SWIG_GetArgs(interp, objc, objv,"o:Xdmf::XdmfDOM_GetWorkingDirectoryself ",0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfDOM,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    result = (XdmfString)(arg1)->GetWorkingDirectory();

    Tcl_SetObjResult(interp,Tcl_NewStringObj(result,-1));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfDOM_SetWorkingDirectory(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfDOM *arg1 = (XdmfDOM *) 0 ;
    XdmfConstString arg2 ;

    if (SWIG_GetArgs(interp, objc, objv,"os:Xdmf::XdmfDOM_SetWorkingDirectoryself String ",0,&arg2) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfDOM,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    (arg1)->SetWorkingDirectory(arg2);


    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfDOM_Get(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfDOM *arg1 = (XdmfDOM *) 0 ;
    XdmfXNode *arg2 = (XdmfXNode *) 0 ;
    XdmfConstString arg3 ;
    XdmfConstString result;

    if (SWIG_GetArgs(interp, objc, objv,"oos:Xdmf::XdmfDOM_Getself Node Attribute ",0,0,&arg3) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfDOM,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[2], (void **) &arg2, SWIGTYPE_p_XdmfXNode,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    result = (XdmfConstString)(arg1)->Get(arg2,arg3);

    Tcl_SetObjResult(interp,Tcl_NewStringObj(result,-1));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfDOM_SetUserData(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfDOM *arg1 = (XdmfDOM *) 0 ;
    XdmfXNode *arg2 = (XdmfXNode *) 0 ;
    XdmfPointer arg3 = (XdmfPointer) 0 ;

    if (SWIG_GetArgs(interp, objc, objv,"ooo:Xdmf::XdmfDOM_SetUserDataself Node UserData ",0,0,0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfDOM,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[2], (void **) &arg2, SWIGTYPE_p_XdmfXNode,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[3], (void **) &arg3, 0,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    (arg1)->SetUserData(arg2,arg3);


    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfDOM_GetUserData(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfDOM *arg1 = (XdmfDOM *) 0 ;
    XdmfXNode *arg2 = (XdmfXNode *) 0 ;
    XdmfPointer result;

    if (SWIG_GetArgs(interp, objc, objv,"oo:Xdmf::XdmfDOM_GetUserDataself Node ",0,0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfDOM,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[2], (void **) &arg2, SWIGTYPE_p_XdmfXNode,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    result = (XdmfPointer)(arg1)->GetUserData(arg2);

    Tcl_SetObjResult(interp,SWIG_NewInstanceObj(interp, (void *) result, SWIGTYPE_XdmfPointer,0));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfDOM_Set(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfDOM *arg1 = (XdmfDOM *) 0 ;
    XdmfXNode *arg2 = (XdmfXNode *) 0 ;
    XdmfConstString arg3 ;
    XdmfConstString arg4 ;

    if (SWIG_GetArgs(interp, objc, objv,"ooss:Xdmf::XdmfDOM_Setself Node Attribute Value ",0,0,&arg3,&arg4) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfDOM,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[2], (void **) &arg2, SWIGTYPE_p_XdmfXNode,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    (arg1)->Set(arg2,arg3,arg4);


    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfDOM_GetNumberType(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfDOM *arg1 = (XdmfDOM *) 0 ;
    XdmfXNode *arg2 = (XdmfXNode *) 0 ;
    XdmfInt32 result;

    if (SWIG_GetArgs(interp, objc, objv,"oo:Xdmf::XdmfDOM_GetNumberTypeself Node ",0,0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfDOM,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[2], (void **) &arg2, SWIGTYPE_p_XdmfXNode,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    result = (XdmfInt32)(arg1)->GetNumberType(arg2);

    Tcl_SetObjResult(interp,Tcl_NewIntObj((long) result));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfDOM_FindNumberOfParameters(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfDOM *arg1 = (XdmfDOM *) 0 ;
    XdmfXNode *arg2 = (XdmfXNode *) NULL ;
    XdmfInt32 result;

    if (SWIG_GetArgs(interp, objc, objv,"o|o:Xdmf::XdmfDOM_FindNumberOfParametersself Node ",0,0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfDOM,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    if (objc > 2) {
        if ((SWIG_ConvertPtr(interp, objv[2], (void **) &arg2, SWIGTYPE_p_XdmfXNode,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    }
    result = (XdmfInt32)(arg1)->FindNumberOfParameters(arg2);

    Tcl_SetObjResult(interp,Tcl_NewIntObj((long) result));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfDOM_FindParameter(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfDOM *arg1 = (XdmfDOM *) 0 ;
    XdmfConstString arg2 ;
    XdmfXNode *arg3 = (XdmfXNode *) NULL ;
    XdmfParameter *result;

    if (SWIG_GetArgs(interp, objc, objv,"os|o:Xdmf::XdmfDOM_FindParameterself ParameterName Node ",0,&arg2,0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfDOM,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    if (objc > 3) {
        if ((SWIG_ConvertPtr(interp, objv[3], (void **) &arg3, SWIGTYPE_p_XdmfXNode,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    }
    result = (XdmfParameter *)(arg1)->FindParameter(arg2,arg3);

    Tcl_SetObjResult(interp,SWIG_NewInstanceObj(interp, (void *) result, SWIGTYPE_p_XdmfParameter,0));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfDOM_GetParameter(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfDOM *arg1 = (XdmfDOM *) 0 ;
    XdmfInt32 arg2 = (XdmfInt32) 0 ;
    XdmfXNode *arg3 = (XdmfXNode *) NULL ;
    XdmfParameter *result;

    if (SWIG_GetArgs(interp, objc, objv,"o|io:Xdmf::XdmfDOM_GetParameterself Index Node ",0,&arg2,0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfDOM,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    if (objc > 3) {
        if ((SWIG_ConvertPtr(interp, objv[3], (void **) &arg3, SWIGTYPE_p_XdmfXNode,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    }
    result = (XdmfParameter *)(arg1)->GetParameter(arg2,arg3);

    Tcl_SetObjResult(interp,SWIG_NewInstanceObj(interp, (void *) result, SWIGTYPE_p_XdmfParameter,0));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static void swig_delete_XdmfDOM(void *obj) {
XdmfDOM *arg1 = (XdmfDOM *) obj;
delete arg1;
}
static swig_method swig_XdmfDOM_methods[] = {
    {"GetClassName", _wrap_XdmfDOM_GetClassName},
    {"SetXMLVersion", _wrap_XdmfDOM_SetXMLVersion},
    {"GetXMLVersion", _wrap_XdmfDOM_GetXMLVersion},
    {"SetDocType", _wrap_XdmfDOM_SetDocType},
    {"GetDocType", _wrap_XdmfDOM_GetDocType},
    {"SetSystem", _wrap_XdmfDOM_SetSystem},
    {"GetSystem", _wrap_XdmfDOM_GetSystem},
    {"SetInputFileName", _wrap_XdmfDOM_SetInputFileName},
    {"SetOutputFileName", _wrap_XdmfDOM_SetOutputFileName},
    {"GetInputFileName", _wrap_XdmfDOM_GetInputFileName},
    {"GetOutputFileName", _wrap_XdmfDOM_GetOutputFileName},
    {"GetOutput", _wrap_XdmfDOM_GetOutput},
    {"SetOutput", _wrap_XdmfDOM_SetOutput},
    {"GetInput", _wrap_XdmfDOM_GetInput},
    {"SetInput", _wrap_XdmfDOM_SetInput},
    {"GenerateHead", _wrap_XdmfDOM_GenerateHead},
    {"Puts", _wrap_XdmfDOM_Puts},
    {"GenerateTail", _wrap_XdmfDOM_GenerateTail},
    {"Gets", _wrap_XdmfDOM_Gets},
    {"GetTree", _wrap_XdmfDOM_GetTree},
    {"__Parse", _wrap_XdmfDOM___Parse},
    {"Parse", _wrap_XdmfDOM_Parse},
    {"GetRoot", _wrap_XdmfDOM_GetRoot},
    {"GetNumberOfChildren", _wrap_XdmfDOM_GetNumberOfChildren},
    {"GetChild", _wrap_XdmfDOM_GetChild},
    {"GetNumberOfAttributes", _wrap_XdmfDOM_GetNumberOfAttributes},
    {"GetAttribute", _wrap_XdmfDOM_GetAttribute},
    {"IsChild", _wrap_XdmfDOM_IsChild},
    {"Serialize", _wrap_XdmfDOM_Serialize},
    {"Insert", _wrap_XdmfDOM_Insert},
    {"InsertFromString", _wrap_XdmfDOM_InsertFromString},
    {"DeleteNode", _wrap_XdmfDOM_DeleteNode},
    {"FindElement", _wrap_XdmfDOM_FindElement},
    {"FindElementByAttribute", _wrap_XdmfDOM_FindElementByAttribute},
    {"FindNumberOfElements", _wrap_XdmfDOM_FindNumberOfElements},
    {"FindNumberOfElementsByAttribute", _wrap_XdmfDOM_FindNumberOfElementsByAttribute},
    {"FindProcessingInstruction", _wrap_XdmfDOM_FindProcessingInstruction},
    {"FindNumberOfProcessingInstructions", _wrap_XdmfDOM_FindNumberOfProcessingInstructions},
    {"GetNdgmHost", _wrap_XdmfDOM_GetNdgmHost},
    {"SetNdgmHost", _wrap_XdmfDOM_SetNdgmHost},
    {"GetWorkingDirectory", _wrap_XdmfDOM_GetWorkingDirectory},
    {"SetWorkingDirectory", _wrap_XdmfDOM_SetWorkingDirectory},
    {"Get", _wrap_XdmfDOM_Get},
    {"SetUserData", _wrap_XdmfDOM_SetUserData},
    {"GetUserData", _wrap_XdmfDOM_GetUserData},
    {"Set", _wrap_XdmfDOM_Set},
    {"GetNumberType", _wrap_XdmfDOM_GetNumberType},
    {"FindNumberOfParameters", _wrap_XdmfDOM_FindNumberOfParameters},
    {"FindParameter", _wrap_XdmfDOM_FindParameter},
    {"GetParameter", _wrap_XdmfDOM_GetParameter},
    {0,0}
};
static swig_attribute swig_XdmfDOM_attributes[] = {
    {0,0,0}
};
extern swig_class _wrap_class_XdmfObject;
static swig_class *swig_XdmfDOM_bases[] = {&_wrap_class_XdmfObject,0};
swig_class _wrap_class_XdmfDOM = { "XdmfDOM", &SWIGTYPE_p_XdmfDOM,_wrap_new_XdmfDOM, swig_delete_XdmfDOM, swig_XdmfDOM_methods, swig_XdmfDOM_attributes, swig_XdmfDOM_bases };
static int
_wrap_GetXNodeSize(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfXNode *arg1 = (XdmfXNode *) 0 ;
    int result;

    if (SWIG_GetArgs(interp, objc, objv,"o:Xdmf::GetXNodeSizeNode ",0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfXNode,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    result = (int)GetXNodeSize(arg1);

    Tcl_SetObjResult(interp,Tcl_NewIntObj((long) result));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_GetXNodeName(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfXNode *arg1 = (XdmfXNode *) 0 ;
    int arg2 ;
    XdmfConstString result;

    if (SWIG_GetArgs(interp, objc, objv,"oi:Xdmf::GetXNodeNameNode index ",0,&arg2) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfXNode,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    result = (XdmfConstString)GetXNodeName(arg1,arg2);

    Tcl_SetObjResult(interp,Tcl_NewStringObj(result,-1));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_GetXNodeData(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfXNode *arg1 = (XdmfXNode *) 0 ;
    int arg2 ;
    XdmfConstString result;

    if (SWIG_GetArgs(interp, objc, objv,"oi:Xdmf::GetXNodeDataNode index ",0,&arg2) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfXNode,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    result = (XdmfConstString)GetXNodeData(arg1,arg2);

    Tcl_SetObjResult(interp,Tcl_NewStringObj(result,-1));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_HandleToXdmfDOM(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfConstString arg1 ;
    XdmfDOM *result;

    if (SWIG_GetArgs(interp, objc, objv,"s:Xdmf::HandleToXdmfDOMSource ",&arg1) == TCL_ERROR) SWIG_fail;
    result = (XdmfDOM *)HandleToXdmfDOM(arg1);

    Tcl_SetObjResult(interp,SWIG_NewInstanceObj(interp, (void *) result, SWIGTYPE_p_XdmfDOM,0));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfArrayExpr(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfArray *arg1 = (XdmfArray *) 0 ;
    XdmfString arg2 ;
    XdmfArray *arg3 = (XdmfArray *) 0 ;

    if (SWIG_GetArgs(interp, objc, objv,"oso:Xdmf::XdmfArrayExprArray Operation Values ",0,&arg2,0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfArray,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[3], (void **) &arg3, SWIGTYPE_p_XdmfArray,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    XdmfArrayExpr(arg1,arg2,arg3);


    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfScalarExpr(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfArray *arg1 = (XdmfArray *) 0 ;
    XdmfString arg2 ;
    XdmfFloat64 arg3 ;

    if (SWIG_GetArgs(interp, objc, objv,"osd:Xdmf::XdmfScalarExprArray Operation Value ",0,&arg2,&arg3) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfArray,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    XdmfScalarExpr(arg1,arg2,arg3);


    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfExpr(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfString arg1 ;
    XdmfArray *result;

    if (SWIG_GetArgs(interp, objc, objv,"s:Xdmf::XdmfExprStatement ",&arg1) == TCL_ERROR) SWIG_fail;
    result = (XdmfArray *)XdmfExpr(arg1);

    Tcl_SetObjResult(interp,SWIG_NewInstanceObj(interp, (void *) result, SWIGTYPE_p_XdmfArray,0));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_new_XdmfFormat(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfFormat *result;

    if (SWIG_GetArgs(interp, objc, objv,":Xdmf::new_XdmfFormat") == TCL_ERROR) SWIG_fail;
    result = (XdmfFormat *)new XdmfFormat();

    Tcl_SetObjResult(interp,SWIG_NewInstanceObj(interp, (void *) result, SWIGTYPE_p_XdmfFormat,0));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_delete_XdmfFormat(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfFormat *arg1 = (XdmfFormat *) 0 ;

    if (SWIG_GetArgs(interp, objc, objv,"o:Xdmf::delete_XdmfFormatself ",0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfFormat,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    delete arg1;


    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfFormat_GetClassName(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfFormat *arg1 = (XdmfFormat *) 0 ;
    XdmfConstString result;

    if (SWIG_GetArgs(interp, objc, objv,"o:Xdmf::XdmfFormat_GetClassNameself ",0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfFormat,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    result = (XdmfConstString)(arg1)->GetClassName();

    Tcl_SetObjResult(interp,Tcl_NewStringObj(result,-1));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfFormat_SetFormat(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfFormat *arg1 = (XdmfFormat *) 0 ;
    XdmfString arg2 ;

    if (SWIG_GetArgs(interp, objc, objv,"os:Xdmf::XdmfFormat_SetFormatself Format ",0,&arg2) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfFormat,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    (arg1)->SetFormat(arg2);


    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfFormat_GetFormat(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfFormat *arg1 = (XdmfFormat *) 0 ;
    XdmfString result;

    if (SWIG_GetArgs(interp, objc, objv,"o:Xdmf::XdmfFormat_GetFormatself ",0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfFormat,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    result = (XdmfString)(arg1)->GetFormat();

    Tcl_SetObjResult(interp,Tcl_NewStringObj(result,-1));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfFormat_ElementToDataDesc(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfFormat *arg1 = (XdmfFormat *) 0 ;
    XdmfXNode *arg2 = (XdmfXNode *) 0 ;
    XdmfDataDesc *result;

    if (SWIG_GetArgs(interp, objc, objv,"oo:Xdmf::XdmfFormat_ElementToDataDescself Element ",0,0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfFormat,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[2], (void **) &arg2, SWIGTYPE_p_XdmfXNode,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    result = (XdmfDataDesc *)(arg1)->ElementToDataDesc(arg2);

    Tcl_SetObjResult(interp,SWIG_NewInstanceObj(interp, (void *) result, SWIGTYPE_p_XdmfDataDesc,0));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfFormat_ElementToCompoundDataDesc(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfFormat *arg1 = (XdmfFormat *) 0 ;
    XdmfXNode *arg2 = (XdmfXNode *) 0 ;
    XdmfDataDesc *result;

    if (SWIG_GetArgs(interp, objc, objv,"oo:Xdmf::XdmfFormat_ElementToCompoundDataDescself Element ",0,0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfFormat,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[2], (void **) &arg2, SWIGTYPE_p_XdmfXNode,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    result = (XdmfDataDesc *)(arg1)->ElementToCompoundDataDesc(arg2);

    Tcl_SetObjResult(interp,SWIG_NewInstanceObj(interp, (void *) result, SWIGTYPE_p_XdmfDataDesc,0));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfFormat_DataDescToElement(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfFormat *arg1 = (XdmfFormat *) 0 ;
    XdmfDataDesc *arg2 = (XdmfDataDesc *) 0 ;
    XdmfXNode *arg3 = (XdmfXNode *) NULL ;
    XdmfXNode *result;

    if (SWIG_GetArgs(interp, objc, objv,"oo|o:Xdmf::XdmfFormat_DataDescToElementself Desc Element ",0,0,0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfFormat,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[2], (void **) &arg2, SWIGTYPE_p_XdmfDataDesc,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    if (objc > 3) {
        if ((SWIG_ConvertPtr(interp, objv[3], (void **) &arg3, SWIGTYPE_p_XdmfXNode,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    }
    result = (XdmfXNode *)(arg1)->DataDescToElement(arg2,arg3);

    Tcl_SetObjResult(interp,SWIG_NewInstanceObj(interp, (void *) result, SWIGTYPE_p_XdmfXNode,0));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static void swig_delete_XdmfFormat(void *obj) {
XdmfFormat *arg1 = (XdmfFormat *) obj;
delete arg1;
}
static swig_method swig_XdmfFormat_methods[] = {
    {"GetClassName", _wrap_XdmfFormat_GetClassName},
    {"SetFormat", _wrap_XdmfFormat_SetFormat},
    {"GetFormat", _wrap_XdmfFormat_GetFormat},
    {"ElementToDataDesc", _wrap_XdmfFormat_ElementToDataDesc},
    {"ElementToCompoundDataDesc", _wrap_XdmfFormat_ElementToCompoundDataDesc},
    {"DataDescToElement", _wrap_XdmfFormat_DataDescToElement},
    {0,0}
};
static swig_attribute swig_XdmfFormat_attributes[] = {
    {0,0,0}
};
extern swig_class _wrap_class_XdmfLightData;
static swig_class *swig_XdmfFormat_bases[] = {&_wrap_class_XdmfLightData,0};
swig_class _wrap_class_XdmfFormat = { "XdmfFormat", &SWIGTYPE_p_XdmfFormat,_wrap_new_XdmfFormat, swig_delete_XdmfFormat, swig_XdmfFormat_methods, swig_XdmfFormat_attributes, swig_XdmfFormat_bases };
static int
_wrap_new_XdmfFormatHDF(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfFormatHDF *result;

    if (SWIG_GetArgs(interp, objc, objv,":Xdmf::new_XdmfFormatHDF") == TCL_ERROR) SWIG_fail;
    result = (XdmfFormatHDF *)new XdmfFormatHDF();

    Tcl_SetObjResult(interp,SWIG_NewInstanceObj(interp, (void *) result, SWIGTYPE_p_XdmfFormatHDF,0));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_delete_XdmfFormatHDF(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfFormatHDF *arg1 = (XdmfFormatHDF *) 0 ;

    if (SWIG_GetArgs(interp, objc, objv,"o:Xdmf::delete_XdmfFormatHDFself ",0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfFormatHDF,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    delete arg1;


    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfFormatHDF_GetClassName(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfFormatHDF *arg1 = (XdmfFormatHDF *) 0 ;
    XdmfConstString result;

    if (SWIG_GetArgs(interp, objc, objv,"o:Xdmf::XdmfFormatHDF_GetClassNameself ",0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfFormatHDF,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    result = (XdmfConstString)(arg1)->GetClassName();

    Tcl_SetObjResult(interp,Tcl_NewStringObj(result,-1));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfFormatHDF_ElementToArray(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfFormatHDF *arg1 = (XdmfFormatHDF *) 0 ;
    XdmfXNode *arg2 = (XdmfXNode *) 0 ;
    XdmfDataDesc *arg3 = (XdmfDataDesc *) NULL ;
    XdmfArray *arg4 = (XdmfArray *) NULL ;
    XdmfArray *result;

    if (SWIG_GetArgs(interp, objc, objv,"oo|oo:Xdmf::XdmfFormatHDF_ElementToArrayself Element Desc Array ",0,0,0,0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfFormatHDF,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[2], (void **) &arg2, SWIGTYPE_p_XdmfXNode,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    if (objc > 3) {
        if ((SWIG_ConvertPtr(interp, objv[3], (void **) &arg3, SWIGTYPE_p_XdmfDataDesc,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    }
    if (objc > 4) {
        if ((SWIG_ConvertPtr(interp, objv[4], (void **) &arg4, SWIGTYPE_p_XdmfArray,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    }
    result = (XdmfArray *)(arg1)->ElementToArray(arg2,arg3,arg4);

    Tcl_SetObjResult(interp,SWIG_NewInstanceObj(interp, (void *) result, SWIGTYPE_p_XdmfArray,0));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfFormatHDF_ArrayToElement(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfFormatHDF *arg1 = (XdmfFormatHDF *) 0 ;
    XdmfArray *arg2 = (XdmfArray *) 0 ;
    XdmfString arg3 = (XdmfString) NULL ;
    XdmfXNode *arg4 = (XdmfXNode *) NULL ;
    XdmfDataDesc *arg5 = (XdmfDataDesc *) NULL ;
    XdmfXNode *result;

    if (SWIG_GetArgs(interp, objc, objv,"oo|soo:Xdmf::XdmfFormatHDF_ArrayToElementself Array HeavyDataset Element Desc ",0,0,&arg3,0,0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfFormatHDF,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[2], (void **) &arg2, SWIGTYPE_p_XdmfArray,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    if (objc > 4) {
        if ((SWIG_ConvertPtr(interp, objv[4], (void **) &arg4, SWIGTYPE_p_XdmfXNode,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    }
    if (objc > 5) {
        if ((SWIG_ConvertPtr(interp, objv[5], (void **) &arg5, SWIGTYPE_p_XdmfDataDesc,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    }
    result = (XdmfXNode *)(arg1)->ArrayToElement(arg2,arg3,arg4,arg5);

    Tcl_SetObjResult(interp,SWIG_NewInstanceObj(interp, (void *) result, SWIGTYPE_p_XdmfXNode,0));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static void swig_delete_XdmfFormatHDF(void *obj) {
XdmfFormatHDF *arg1 = (XdmfFormatHDF *) obj;
delete arg1;
}
static swig_method swig_XdmfFormatHDF_methods[] = {
    {"GetClassName", _wrap_XdmfFormatHDF_GetClassName},
    {"ElementToArray", _wrap_XdmfFormatHDF_ElementToArray},
    {"ArrayToElement", _wrap_XdmfFormatHDF_ArrayToElement},
    {0,0}
};
static swig_attribute swig_XdmfFormatHDF_attributes[] = {
    {0,0,0}
};
extern swig_class _wrap_class_XdmfFormat;
static swig_class *swig_XdmfFormatHDF_bases[] = {&_wrap_class_XdmfFormat,0};
swig_class _wrap_class_XdmfFormatHDF = { "XdmfFormatHDF", &SWIGTYPE_p_XdmfFormatHDF,_wrap_new_XdmfFormatHDF, swig_delete_XdmfFormatHDF, swig_XdmfFormatHDF_methods, swig_XdmfFormatHDF_attributes, swig_XdmfFormatHDF_bases };
static int
_wrap_new_XdmfFormatMulti(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfFormatMulti *result;

    if (SWIG_GetArgs(interp, objc, objv,":Xdmf::new_XdmfFormatMulti") == TCL_ERROR) SWIG_fail;
    result = (XdmfFormatMulti *)new XdmfFormatMulti();

    Tcl_SetObjResult(interp,SWIG_NewInstanceObj(interp, (void *) result, SWIGTYPE_p_XdmfFormatMulti,0));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_delete_XdmfFormatMulti(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfFormatMulti *arg1 = (XdmfFormatMulti *) 0 ;

    if (SWIG_GetArgs(interp, objc, objv,"o:Xdmf::delete_XdmfFormatMultiself ",0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfFormatMulti,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    delete arg1;


    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfFormatMulti_GetClassName(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfFormatMulti *arg1 = (XdmfFormatMulti *) 0 ;
    XdmfConstString result;

    if (SWIG_GetArgs(interp, objc, objv,"o:Xdmf::XdmfFormatMulti_GetClassNameself ",0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfFormatMulti,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    result = (XdmfConstString)(arg1)->GetClassName();

    Tcl_SetObjResult(interp,Tcl_NewStringObj(result,-1));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfFormatMulti_SetFormatFromElement(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfFormatMulti *arg1 = (XdmfFormatMulti *) 0 ;
    XdmfXNode *arg2 = (XdmfXNode *) 0 ;
    XdmfConstString result;

    if (SWIG_GetArgs(interp, objc, objv,"oo:Xdmf::XdmfFormatMulti_SetFormatFromElementself Element ",0,0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfFormatMulti,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[2], (void **) &arg2, SWIGTYPE_p_XdmfXNode,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    result = (XdmfConstString)(arg1)->SetFormatFromElement(arg2);

    Tcl_SetObjResult(interp,Tcl_NewStringObj(result,-1));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfFormatMulti_ElementToArray(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfFormatMulti *arg1 = (XdmfFormatMulti *) 0 ;
    XdmfXNode *arg2 = (XdmfXNode *) 0 ;
    XdmfDataDesc *arg3 = (XdmfDataDesc *) NULL ;
    XdmfArray *arg4 = (XdmfArray *) NULL ;
    XdmfArray *result;

    if (SWIG_GetArgs(interp, objc, objv,"oo|oo:Xdmf::XdmfFormatMulti_ElementToArrayself Element Desc Array ",0,0,0,0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfFormatMulti,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[2], (void **) &arg2, SWIGTYPE_p_XdmfXNode,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    if (objc > 3) {
        if ((SWIG_ConvertPtr(interp, objv[3], (void **) &arg3, SWIGTYPE_p_XdmfDataDesc,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    }
    if (objc > 4) {
        if ((SWIG_ConvertPtr(interp, objv[4], (void **) &arg4, SWIGTYPE_p_XdmfArray,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    }
    result = (XdmfArray *)(arg1)->ElementToArray(arg2,arg3,arg4);

    Tcl_SetObjResult(interp,SWIG_NewInstanceObj(interp, (void *) result, SWIGTYPE_p_XdmfArray,0));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfFormatMulti_ArrayToElement(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfFormatMulti *arg1 = (XdmfFormatMulti *) 0 ;
    XdmfArray *arg2 = (XdmfArray *) 0 ;
    XdmfString arg3 = (XdmfString) NULL ;
    XdmfXNode *arg4 = (XdmfXNode *) NULL ;
    XdmfDataDesc *arg5 = (XdmfDataDesc *) NULL ;
    XdmfXNode *result;

    if (SWIG_GetArgs(interp, objc, objv,"oo|soo:Xdmf::XdmfFormatMulti_ArrayToElementself Array HeavyDataset Element Desc ",0,0,&arg3,0,0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfFormatMulti,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[2], (void **) &arg2, SWIGTYPE_p_XdmfArray,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    if (objc > 4) {
        if ((SWIG_ConvertPtr(interp, objv[4], (void **) &arg4, SWIGTYPE_p_XdmfXNode,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    }
    if (objc > 5) {
        if ((SWIG_ConvertPtr(interp, objv[5], (void **) &arg5, SWIGTYPE_p_XdmfDataDesc,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    }
    result = (XdmfXNode *)(arg1)->ArrayToElement(arg2,arg3,arg4,arg5);

    Tcl_SetObjResult(interp,SWIG_NewInstanceObj(interp, (void *) result, SWIGTYPE_p_XdmfXNode,0));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static void swig_delete_XdmfFormatMulti(void *obj) {
XdmfFormatMulti *arg1 = (XdmfFormatMulti *) obj;
delete arg1;
}
static swig_method swig_XdmfFormatMulti_methods[] = {
    {"GetClassName", _wrap_XdmfFormatMulti_GetClassName},
    {"SetFormatFromElement", _wrap_XdmfFormatMulti_SetFormatFromElement},
    {"ElementToArray", _wrap_XdmfFormatMulti_ElementToArray},
    {"ArrayToElement", _wrap_XdmfFormatMulti_ArrayToElement},
    {0,0}
};
static swig_attribute swig_XdmfFormatMulti_attributes[] = {
    {0,0,0}
};
extern swig_class _wrap_class_XdmfFormat;
static swig_class *swig_XdmfFormatMulti_bases[] = {&_wrap_class_XdmfFormat,0};
swig_class _wrap_class_XdmfFormatMulti = { "XdmfFormatMulti", &SWIGTYPE_p_XdmfFormatMulti,_wrap_new_XdmfFormatMulti, swig_delete_XdmfFormatMulti, swig_XdmfFormatMulti_methods, swig_XdmfFormatMulti_attributes, swig_XdmfFormatMulti_bases };
static int
_wrap_new_XdmfFormatXML(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfFormatXML *result;

    if (SWIG_GetArgs(interp, objc, objv,":Xdmf::new_XdmfFormatXML") == TCL_ERROR) SWIG_fail;
    result = (XdmfFormatXML *)new XdmfFormatXML();

    Tcl_SetObjResult(interp,SWIG_NewInstanceObj(interp, (void *) result, SWIGTYPE_p_XdmfFormatXML,0));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_delete_XdmfFormatXML(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfFormatXML *arg1 = (XdmfFormatXML *) 0 ;

    if (SWIG_GetArgs(interp, objc, objv,"o:Xdmf::delete_XdmfFormatXMLself ",0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfFormatXML,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    delete arg1;


    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfFormatXML_GetClassName(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfFormatXML *arg1 = (XdmfFormatXML *) 0 ;
    XdmfConstString result;

    if (SWIG_GetArgs(interp, objc, objv,"o:Xdmf::XdmfFormatXML_GetClassNameself ",0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfFormatXML,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    result = (XdmfConstString)(arg1)->GetClassName();

    Tcl_SetObjResult(interp,Tcl_NewStringObj(result,-1));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfFormatXML_ElementToArray(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfFormatXML *arg1 = (XdmfFormatXML *) 0 ;
    XdmfXNode *arg2 = (XdmfXNode *) 0 ;
    XdmfDataDesc *arg3 = (XdmfDataDesc *) NULL ;
    XdmfArray *arg4 = (XdmfArray *) NULL ;
    XdmfArray *result;

    if (SWIG_GetArgs(interp, objc, objv,"oo|oo:Xdmf::XdmfFormatXML_ElementToArrayself Element Desc Array ",0,0,0,0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfFormatXML,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[2], (void **) &arg2, SWIGTYPE_p_XdmfXNode,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    if (objc > 3) {
        if ((SWIG_ConvertPtr(interp, objv[3], (void **) &arg3, SWIGTYPE_p_XdmfDataDesc,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    }
    if (objc > 4) {
        if ((SWIG_ConvertPtr(interp, objv[4], (void **) &arg4, SWIGTYPE_p_XdmfArray,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    }
    result = (XdmfArray *)(arg1)->ElementToArray(arg2,arg3,arg4);

    Tcl_SetObjResult(interp,SWIG_NewInstanceObj(interp, (void *) result, SWIGTYPE_p_XdmfArray,0));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfFormatXML_ArrayToElement(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfFormatXML *arg1 = (XdmfFormatXML *) 0 ;
    XdmfArray *arg2 = (XdmfArray *) 0 ;
    XdmfString arg3 = (XdmfString) NULL ;
    XdmfXNode *arg4 = (XdmfXNode *) NULL ;
    XdmfDataDesc *arg5 = (XdmfDataDesc *) NULL ;
    XdmfXNode *result;

    if (SWIG_GetArgs(interp, objc, objv,"oo|soo:Xdmf::XdmfFormatXML_ArrayToElementself Array HeavyDataset Element Desc ",0,0,&arg3,0,0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfFormatXML,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[2], (void **) &arg2, SWIGTYPE_p_XdmfArray,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    if (objc > 4) {
        if ((SWIG_ConvertPtr(interp, objv[4], (void **) &arg4, SWIGTYPE_p_XdmfXNode,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    }
    if (objc > 5) {
        if ((SWIG_ConvertPtr(interp, objv[5], (void **) &arg5, SWIGTYPE_p_XdmfDataDesc,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    }
    result = (XdmfXNode *)(arg1)->ArrayToElement(arg2,arg3,arg4,arg5);

    Tcl_SetObjResult(interp,SWIG_NewInstanceObj(interp, (void *) result, SWIGTYPE_p_XdmfXNode,0));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static void swig_delete_XdmfFormatXML(void *obj) {
XdmfFormatXML *arg1 = (XdmfFormatXML *) obj;
delete arg1;
}
static swig_method swig_XdmfFormatXML_methods[] = {
    {"GetClassName", _wrap_XdmfFormatXML_GetClassName},
    {"ElementToArray", _wrap_XdmfFormatXML_ElementToArray},
    {"ArrayToElement", _wrap_XdmfFormatXML_ArrayToElement},
    {0,0}
};
static swig_attribute swig_XdmfFormatXML_attributes[] = {
    {0,0,0}
};
extern swig_class _wrap_class_XdmfFormat;
static swig_class *swig_XdmfFormatXML_bases[] = {&_wrap_class_XdmfFormat,0};
swig_class _wrap_class_XdmfFormatXML = { "XdmfFormatXML", &SWIGTYPE_p_XdmfFormatXML,_wrap_new_XdmfFormatXML, swig_delete_XdmfFormatXML, swig_XdmfFormatXML_methods, swig_XdmfFormatXML_attributes, swig_XdmfFormatXML_bases };
static int
_wrap_new_XdmfTopology(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfTopology *result;

    if (SWIG_GetArgs(interp, objc, objv,":Xdmf::new_XdmfTopology") == TCL_ERROR) SWIG_fail;
    result = (XdmfTopology *)new XdmfTopology();

    Tcl_SetObjResult(interp,SWIG_NewInstanceObj(interp, (void *) result, SWIGTYPE_p_XdmfTopology,0));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_delete_XdmfTopology(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfTopology *arg1 = (XdmfTopology *) 0 ;

    if (SWIG_GetArgs(interp, objc, objv,"o:Xdmf::delete_XdmfTopologyself ",0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfTopology,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    delete arg1;


    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfTopology_GetClassName(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfTopology *arg1 = (XdmfTopology *) 0 ;
    XdmfConstString result;

    if (SWIG_GetArgs(interp, objc, objv,"o:Xdmf::XdmfTopology_GetClassNameself ",0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfTopology,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    result = (XdmfConstString)(arg1)->GetClassName();

    Tcl_SetObjResult(interp,Tcl_NewStringObj(result,-1));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfTopology_GetClass(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfTopology *arg1 = (XdmfTopology *) 0 ;
    XdmfInt32 result;

    if (SWIG_GetArgs(interp, objc, objv,"o:Xdmf::XdmfTopology_GetClassself ",0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfTopology,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    result = (XdmfInt32)(arg1)->GetClass();

    Tcl_SetObjResult(interp,Tcl_NewIntObj((long) result));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfTopology_GetClassAsString(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfTopology *arg1 = (XdmfTopology *) 0 ;
    XdmfString result;

    if (SWIG_GetArgs(interp, objc, objv,"o:Xdmf::XdmfTopology_GetClassAsStringself ",0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfTopology,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    result = (XdmfString)(arg1)->GetClassAsString();

    Tcl_SetObjResult(interp,Tcl_NewStringObj(result,-1));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfTopology_SetTopologyType(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfTopology *arg1 = (XdmfTopology *) 0 ;
    XdmfInt32 arg2 ;
    XdmfInt32 result;

    if (SWIG_GetArgs(interp, objc, objv,"oi:Xdmf::XdmfTopology_SetTopologyTypeself TopologyType ",0,&arg2) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfTopology,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    result = (XdmfInt32)(arg1)->SetTopologyType(arg2);

    Tcl_SetObjResult(interp,Tcl_NewIntObj((long) result));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfTopology_SetTopologyTypeFromString(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfTopology *arg1 = (XdmfTopology *) 0 ;
    XdmfConstString arg2 ;
    XdmfInt32 result;

    if (SWIG_GetArgs(interp, objc, objv,"os:Xdmf::XdmfTopology_SetTopologyTypeFromStringself TopologyType ",0,&arg2) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfTopology,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    result = (XdmfInt32)(arg1)->SetTopologyTypeFromString(arg2);

    Tcl_SetObjResult(interp,Tcl_NewIntObj((long) result));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfTopology_GetTopologyType(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfTopology *arg1 = (XdmfTopology *) 0 ;
    XdmfInt32 result;

    if (SWIG_GetArgs(interp, objc, objv,"o:Xdmf::XdmfTopology_GetTopologyTypeself ",0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfTopology,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    result = (XdmfInt32)(arg1)->GetTopologyType();

    Tcl_SetObjResult(interp,Tcl_NewIntObj((long) result));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfTopology_GetTopologyTypeAsString(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfTopology *arg1 = (XdmfTopology *) 0 ;
    XdmfString result;

    if (SWIG_GetArgs(interp, objc, objv,"o:Xdmf::XdmfTopology_GetTopologyTypeAsStringself ",0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfTopology,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    result = (XdmfString)(arg1)->GetTopologyTypeAsString();

    Tcl_SetObjResult(interp,Tcl_NewStringObj(result,-1));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfTopology_GetOrder(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfTopology *arg1 = (XdmfTopology *) 0 ;
    XdmfInt32 *result;

    if (SWIG_GetArgs(interp, objc, objv,"o:Xdmf::XdmfTopology_GetOrderself ",0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfTopology,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    result = (XdmfInt32 *)(arg1)->GetOrder();

    Tcl_SetObjResult(interp,SWIG_NewInstanceObj(interp, (void *) result, SWIGTYPE_p_XdmfInt32,0));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfTopology_GetOrderAsString(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfTopology *arg1 = (XdmfTopology *) 0 ;
    XdmfString result;

    if (SWIG_GetArgs(interp, objc, objv,"o:Xdmf::XdmfTopology_GetOrderAsStringself ",0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfTopology,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    result = (XdmfString)(arg1)->GetOrderAsString();

    Tcl_SetObjResult(interp,Tcl_NewStringObj(result,-1));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfTopology_SetOrderFromString(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfTopology *arg1 = (XdmfTopology *) 0 ;
    XdmfConstString arg2 ;
    XdmfInt32 result;

    if (SWIG_GetArgs(interp, objc, objv,"os:Xdmf::XdmfTopology_SetOrderFromStringself Order ",0,&arg2) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfTopology,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    result = (XdmfInt32)(arg1)->SetOrderFromString(arg2);

    Tcl_SetObjResult(interp,Tcl_NewIntObj((long) result));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfTopology_SetOrder(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfTopology *arg1 = (XdmfTopology *) 0 ;
    XdmfInt32 arg2 ;
    XdmfInt32 *arg3 = (XdmfInt32 *) 0 ;
    XdmfInt32 result;

    if (SWIG_GetArgs(interp, objc, objv,"oio:Xdmf::XdmfTopology_SetOrderself Length Order ",0,&arg2,0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfTopology,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[3], (void **) &arg3, SWIGTYPE_p_XdmfInt32,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    result = (XdmfInt32)(arg1)->SetOrder(arg2,arg3);

    Tcl_SetObjResult(interp,Tcl_NewIntObj((long) result));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfTopology_SetNodesPerElement(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfTopology *arg1 = (XdmfTopology *) 0 ;
    XdmfInt32 arg2 ;
    XdmfInt32 result;

    if (SWIG_GetArgs(interp, objc, objv,"oi:Xdmf::XdmfTopology_SetNodesPerElementself _arg ",0,&arg2) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfTopology,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    result = (XdmfInt32)(arg1)->SetNodesPerElement(arg2);

    Tcl_SetObjResult(interp,Tcl_NewIntObj((long) result));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfTopology_GetNodesPerElement(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfTopology *arg1 = (XdmfTopology *) 0 ;
    XdmfInt32 result;

    if (SWIG_GetArgs(interp, objc, objv,"o:Xdmf::XdmfTopology_GetNodesPerElementself ",0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfTopology,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    result = (XdmfInt32)(arg1)->GetNodesPerElement();

    Tcl_SetObjResult(interp,Tcl_NewIntObj((long) result));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfTopology_SetBaseOffset(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfTopology *arg1 = (XdmfTopology *) 0 ;
    XdmfInt32 arg2 ;
    XdmfInt32 result;

    if (SWIG_GetArgs(interp, objc, objv,"oi:Xdmf::XdmfTopology_SetBaseOffsetself _arg ",0,&arg2) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfTopology,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    result = (XdmfInt32)(arg1)->SetBaseOffset(arg2);

    Tcl_SetObjResult(interp,Tcl_NewIntObj((long) result));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfTopology_GetBaseOffset(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfTopology *arg1 = (XdmfTopology *) 0 ;
    XdmfInt32 result;

    if (SWIG_GetArgs(interp, objc, objv,"o:Xdmf::XdmfTopology_GetBaseOffsetself ",0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfTopology,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    result = (XdmfInt32)(arg1)->GetBaseOffset();

    Tcl_SetObjResult(interp,Tcl_NewIntObj((long) result));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfTopology_GetShapeDesc(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfTopology *arg1 = (XdmfTopology *) 0 ;
    XdmfDataDesc *result;

    if (SWIG_GetArgs(interp, objc, objv,"o:Xdmf::XdmfTopology_GetShapeDescself ",0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfTopology,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    result = (XdmfDataDesc *)(arg1)->GetShapeDesc();

    Tcl_SetObjResult(interp,SWIG_NewInstanceObj(interp, (void *) result, SWIGTYPE_p_XdmfDataDesc,0));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfTopology_GetNumberOfElements(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfTopology *arg1 = (XdmfTopology *) 0 ;
    XdmfInt64 result;

    if (SWIG_GetArgs(interp, objc, objv,"o:Xdmf::XdmfTopology_GetNumberOfElementsself ",0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfTopology,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    result = (XdmfInt64)(arg1)->GetNumberOfElements();

    {
        char temp[256];
        sprintf(temp,"%lld", result);
        Tcl_SetObjResult(interp,Tcl_NewStringObj(temp,-1));
    }
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfTopology_InitTopologyFromElement(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfTopology *arg1 = (XdmfTopology *) 0 ;
    XdmfXNode *arg2 = (XdmfXNode *) 0 ;
    XdmfInt32 result;

    if (SWIG_GetArgs(interp, objc, objv,"oo:Xdmf::XdmfTopology_InitTopologyFromElementself Element ",0,0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfTopology,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[2], (void **) &arg2, SWIGTYPE_p_XdmfXNode,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    result = (XdmfInt32)(arg1)->InitTopologyFromElement(arg2);

    Tcl_SetObjResult(interp,Tcl_NewIntObj((long) result));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfTopology_SetTopologyFromElement(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfTopology *arg1 = (XdmfTopology *) 0 ;
    XdmfXNode *arg2 = (XdmfXNode *) 0 ;
    XdmfInt32 result;

    if (SWIG_GetArgs(interp, objc, objv,"oo:Xdmf::XdmfTopology_SetTopologyFromElementself Element ",0,0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfTopology,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[2], (void **) &arg2, SWIGTYPE_p_XdmfXNode,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    result = (XdmfInt32)(arg1)->SetTopologyFromElement(arg2);

    Tcl_SetObjResult(interp,Tcl_NewIntObj((long) result));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfTopology_GetConnectivity(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfTopology *arg1 = (XdmfTopology *) 0 ;
    XdmfArray *arg2 = (XdmfArray *) NULL ;
    XdmfArray *result;

    if (SWIG_GetArgs(interp, objc, objv,"o|o:Xdmf::XdmfTopology_GetConnectivityself Array ",0,0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfTopology,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    if (objc > 2) {
        if ((SWIG_ConvertPtr(interp, objv[2], (void **) &arg2, SWIGTYPE_p_XdmfArray,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    }
    result = (XdmfArray *)(arg1)->GetConnectivity(arg2);

    Tcl_SetObjResult(interp,SWIG_NewInstanceObj(interp, (void *) result, SWIGTYPE_p_XdmfArray,0));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfTopology_SetConnectivity(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfTopology *arg1 = (XdmfTopology *) 0 ;
    XdmfArray *arg2 = (XdmfArray *) 0 ;
    XdmfInt32 result;

    if (SWIG_GetArgs(interp, objc, objv,"oo:Xdmf::XdmfTopology_SetConnectivityself Array ",0,0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfTopology,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[2], (void **) &arg2, SWIGTYPE_p_XdmfArray,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    result = (XdmfInt32)(arg1)->SetConnectivity(arg2);

    Tcl_SetObjResult(interp,Tcl_NewIntObj((long) result));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfTopology_Update(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfTopology *arg1 = (XdmfTopology *) 0 ;
    XdmfInt32 result;

    if (SWIG_GetArgs(interp, objc, objv,"o:Xdmf::XdmfTopology_Updateself ",0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfTopology,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    result = (XdmfInt32)(arg1)->Update();

    Tcl_SetObjResult(interp,Tcl_NewIntObj((long) result));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static void swig_delete_XdmfTopology(void *obj) {
XdmfTopology *arg1 = (XdmfTopology *) obj;
delete arg1;
}
static swig_method swig_XdmfTopology_methods[] = {
    {"GetClassName", _wrap_XdmfTopology_GetClassName},
    {"GetClass", _wrap_XdmfTopology_GetClass},
    {"GetClassAsString", _wrap_XdmfTopology_GetClassAsString},
    {"SetTopologyType", _wrap_XdmfTopology_SetTopologyType},
    {"SetTopologyTypeFromString", _wrap_XdmfTopology_SetTopologyTypeFromString},
    {"GetTopologyType", _wrap_XdmfTopology_GetTopologyType},
    {"GetTopologyTypeAsString", _wrap_XdmfTopology_GetTopologyTypeAsString},
    {"GetOrder", _wrap_XdmfTopology_GetOrder},
    {"GetOrderAsString", _wrap_XdmfTopology_GetOrderAsString},
    {"SetOrderFromString", _wrap_XdmfTopology_SetOrderFromString},
    {"SetOrder", _wrap_XdmfTopology_SetOrder},
    {"SetNodesPerElement", _wrap_XdmfTopology_SetNodesPerElement},
    {"GetNodesPerElement", _wrap_XdmfTopology_GetNodesPerElement},
    {"SetBaseOffset", _wrap_XdmfTopology_SetBaseOffset},
    {"GetBaseOffset", _wrap_XdmfTopology_GetBaseOffset},
    {"GetShapeDesc", _wrap_XdmfTopology_GetShapeDesc},
    {"GetNumberOfElements", _wrap_XdmfTopology_GetNumberOfElements},
    {"InitTopologyFromElement", _wrap_XdmfTopology_InitTopologyFromElement},
    {"SetTopologyFromElement", _wrap_XdmfTopology_SetTopologyFromElement},
    {"GetConnectivity", _wrap_XdmfTopology_GetConnectivity},
    {"SetConnectivity", _wrap_XdmfTopology_SetConnectivity},
    {"Update", _wrap_XdmfTopology_Update},
    {0,0}
};
static swig_attribute swig_XdmfTopology_attributes[] = {
    {0,0,0}
};
extern swig_class _wrap_class_XdmfLightData;
static swig_class *swig_XdmfTopology_bases[] = {&_wrap_class_XdmfLightData,0};
swig_class _wrap_class_XdmfTopology = { "XdmfTopology", &SWIGTYPE_p_XdmfTopology,_wrap_new_XdmfTopology, swig_delete_XdmfTopology, swig_XdmfTopology_methods, swig_XdmfTopology_attributes, swig_XdmfTopology_bases };
static int
_wrap_HandleToXdmfTopology(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfString arg1 ;
    XdmfTopology *result;

    if (SWIG_GetArgs(interp, objc, objv,"s:Xdmf::HandleToXdmfTopologySource ",&arg1) == TCL_ERROR) SWIG_fail;
    result = (XdmfTopology *)HandleToXdmfTopology(arg1);

    Tcl_SetObjResult(interp,SWIG_NewInstanceObj(interp, (void *) result, SWIGTYPE_p_XdmfTopology,0));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_new_XdmfGeometry(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfGeometry *result;

    if (SWIG_GetArgs(interp, objc, objv,":Xdmf::new_XdmfGeometry") == TCL_ERROR) SWIG_fail;
    result = (XdmfGeometry *)new XdmfGeometry();

    Tcl_SetObjResult(interp,SWIG_NewInstanceObj(interp, (void *) result, SWIGTYPE_p_XdmfGeometry,0));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_delete_XdmfGeometry(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfGeometry *arg1 = (XdmfGeometry *) 0 ;

    if (SWIG_GetArgs(interp, objc, objv,"o:Xdmf::delete_XdmfGeometryself ",0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfGeometry,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    delete arg1;


    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfGeometry_GetClassName(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfGeometry *arg1 = (XdmfGeometry *) 0 ;
    XdmfConstString result;

    if (SWIG_GetArgs(interp, objc, objv,"o:Xdmf::XdmfGeometry_GetClassNameself ",0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfGeometry,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    result = (XdmfConstString)(arg1)->GetClassName();

    Tcl_SetObjResult(interp,Tcl_NewStringObj(result,-1));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfGeometry_SetNumberOfPoints(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfGeometry *arg1 = (XdmfGeometry *) 0 ;
    XdmfInt64 arg2 ;
    XdmfInt32 result;

    if (SWIG_GetArgs(interp, objc, objv,"oo:Xdmf::XdmfGeometry_SetNumberOfPointsself _arg ",0,0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfGeometry,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    arg2 = (XdmfInt64) XDMF_strtoll(Tcl_GetStringFromObj(objv[2],NULL),0,0);
    result = (XdmfInt32)(arg1)->SetNumberOfPoints(arg2);

    Tcl_SetObjResult(interp,Tcl_NewIntObj((long) result));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfGeometry_GetNumberOfPoints(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfGeometry *arg1 = (XdmfGeometry *) 0 ;
    XdmfInt64 result;

    if (SWIG_GetArgs(interp, objc, objv,"o:Xdmf::XdmfGeometry_GetNumberOfPointsself ",0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfGeometry,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    result = (XdmfInt64)(arg1)->GetNumberOfPoints();

    {
        char temp[256];
        sprintf(temp,"%lld", result);
        Tcl_SetObjResult(interp,Tcl_NewStringObj(temp,-1));
    }
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfGeometry_SetGeometryType(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfGeometry *arg1 = (XdmfGeometry *) 0 ;
    XdmfInt32 arg2 ;
    XdmfInt32 result;

    if (SWIG_GetArgs(interp, objc, objv,"oi:Xdmf::XdmfGeometry_SetGeometryTypeself _arg ",0,&arg2) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfGeometry,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    result = (XdmfInt32)(arg1)->SetGeometryType(arg2);

    Tcl_SetObjResult(interp,Tcl_NewIntObj((long) result));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfGeometry_GetGeometryType(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfGeometry *arg1 = (XdmfGeometry *) 0 ;
    XdmfInt32 result;

    if (SWIG_GetArgs(interp, objc, objv,"o:Xdmf::XdmfGeometry_GetGeometryTypeself ",0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfGeometry,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    result = (XdmfInt32)(arg1)->GetGeometryType();

    Tcl_SetObjResult(interp,Tcl_NewIntObj((long) result));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfGeometry_GetGeometryTypeAsString(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfGeometry *arg1 = (XdmfGeometry *) 0 ;
    XdmfString result;

    if (SWIG_GetArgs(interp, objc, objv,"o:Xdmf::XdmfGeometry_GetGeometryTypeAsStringself ",0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfGeometry,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    result = (XdmfString)(arg1)->GetGeometryTypeAsString();

    Tcl_SetObjResult(interp,Tcl_NewStringObj(result,-1));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfGeometry_SetGeometryTypeFromString(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfGeometry *arg1 = (XdmfGeometry *) 0 ;
    XdmfConstString arg2 ;
    XdmfInt32 result;

    if (SWIG_GetArgs(interp, objc, objv,"os:Xdmf::XdmfGeometry_SetGeometryTypeFromStringself GeometryType ",0,&arg2) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfGeometry,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    result = (XdmfInt32)(arg1)->SetGeometryTypeFromString(arg2);

    Tcl_SetObjResult(interp,Tcl_NewIntObj((long) result));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfGeometry_InitGeometryFromElement(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfGeometry *arg1 = (XdmfGeometry *) 0 ;
    XdmfXNode *arg2 = (XdmfXNode *) 0 ;
    XdmfInt32 result;

    if (SWIG_GetArgs(interp, objc, objv,"oo:Xdmf::XdmfGeometry_InitGeometryFromElementself Element ",0,0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfGeometry,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[2], (void **) &arg2, SWIGTYPE_p_XdmfXNode,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    result = (XdmfInt32)(arg1)->InitGeometryFromElement(arg2);

    Tcl_SetObjResult(interp,Tcl_NewIntObj((long) result));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfGeometry_SetGeometryFromElement(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfGeometry *arg1 = (XdmfGeometry *) 0 ;
    XdmfXNode *arg2 = (XdmfXNode *) 0 ;
    XdmfInt32 result;

    if (SWIG_GetArgs(interp, objc, objv,"oo:Xdmf::XdmfGeometry_SetGeometryFromElementself Element ",0,0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfGeometry,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[2], (void **) &arg2, SWIGTYPE_p_XdmfXNode,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    result = (XdmfInt32)(arg1)->SetGeometryFromElement(arg2);

    Tcl_SetObjResult(interp,Tcl_NewIntObj((long) result));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfGeometry_SetPoints(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfGeometry *arg1 = (XdmfGeometry *) 0 ;
    XdmfArray *arg2 = (XdmfArray *) 0 ;
    XdmfInt32 result;

    if (SWIG_GetArgs(interp, objc, objv,"oo:Xdmf::XdmfGeometry_SetPointsself Points ",0,0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfGeometry,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[2], (void **) &arg2, SWIGTYPE_p_XdmfArray,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    result = (XdmfInt32)(arg1)->SetPoints(arg2);

    Tcl_SetObjResult(interp,Tcl_NewIntObj((long) result));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfGeometry_GetPoints(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfGeometry *arg1 = (XdmfGeometry *) 0 ;
    XdmfArray *result;

    if (SWIG_GetArgs(interp, objc, objv,"o:Xdmf::XdmfGeometry_GetPointsself ",0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfGeometry,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    result = (XdmfArray *)(arg1)->GetPoints();

    Tcl_SetObjResult(interp,SWIG_NewInstanceObj(interp, (void *) result, SWIGTYPE_p_XdmfArray,0));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfGeometry_GetOrigin(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfGeometry *arg1 = (XdmfGeometry *) 0 ;
    XdmfFloat64 *result;

    if (SWIG_GetArgs(interp, objc, objv,"o:Xdmf::XdmfGeometry_GetOriginself ",0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfGeometry,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    result = (XdmfFloat64 *)(arg1)->GetOrigin();

    Tcl_SetObjResult(interp,SWIG_NewInstanceObj(interp, (void *) result, SWIGTYPE_p_XdmfFloat64,0));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfGeometry_GetOriginX(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfGeometry *arg1 = (XdmfGeometry *) 0 ;
    XdmfFloat64 result;

    if (SWIG_GetArgs(interp, objc, objv,"o:Xdmf::XdmfGeometry_GetOriginXself ",0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfGeometry,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    result = (XdmfFloat64)(arg1)->GetOriginX();

    Tcl_SetObjResult(interp,Tcl_NewDoubleObj((double) result));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfGeometry_GetOriginY(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfGeometry *arg1 = (XdmfGeometry *) 0 ;
    XdmfFloat64 result;

    if (SWIG_GetArgs(interp, objc, objv,"o:Xdmf::XdmfGeometry_GetOriginYself ",0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfGeometry,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    result = (XdmfFloat64)(arg1)->GetOriginY();

    Tcl_SetObjResult(interp,Tcl_NewDoubleObj((double) result));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfGeometry_GetOriginZ(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfGeometry *arg1 = (XdmfGeometry *) 0 ;
    XdmfFloat64 result;

    if (SWIG_GetArgs(interp, objc, objv,"o:Xdmf::XdmfGeometry_GetOriginZself ",0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfGeometry,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    result = (XdmfFloat64)(arg1)->GetOriginZ();

    Tcl_SetObjResult(interp,Tcl_NewDoubleObj((double) result));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfGeometry_SetOrigin(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfGeometry *arg1 = (XdmfGeometry *) 0 ;
    XdmfFloat64 arg2 ;
    XdmfFloat64 arg3 ;
    XdmfFloat64 arg4 ;
    XdmfInt32 result;

    if (SWIG_GetArgs(interp, objc, objv,"oddd:Xdmf::XdmfGeometry_SetOriginself X Y Z ",0,&arg2,&arg3,&arg4) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfGeometry,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    result = (XdmfInt32)(arg1)->SetOrigin(arg2,arg3,arg4);

    Tcl_SetObjResult(interp,Tcl_NewIntObj((long) result));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfGeometry_SetDxDyDz(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfGeometry *arg1 = (XdmfGeometry *) 0 ;
    XdmfFloat64 arg2 ;
    XdmfFloat64 arg3 ;
    XdmfFloat64 arg4 ;
    XdmfInt32 result;

    if (SWIG_GetArgs(interp, objc, objv,"oddd:Xdmf::XdmfGeometry_SetDxDyDzself Dx Dy Dz ",0,&arg2,&arg3,&arg4) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfGeometry,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    result = (XdmfInt32)(arg1)->SetDxDyDz(arg2,arg3,arg4);

    Tcl_SetObjResult(interp,Tcl_NewIntObj((long) result));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfGeometry_GetDx(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfGeometry *arg1 = (XdmfGeometry *) 0 ;
    XdmfFloat64 result;

    if (SWIG_GetArgs(interp, objc, objv,"o:Xdmf::XdmfGeometry_GetDxself ",0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfGeometry,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    result = (XdmfFloat64)(arg1)->GetDx();

    Tcl_SetObjResult(interp,Tcl_NewDoubleObj((double) result));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfGeometry_GetDy(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfGeometry *arg1 = (XdmfGeometry *) 0 ;
    XdmfFloat64 result;

    if (SWIG_GetArgs(interp, objc, objv,"o:Xdmf::XdmfGeometry_GetDyself ",0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfGeometry,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    result = (XdmfFloat64)(arg1)->GetDy();

    Tcl_SetObjResult(interp,Tcl_NewDoubleObj((double) result));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfGeometry_GetDz(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfGeometry *arg1 = (XdmfGeometry *) 0 ;
    XdmfFloat64 result;

    if (SWIG_GetArgs(interp, objc, objv,"o:Xdmf::XdmfGeometry_GetDzself ",0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfGeometry,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    result = (XdmfFloat64)(arg1)->GetDz();

    Tcl_SetObjResult(interp,Tcl_NewDoubleObj((double) result));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfGeometry_GetDxDyDz(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfGeometry *arg1 = (XdmfGeometry *) 0 ;
    XdmfFloat64 *result;

    if (SWIG_GetArgs(interp, objc, objv,"o:Xdmf::XdmfGeometry_GetDxDyDzself ",0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfGeometry,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    result = (XdmfFloat64 *)(arg1)->GetDxDyDz();

    Tcl_SetObjResult(interp,SWIG_NewInstanceObj(interp, (void *) result, SWIGTYPE_p_XdmfFloat64,0));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfGeometry_GetVectorX(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfGeometry *arg1 = (XdmfGeometry *) 0 ;
    XdmfArray *result;

    if (SWIG_GetArgs(interp, objc, objv,"o:Xdmf::XdmfGeometry_GetVectorXself ",0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfGeometry,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    result = (XdmfArray *)(arg1)->GetVectorX();

    Tcl_SetObjResult(interp,SWIG_NewInstanceObj(interp, (void *) result, SWIGTYPE_p_XdmfArray,0));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfGeometry_GetVectorY(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfGeometry *arg1 = (XdmfGeometry *) 0 ;
    XdmfArray *result;

    if (SWIG_GetArgs(interp, objc, objv,"o:Xdmf::XdmfGeometry_GetVectorYself ",0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfGeometry,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    result = (XdmfArray *)(arg1)->GetVectorY();

    Tcl_SetObjResult(interp,SWIG_NewInstanceObj(interp, (void *) result, SWIGTYPE_p_XdmfArray,0));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfGeometry_GetVectorZ(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfGeometry *arg1 = (XdmfGeometry *) 0 ;
    XdmfArray *result;

    if (SWIG_GetArgs(interp, objc, objv,"o:Xdmf::XdmfGeometry_GetVectorZself ",0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfGeometry,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    result = (XdmfArray *)(arg1)->GetVectorZ();

    Tcl_SetObjResult(interp,SWIG_NewInstanceObj(interp, (void *) result, SWIGTYPE_p_XdmfArray,0));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfGeometry_SetVectorX(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfGeometry *arg1 = (XdmfGeometry *) 0 ;
    XdmfArray *arg2 = (XdmfArray *) 0 ;

    if (SWIG_GetArgs(interp, objc, objv,"oo:Xdmf::XdmfGeometry_SetVectorXself Array ",0,0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfGeometry,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[2], (void **) &arg2, SWIGTYPE_p_XdmfArray,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    (arg1)->SetVectorX(arg2);


    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfGeometry_SetVectorY(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfGeometry *arg1 = (XdmfGeometry *) 0 ;
    XdmfArray *arg2 = (XdmfArray *) 0 ;

    if (SWIG_GetArgs(interp, objc, objv,"oo:Xdmf::XdmfGeometry_SetVectorYself Array ",0,0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfGeometry,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[2], (void **) &arg2, SWIGTYPE_p_XdmfArray,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    (arg1)->SetVectorY(arg2);


    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfGeometry_SetVectorZ(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfGeometry *arg1 = (XdmfGeometry *) 0 ;
    XdmfArray *arg2 = (XdmfArray *) 0 ;

    if (SWIG_GetArgs(interp, objc, objv,"oo:Xdmf::XdmfGeometry_SetVectorZself Array ",0,0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfGeometry,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[2], (void **) &arg2, SWIGTYPE_p_XdmfArray,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    (arg1)->SetVectorZ(arg2);


    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfGeometry_HasData(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfGeometry *arg1 = (XdmfGeometry *) 0 ;
    XdmfInt32 result;

    if (SWIG_GetArgs(interp, objc, objv,"o:Xdmf::XdmfGeometry_HasDataself ",0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfGeometry,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    result = (XdmfInt32)(arg1)->HasData();

    Tcl_SetObjResult(interp,Tcl_NewIntObj((long) result));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfGeometry_Update(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfGeometry *arg1 = (XdmfGeometry *) 0 ;
    XdmfInt32 result;

    if (SWIG_GetArgs(interp, objc, objv,"o:Xdmf::XdmfGeometry_Updateself ",0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfGeometry,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    result = (XdmfInt32)(arg1)->Update();

    Tcl_SetObjResult(interp,Tcl_NewIntObj((long) result));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static void swig_delete_XdmfGeometry(void *obj) {
XdmfGeometry *arg1 = (XdmfGeometry *) obj;
delete arg1;
}
static swig_method swig_XdmfGeometry_methods[] = {
    {"GetClassName", _wrap_XdmfGeometry_GetClassName},
    {"SetNumberOfPoints", _wrap_XdmfGeometry_SetNumberOfPoints},
    {"GetNumberOfPoints", _wrap_XdmfGeometry_GetNumberOfPoints},
    {"SetGeometryType", _wrap_XdmfGeometry_SetGeometryType},
    {"GetGeometryType", _wrap_XdmfGeometry_GetGeometryType},
    {"GetGeometryTypeAsString", _wrap_XdmfGeometry_GetGeometryTypeAsString},
    {"SetGeometryTypeFromString", _wrap_XdmfGeometry_SetGeometryTypeFromString},
    {"InitGeometryFromElement", _wrap_XdmfGeometry_InitGeometryFromElement},
    {"SetGeometryFromElement", _wrap_XdmfGeometry_SetGeometryFromElement},
    {"SetPoints", _wrap_XdmfGeometry_SetPoints},
    {"GetPoints", _wrap_XdmfGeometry_GetPoints},
    {"GetOrigin", _wrap_XdmfGeometry_GetOrigin},
    {"GetOriginX", _wrap_XdmfGeometry_GetOriginX},
    {"GetOriginY", _wrap_XdmfGeometry_GetOriginY},
    {"GetOriginZ", _wrap_XdmfGeometry_GetOriginZ},
    {"SetOrigin", _wrap_XdmfGeometry_SetOrigin},
    {"SetDxDyDz", _wrap_XdmfGeometry_SetDxDyDz},
    {"GetDx", _wrap_XdmfGeometry_GetDx},
    {"GetDy", _wrap_XdmfGeometry_GetDy},
    {"GetDz", _wrap_XdmfGeometry_GetDz},
    {"GetDxDyDz", _wrap_XdmfGeometry_GetDxDyDz},
    {"GetVectorX", _wrap_XdmfGeometry_GetVectorX},
    {"GetVectorY", _wrap_XdmfGeometry_GetVectorY},
    {"GetVectorZ", _wrap_XdmfGeometry_GetVectorZ},
    {"SetVectorX", _wrap_XdmfGeometry_SetVectorX},
    {"SetVectorY", _wrap_XdmfGeometry_SetVectorY},
    {"SetVectorZ", _wrap_XdmfGeometry_SetVectorZ},
    {"HasData", _wrap_XdmfGeometry_HasData},
    {"Update", _wrap_XdmfGeometry_Update},
    {0,0}
};
static swig_attribute swig_XdmfGeometry_attributes[] = {
    {0,0,0}
};
extern swig_class _wrap_class_XdmfLightData;
static swig_class *swig_XdmfGeometry_bases[] = {&_wrap_class_XdmfLightData,0};
swig_class _wrap_class_XdmfGeometry = { "XdmfGeometry", &SWIGTYPE_p_XdmfGeometry,_wrap_new_XdmfGeometry, swig_delete_XdmfGeometry, swig_XdmfGeometry_methods, swig_XdmfGeometry_attributes, swig_XdmfGeometry_bases };
static int
_wrap_GetXdmfGeometryHandle(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    void *arg1 = (void *) 0 ;
    XdmfGeometry *result;

    if (SWIG_GetArgs(interp, objc, objv,"o:Xdmf::GetXdmfGeometryHandlePointer ",0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, 0,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    result = (XdmfGeometry *)GetXdmfGeometryHandle(arg1);

    Tcl_SetObjResult(interp,SWIG_NewInstanceObj(interp, (void *) result, SWIGTYPE_p_XdmfGeometry,0));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_new_XdmfGrid(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfGrid *result;

    if (SWIG_GetArgs(interp, objc, objv,":Xdmf::new_XdmfGrid") == TCL_ERROR) SWIG_fail;
    result = (XdmfGrid *)new XdmfGrid();

    Tcl_SetObjResult(interp,SWIG_NewInstanceObj(interp, (void *) result, SWIGTYPE_p_XdmfGrid,0));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_delete_XdmfGrid(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfGrid *arg1 = (XdmfGrid *) 0 ;

    if (SWIG_GetArgs(interp, objc, objv,"o:Xdmf::delete_XdmfGridself ",0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfGrid,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    delete arg1;


    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfGrid_GetClassName(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfGrid *arg1 = (XdmfGrid *) 0 ;
    XdmfConstString result;

    if (SWIG_GetArgs(interp, objc, objv,"o:Xdmf::XdmfGrid_GetClassNameself ",0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfGrid,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    result = (XdmfConstString)(arg1)->GetClassName();

    Tcl_SetObjResult(interp,Tcl_NewStringObj(result,-1));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfGrid_SetGeometry(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfGrid *arg1 = (XdmfGrid *) 0 ;
    XdmfGeometry *arg2 = (XdmfGeometry *) 0 ;
    XdmfInt32 result;

    if (SWIG_GetArgs(interp, objc, objv,"oo:Xdmf::XdmfGrid_SetGeometryself _arg ",0,0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfGrid,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[2], (void **) &arg2, SWIGTYPE_p_XdmfGeometry,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    result = (XdmfInt32)(arg1)->SetGeometry(arg2);

    Tcl_SetObjResult(interp,Tcl_NewIntObj((long) result));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfGrid_GetGeometry(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfGrid *arg1 = (XdmfGrid *) 0 ;
    XdmfGeometry *result;

    if (SWIG_GetArgs(interp, objc, objv,"o:Xdmf::XdmfGrid_GetGeometryself ",0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfGrid,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    result = (XdmfGeometry *)(arg1)->GetGeometry();

    Tcl_SetObjResult(interp,SWIG_NewInstanceObj(interp, (void *) result, SWIGTYPE_p_XdmfGeometry,0));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfGrid_GetNumberOfAttributes(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfGrid *arg1 = (XdmfGrid *) 0 ;
    XdmfInt32 result;

    if (SWIG_GetArgs(interp, objc, objv,"o:Xdmf::XdmfGrid_GetNumberOfAttributesself ",0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfGrid,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    result = (XdmfInt32)(arg1)->GetNumberOfAttributes();

    Tcl_SetObjResult(interp,Tcl_NewIntObj((long) result));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfGrid_GetAttribute(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfGrid *arg1 = (XdmfGrid *) 0 ;
    XdmfInt64 arg2 ;
    XdmfAttribute *result;

    if (SWIG_GetArgs(interp, objc, objv,"oo:Xdmf::XdmfGrid_GetAttributeself Index ",0,0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfGrid,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    arg2 = (XdmfInt64) XDMF_strtoll(Tcl_GetStringFromObj(objv[2],NULL),0,0);
    result = (XdmfAttribute *)(arg1)->GetAttribute(arg2);

    Tcl_SetObjResult(interp,SWIG_NewInstanceObj(interp, (void *) result, SWIGTYPE_p_XdmfAttribute,0));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfGrid_GetBaseGrid(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfGrid *arg1 = (XdmfGrid *) 0 ;
    XdmfPointer result;

    if (SWIG_GetArgs(interp, objc, objv,"o:Xdmf::XdmfGrid_GetBaseGridself ",0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfGrid,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    result = (XdmfPointer)(arg1)->GetBaseGrid();

    Tcl_SetObjResult(interp,SWIG_NewInstanceObj(interp, (void *) result, SWIGTYPE_XdmfPointer,0));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfGrid_AssignAttribute(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfGrid *arg1 = (XdmfGrid *) 0 ;
    XdmfInt64 arg2 ;
    XdmfInt32 result;

    if (SWIG_GetArgs(interp, objc, objv,"oo:Xdmf::XdmfGrid_AssignAttributeself Index ",0,0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfGrid,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    arg2 = (XdmfInt64) XDMF_strtoll(Tcl_GetStringFromObj(objv[2],NULL),0,0);
    result = (XdmfInt32)(arg1)->AssignAttribute(arg2);

    Tcl_SetObjResult(interp,Tcl_NewIntObj((long) result));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfGrid_AssignAttributeByIndex(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfGrid *arg1 = (XdmfGrid *) 0 ;
    XdmfInt64 arg2 ;
    XdmfInt32 result;

    if (SWIG_GetArgs(interp, objc, objv,"oo:Xdmf::XdmfGrid_AssignAttributeByIndexself Index ",0,0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfGrid,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    arg2 = (XdmfInt64) XDMF_strtoll(Tcl_GetStringFromObj(objv[2],NULL),0,0);
    result = (XdmfInt32)(arg1)->AssignAttributeByIndex(arg2);

    Tcl_SetObjResult(interp,Tcl_NewIntObj((long) result));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfGrid_AssignAttributeByName(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfGrid *arg1 = (XdmfGrid *) 0 ;
    XdmfString arg2 ;
    XdmfInt32 result;

    if (SWIG_GetArgs(interp, objc, objv,"os:Xdmf::XdmfGrid_AssignAttributeByNameself Name ",0,&arg2) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfGrid,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    result = (XdmfInt32)(arg1)->AssignAttributeByName(arg2);

    Tcl_SetObjResult(interp,Tcl_NewIntObj((long) result));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfGrid_GetAssignedAttribute(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfGrid *arg1 = (XdmfGrid *) 0 ;
    XdmfAttribute *result;

    if (SWIG_GetArgs(interp, objc, objv,"o:Xdmf::XdmfGrid_GetAssignedAttributeself ",0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfGrid,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    result = (XdmfAttribute *)(arg1)->GetAssignedAttribute();

    Tcl_SetObjResult(interp,SWIG_NewInstanceObj(interp, (void *) result, SWIGTYPE_p_XdmfAttribute,0));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfGrid_GetAssignedAttributeIndex(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfGrid *arg1 = (XdmfGrid *) 0 ;
    XdmfInt64 result;

    if (SWIG_GetArgs(interp, objc, objv,"o:Xdmf::XdmfGrid_GetAssignedAttributeIndexself ",0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfGrid,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    result = (XdmfInt64)(arg1)->GetAssignedAttributeIndex();

    {
        char temp[256];
        sprintf(temp,"%lld", result);
        Tcl_SetObjResult(interp,Tcl_NewStringObj(temp,-1));
    }
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfGrid_InitGridFromElement(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfGrid *arg1 = (XdmfGrid *) 0 ;
    XdmfXNode *arg2 = (XdmfXNode *) 0 ;
    XdmfInt32 result;

    if (SWIG_GetArgs(interp, objc, objv,"oo:Xdmf::XdmfGrid_InitGridFromElementself Element ",0,0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfGrid,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[2], (void **) &arg2, SWIGTYPE_p_XdmfXNode,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    result = (XdmfInt32)(arg1)->InitGridFromElement(arg2);

    Tcl_SetObjResult(interp,Tcl_NewIntObj((long) result));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfGrid_SetGridFromElement(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfGrid *arg1 = (XdmfGrid *) 0 ;
    XdmfXNode *arg2 = (XdmfXNode *) 0 ;
    XdmfInt32 result;

    if (SWIG_GetArgs(interp, objc, objv,"oo:Xdmf::XdmfGrid_SetGridFromElementself Element ",0,0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfGrid,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[2], (void **) &arg2, SWIGTYPE_p_XdmfXNode,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    result = (XdmfInt32)(arg1)->SetGridFromElement(arg2);

    Tcl_SetObjResult(interp,Tcl_NewIntObj((long) result));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfGrid_Update(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfGrid *arg1 = (XdmfGrid *) 0 ;
    XdmfInt32 result;

    if (SWIG_GetArgs(interp, objc, objv,"o:Xdmf::XdmfGrid_Updateself ",0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfGrid,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    result = (XdmfInt32)(arg1)->Update();

    Tcl_SetObjResult(interp,Tcl_NewIntObj((long) result));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static void swig_delete_XdmfGrid(void *obj) {
XdmfGrid *arg1 = (XdmfGrid *) obj;
delete arg1;
}
static swig_method swig_XdmfGrid_methods[] = {
    {"GetClassName", _wrap_XdmfGrid_GetClassName},
    {"SetGeometry", _wrap_XdmfGrid_SetGeometry},
    {"GetGeometry", _wrap_XdmfGrid_GetGeometry},
    {"GetNumberOfAttributes", _wrap_XdmfGrid_GetNumberOfAttributes},
    {"GetAttribute", _wrap_XdmfGrid_GetAttribute},
    {"GetBaseGrid", _wrap_XdmfGrid_GetBaseGrid},
    {"AssignAttribute", _wrap_XdmfGrid_AssignAttribute},
    {"AssignAttributeByIndex", _wrap_XdmfGrid_AssignAttributeByIndex},
    {"AssignAttributeByName", _wrap_XdmfGrid_AssignAttributeByName},
    {"GetAssignedAttribute", _wrap_XdmfGrid_GetAssignedAttribute},
    {"GetAssignedAttributeIndex", _wrap_XdmfGrid_GetAssignedAttributeIndex},
    {"InitGridFromElement", _wrap_XdmfGrid_InitGridFromElement},
    {"SetGridFromElement", _wrap_XdmfGrid_SetGridFromElement},
    {"Update", _wrap_XdmfGrid_Update},
    {0,0}
};
static swig_attribute swig_XdmfGrid_attributes[] = {
    {0,0,0}
};
extern swig_class _wrap_class_XdmfTopology;
static swig_class *swig_XdmfGrid_bases[] = {&_wrap_class_XdmfTopology,0};
swig_class _wrap_class_XdmfGrid = { "XdmfGrid", &SWIGTYPE_p_XdmfGrid,_wrap_new_XdmfGrid, swig_delete_XdmfGrid, swig_XdmfGrid_methods, swig_XdmfGrid_attributes, swig_XdmfGrid_bases };
static int
_wrap_HandleToXdmfGrid(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfString arg1 ;
    XdmfGrid *result;

    if (SWIG_GetArgs(interp, objc, objv,"s:Xdmf::HandleToXdmfGridSource ",&arg1) == TCL_ERROR) SWIG_fail;
    result = (XdmfGrid *)HandleToXdmfGrid(arg1);

    Tcl_SetObjResult(interp,SWIG_NewInstanceObj(interp, (void *) result, SWIGTYPE_p_XdmfGrid,0));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_new_XdmfHeavyData(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfHeavyData *result;

    if (SWIG_GetArgs(interp, objc, objv,":Xdmf::new_XdmfHeavyData") == TCL_ERROR) SWIG_fail;
    result = (XdmfHeavyData *)new XdmfHeavyData();

    Tcl_SetObjResult(interp,SWIG_NewInstanceObj(interp, (void *) result, SWIGTYPE_p_XdmfHeavyData,0));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_delete_XdmfHeavyData(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfHeavyData *arg1 = (XdmfHeavyData *) 0 ;

    if (SWIG_GetArgs(interp, objc, objv,"o:Xdmf::delete_XdmfHeavyDataself ",0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfHeavyData,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    delete arg1;


    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfHeavyData_GetClassName(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfHeavyData *arg1 = (XdmfHeavyData *) 0 ;
    XdmfConstString result;

    if (SWIG_GetArgs(interp, objc, objv,"o:Xdmf::XdmfHeavyData_GetClassNameself ",0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfHeavyData,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    result = (XdmfConstString)(arg1)->GetClassName();

    Tcl_SetObjResult(interp,Tcl_NewStringObj(result,-1));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfHeavyData_GetNdgmHost(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfHeavyData *arg1 = (XdmfHeavyData *) 0 ;
    XdmfString result;

    if (SWIG_GetArgs(interp, objc, objv,"o:Xdmf::XdmfHeavyData_GetNdgmHostself ",0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfHeavyData,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    result = (XdmfString)(arg1)->GetNdgmHost();

    Tcl_SetObjResult(interp,Tcl_NewStringObj(result,-1));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfHeavyData_SetNdgmHost(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfHeavyData *arg1 = (XdmfHeavyData *) 0 ;
    XdmfString arg2 ;

    if (SWIG_GetArgs(interp, objc, objv,"os:Xdmf::XdmfHeavyData_SetNdgmHostself String ",0,&arg2) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfHeavyData,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    (arg1)->SetNdgmHost(arg2);


    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfHeavyData_GetWorkingDirectory(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfHeavyData *arg1 = (XdmfHeavyData *) 0 ;
    XdmfString result;

    if (SWIG_GetArgs(interp, objc, objv,"o:Xdmf::XdmfHeavyData_GetWorkingDirectoryself ",0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfHeavyData,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    result = (XdmfString)(arg1)->GetWorkingDirectory();

    Tcl_SetObjResult(interp,Tcl_NewStringObj(result,-1));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfHeavyData_SetWorkingDirectory(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfHeavyData *arg1 = (XdmfHeavyData *) 0 ;
    XdmfString arg2 ;

    if (SWIG_GetArgs(interp, objc, objv,"os:Xdmf::XdmfHeavyData_SetWorkingDirectoryself String ",0,&arg2) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfHeavyData,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    (arg1)->SetWorkingDirectory(arg2);


    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfHeavyData_GetDomain(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfHeavyData *arg1 = (XdmfHeavyData *) 0 ;
    XdmfString result;

    if (SWIG_GetArgs(interp, objc, objv,"o:Xdmf::XdmfHeavyData_GetDomainself ",0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfHeavyData,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    result = (XdmfString)(arg1)->GetDomain();

    Tcl_SetObjResult(interp,Tcl_NewStringObj(result,-1));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfHeavyData_SetDomain(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfHeavyData *arg1 = (XdmfHeavyData *) 0 ;
    XdmfString arg2 ;

    if (SWIG_GetArgs(interp, objc, objv,"os:Xdmf::XdmfHeavyData_SetDomainself Domain ",0,&arg2) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfHeavyData,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    (arg1)->SetDomain(arg2);


    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfHeavyData_GetFileName(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfHeavyData *arg1 = (XdmfHeavyData *) 0 ;
    XdmfString result;

    if (SWIG_GetArgs(interp, objc, objv,"o:Xdmf::XdmfHeavyData_GetFileNameself ",0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfHeavyData,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    result = (XdmfString)(arg1)->GetFileName();

    Tcl_SetObjResult(interp,Tcl_NewStringObj(result,-1));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfHeavyData_SetFileName(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfHeavyData *arg1 = (XdmfHeavyData *) 0 ;
    XdmfString arg2 ;

    if (SWIG_GetArgs(interp, objc, objv,"os:Xdmf::XdmfHeavyData_SetFileNameself File ",0,&arg2) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfHeavyData,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    (arg1)->SetFileName(arg2);


    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfHeavyData_GetPath(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfHeavyData *arg1 = (XdmfHeavyData *) 0 ;
    XdmfString result;

    if (SWIG_GetArgs(interp, objc, objv,"o:Xdmf::XdmfHeavyData_GetPathself ",0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfHeavyData,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    result = (XdmfString)(arg1)->GetPath();

    Tcl_SetObjResult(interp,Tcl_NewStringObj(result,-1));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfHeavyData_SetPath(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfHeavyData *arg1 = (XdmfHeavyData *) 0 ;
    XdmfString arg2 ;

    if (SWIG_GetArgs(interp, objc, objv,"os:Xdmf::XdmfHeavyData_SetPathself Path ",0,&arg2) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfHeavyData,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    (arg1)->SetPath(arg2);


    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfHeavyData_GetAccess(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfHeavyData *arg1 = (XdmfHeavyData *) 0 ;
    XdmfString result;

    if (SWIG_GetArgs(interp, objc, objv,"o:Xdmf::XdmfHeavyData_GetAccessself ",0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfHeavyData,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    result = (XdmfString)(arg1)->GetAccess();

    Tcl_SetObjResult(interp,Tcl_NewStringObj(result,-1));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfHeavyData_SetAccess(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfHeavyData *arg1 = (XdmfHeavyData *) 0 ;
    XdmfString arg2 ;

    if (SWIG_GetArgs(interp, objc, objv,"os:Xdmf::XdmfHeavyData_SetAccessself Access ",0,&arg2) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfHeavyData,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    (arg1)->SetAccess(arg2);


    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static void swig_delete_XdmfHeavyData(void *obj) {
XdmfHeavyData *arg1 = (XdmfHeavyData *) obj;
delete arg1;
}
static swig_method swig_XdmfHeavyData_methods[] = {
    {"GetClassName", _wrap_XdmfHeavyData_GetClassName},
    {"GetNdgmHost", _wrap_XdmfHeavyData_GetNdgmHost},
    {"SetNdgmHost", _wrap_XdmfHeavyData_SetNdgmHost},
    {"GetWorkingDirectory", _wrap_XdmfHeavyData_GetWorkingDirectory},
    {"SetWorkingDirectory", _wrap_XdmfHeavyData_SetWorkingDirectory},
    {"GetDomain", _wrap_XdmfHeavyData_GetDomain},
    {"SetDomain", _wrap_XdmfHeavyData_SetDomain},
    {"GetFileName", _wrap_XdmfHeavyData_GetFileName},
    {"SetFileName", _wrap_XdmfHeavyData_SetFileName},
    {"GetPath", _wrap_XdmfHeavyData_GetPath},
    {"SetPath", _wrap_XdmfHeavyData_SetPath},
    {"GetAccess", _wrap_XdmfHeavyData_GetAccess},
    {"SetAccess", _wrap_XdmfHeavyData_SetAccess},
    {0,0}
};
static swig_attribute swig_XdmfHeavyData_attributes[] = {
    {0,0,0}
};
extern swig_class _wrap_class_XdmfDataDesc;
static swig_class *swig_XdmfHeavyData_bases[] = {&_wrap_class_XdmfDataDesc,0};
swig_class _wrap_class_XdmfHeavyData = { "XdmfHeavyData", &SWIGTYPE_p_XdmfHeavyData,_wrap_new_XdmfHeavyData, swig_delete_XdmfHeavyData, swig_XdmfHeavyData_methods, swig_XdmfHeavyData_attributes, swig_XdmfHeavyData_bases };
static int
_wrap_new_XdmfHDF(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfHDF *result;

    if (SWIG_GetArgs(interp, objc, objv,":Xdmf::new_XdmfHDF") == TCL_ERROR) SWIG_fail;
    result = (XdmfHDF *)new XdmfHDF();

    Tcl_SetObjResult(interp,SWIG_NewInstanceObj(interp, (void *) result, SWIGTYPE_p_XdmfHDF,0));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_delete_XdmfHDF(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfHDF *arg1 = (XdmfHDF *) 0 ;

    if (SWIG_GetArgs(interp, objc, objv,"o:Xdmf::delete_XdmfHDFself ",0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfHDF,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    delete arg1;


    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfHDF_GetClassName(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfHDF *arg1 = (XdmfHDF *) 0 ;
    XdmfConstString result;

    if (SWIG_GetArgs(interp, objc, objv,"o:Xdmf::XdmfHDF_GetClassNameself ",0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfHDF,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    result = (XdmfConstString)(arg1)->GetClassName();

    Tcl_SetObjResult(interp,Tcl_NewStringObj(result,-1));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfHDF_SetCwdName(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfHDF *arg1 = (XdmfHDF *) 0 ;
    XdmfString arg2 ;
    XdmfInt32 result;

    if (SWIG_GetArgs(interp, objc, objv,"os:Xdmf::XdmfHDF_SetCwdNameself Directory ",0,&arg2) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfHDF,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    result = (XdmfInt32)(arg1)->SetCwdName(arg2);

    Tcl_SetObjResult(interp,Tcl_NewIntObj((long) result));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfHDF_GetCwdName(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfHDF *arg1 = (XdmfHDF *) 0 ;
    XdmfString result;

    if (SWIG_GetArgs(interp, objc, objv,"o:Xdmf::XdmfHDF_GetCwdNameself ",0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfHDF,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    result = (XdmfString)(arg1)->GetCwdName();

    Tcl_SetObjResult(interp,Tcl_NewStringObj(result,-1));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfHDF_Cd(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfHDF *arg1 = (XdmfHDF *) 0 ;
    XdmfString arg2 = (XdmfString) "/" ;
    XdmfInt32 result;

    if (SWIG_GetArgs(interp, objc, objv,"o|s:Xdmf::XdmfHDF_Cdself Directory ",0,&arg2) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfHDF,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    result = (XdmfInt32)(arg1)->Cd(arg2);

    Tcl_SetObjResult(interp,Tcl_NewIntObj((long) result));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfHDF_Mkdir(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfHDF *arg1 = (XdmfHDF *) 0 ;
    XdmfString arg2 ;
    XdmfInt32 result;

    if (SWIG_GetArgs(interp, objc, objv,"os:Xdmf::XdmfHDF_Mkdirself Name ",0,&arg2) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfHDF,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    result = (XdmfInt32)(arg1)->Mkdir(arg2);

    Tcl_SetObjResult(interp,Tcl_NewIntObj((long) result));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfHDF_GetNumberOfChildren(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfHDF *arg1 = (XdmfHDF *) 0 ;
    XdmfInt64 result;

    if (SWIG_GetArgs(interp, objc, objv,"o:Xdmf::XdmfHDF_GetNumberOfChildrenself ",0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfHDF,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    result = (XdmfInt64)(arg1)->GetNumberOfChildren();

    {
        char temp[256];
        sprintf(temp,"%lld", result);
        Tcl_SetObjResult(interp,Tcl_NewStringObj(temp,-1));
    }
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfHDF_GetChild(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfHDF *arg1 = (XdmfHDF *) 0 ;
    XdmfInt64 arg2 ;
    XdmfString result;

    if (SWIG_GetArgs(interp, objc, objv,"oo:Xdmf::XdmfHDF_GetChildself Index ",0,0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfHDF,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    arg2 = (XdmfInt64) XDMF_strtoll(Tcl_GetStringFromObj(objv[2],NULL),0,0);
    result = (XdmfString)(arg1)->GetChild(arg2);

    Tcl_SetObjResult(interp,Tcl_NewStringObj(result,-1));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfHDF_SetNextChild(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfHDF *arg1 = (XdmfHDF *) 0 ;
    XdmfConstString arg2 ;

    if (SWIG_GetArgs(interp, objc, objv,"os:Xdmf::XdmfHDF_SetNextChildself Name ",0,&arg2) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfHDF,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    (arg1)->SetNextChild(arg2);


    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfHDF_Info(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfHDF *arg1 = (XdmfHDF *) 0 ;
    hid_t arg2 ;
    XdmfConstString arg3 ;
    XdmfInt32 result;
    hid_t *argp2 ;

    if (SWIG_GetArgs(interp, objc, objv,"oos:Xdmf::XdmfHDF_Infoself Group Name ",0,0,&arg3) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfHDF,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[2], (void **) &argp2, SWIGTYPE_p_hid_t,SWIG_POINTER_EXCEPTION ) != TCL_OK)) SWIG_fail;
    arg2 = *argp2;
    result = (XdmfInt32)(arg1)->Info(arg2,arg3);

    Tcl_SetObjResult(interp,Tcl_NewIntObj((long) result));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfHDF_GetChildType(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfHDF *arg1 = (XdmfHDF *) 0 ;
    XdmfInt64 arg2 ;
    XdmfInt32 result;

    if (SWIG_GetArgs(interp, objc, objv,"oo:Xdmf::XdmfHDF_GetChildTypeself Index ",0,0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfHDF,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    arg2 = (XdmfInt64) XDMF_strtoll(Tcl_GetStringFromObj(objv[2],NULL),0,0);
    result = (XdmfInt32)(arg1)->GetChildType(arg2);

    Tcl_SetObjResult(interp,Tcl_NewIntObj((long) result));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfHDF_GetChildTypeAsString(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfHDF *arg1 = (XdmfHDF *) 0 ;
    XdmfInt64 arg2 ;
    XdmfString result;

    if (SWIG_GetArgs(interp, objc, objv,"oo:Xdmf::XdmfHDF_GetChildTypeAsStringself Index ",0,0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfHDF,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    arg2 = (XdmfInt64) XDMF_strtoll(Tcl_GetStringFromObj(objv[2],NULL),0,0);
    result = (XdmfString)(arg1)->GetChildTypeAsString(arg2);

    Tcl_SetObjResult(interp,Tcl_NewStringObj(result,-1));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfHDF_CreateDataset(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfHDF *arg1 = (XdmfHDF *) 0 ;
    XdmfString arg2 = (XdmfString) NULL ;
    XdmfInt32 result;

    if (SWIG_GetArgs(interp, objc, objv,"o|s:Xdmf::XdmfHDF_CreateDatasetself Path ",0,&arg2) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfHDF,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    result = (XdmfInt32)(arg1)->CreateDataset(arg2);

    Tcl_SetObjResult(interp,Tcl_NewIntObj((long) result));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfHDF_OpenDataset(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfHDF *arg1 = (XdmfHDF *) 0 ;
    XdmfInt32 result;

    if (SWIG_GetArgs(interp, objc, objv,"o:Xdmf::XdmfHDF_OpenDatasetself ",0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfHDF,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    result = (XdmfInt32)(arg1)->OpenDataset();

    Tcl_SetObjResult(interp,Tcl_NewIntObj((long) result));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfHDF_Open(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfHDF *arg1 = (XdmfHDF *) 0 ;
    XdmfConstString arg2 = (XdmfConstString) NULL ;
    XdmfConstString arg3 = (XdmfConstString) NULL ;
    XdmfInt32 result;

    if (SWIG_GetArgs(interp, objc, objv,"o|ss:Xdmf::XdmfHDF_Openself DataSetName Access ",0,&arg2,&arg3) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfHDF,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    result = (XdmfInt32)(arg1)->Open(arg2,arg3);

    Tcl_SetObjResult(interp,Tcl_NewIntObj((long) result));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfHDF_Read(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfHDF *arg1 = (XdmfHDF *) 0 ;
    XdmfArray *arg2 = (XdmfArray *) NULL ;
    XdmfArray *result;

    if (SWIG_GetArgs(interp, objc, objv,"o|o:Xdmf::XdmfHDF_Readself Array ",0,0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfHDF,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    if (objc > 2) {
        if ((SWIG_ConvertPtr(interp, objv[2], (void **) &arg2, SWIGTYPE_p_XdmfArray,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    }
    result = (XdmfArray *)(arg1)->Read(arg2);

    Tcl_SetObjResult(interp,SWIG_NewInstanceObj(interp, (void *) result, SWIGTYPE_p_XdmfArray,0));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfHDF_Write(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfHDF *arg1 = (XdmfHDF *) 0 ;
    XdmfArray *arg2 = (XdmfArray *) 0 ;
    XdmfArray *result;

    if (SWIG_GetArgs(interp, objc, objv,"oo:Xdmf::XdmfHDF_Writeself Array ",0,0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfHDF,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[2], (void **) &arg2, SWIGTYPE_p_XdmfArray,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    result = (XdmfArray *)(arg1)->Write(arg2);

    Tcl_SetObjResult(interp,SWIG_NewInstanceObj(interp, (void *) result, SWIGTYPE_p_XdmfArray,0));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfHDF_Close(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfHDF *arg1 = (XdmfHDF *) 0 ;
    XdmfInt32 result;

    if (SWIG_GetArgs(interp, objc, objv,"o:Xdmf::XdmfHDF_Closeself ",0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfHDF,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    result = (XdmfInt32)(arg1)->Close();

    Tcl_SetObjResult(interp,Tcl_NewIntObj((long) result));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static void swig_delete_XdmfHDF(void *obj) {
XdmfHDF *arg1 = (XdmfHDF *) obj;
delete arg1;
}
static swig_method swig_XdmfHDF_methods[] = {
    {"GetClassName", _wrap_XdmfHDF_GetClassName},
    {"SetCwdName", _wrap_XdmfHDF_SetCwdName},
    {"GetCwdName", _wrap_XdmfHDF_GetCwdName},
    {"Cd", _wrap_XdmfHDF_Cd},
    {"Mkdir", _wrap_XdmfHDF_Mkdir},
    {"GetNumberOfChildren", _wrap_XdmfHDF_GetNumberOfChildren},
    {"GetChild", _wrap_XdmfHDF_GetChild},
    {"SetNextChild", _wrap_XdmfHDF_SetNextChild},
    {"Info", _wrap_XdmfHDF_Info},
    {"GetChildType", _wrap_XdmfHDF_GetChildType},
    {"GetChildTypeAsString", _wrap_XdmfHDF_GetChildTypeAsString},
    {"CreateDataset", _wrap_XdmfHDF_CreateDataset},
    {"OpenDataset", _wrap_XdmfHDF_OpenDataset},
    {"Open", _wrap_XdmfHDF_Open},
    {"Read", _wrap_XdmfHDF_Read},
    {"Write", _wrap_XdmfHDF_Write},
    {"Close", _wrap_XdmfHDF_Close},
    {0,0}
};
static swig_attribute swig_XdmfHDF_attributes[] = {
    {0,0,0}
};
extern swig_class _wrap_class_XdmfHeavyData;
static swig_class *swig_XdmfHDF_bases[] = {&_wrap_class_XdmfHeavyData,0};
swig_class _wrap_class_XdmfHDF = { "XdmfHDF", &SWIGTYPE_p_XdmfHDF,_wrap_new_XdmfHDF, swig_delete_XdmfHDF, swig_XdmfHDF_methods, swig_XdmfHDF_attributes, swig_XdmfHDF_bases };
static int
_wrap_CopyArray(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfArray *arg1 = (XdmfArray *) 0 ;
    XdmfArray *arg2 = (XdmfArray *) NULL ;
    XdmfArray *result;

    if (SWIG_GetArgs(interp, objc, objv,"o|o:Xdmf::CopyArraySource Target ",0,0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfArray,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    if (objc > 2) {
        if ((SWIG_ConvertPtr(interp, objv[2], (void **) &arg2, SWIGTYPE_p_XdmfArray,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    }
    result = (XdmfArray *)CopyArray(arg1,arg2);

    Tcl_SetObjResult(interp,SWIG_NewInstanceObj(interp, (void *) result, SWIGTYPE_p_XdmfArray,0));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_new_XdmfParameter(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfParameter *result;

    if (SWIG_GetArgs(interp, objc, objv,":Xdmf::new_XdmfParameter") == TCL_ERROR) SWIG_fail;
    result = (XdmfParameter *)new XdmfParameter();

    Tcl_SetObjResult(interp,SWIG_NewInstanceObj(interp, (void *) result, SWIGTYPE_p_XdmfParameter,0));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_delete_XdmfParameter(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfParameter *arg1 = (XdmfParameter *) 0 ;

    if (SWIG_GetArgs(interp, objc, objv,"o:Xdmf::delete_XdmfParameterself ",0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfParameter,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    delete arg1;


    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfParameter_GetClassName(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfParameter *arg1 = (XdmfParameter *) 0 ;
    XdmfConstString result;

    if (SWIG_GetArgs(interp, objc, objv,"o:Xdmf::XdmfParameter_GetClassNameself ",0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfParameter,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    result = (XdmfConstString)(arg1)->GetClassName();

    Tcl_SetObjResult(interp,Tcl_NewStringObj(result,-1));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfParameter_GetParameterType(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfParameter *arg1 = (XdmfParameter *) 0 ;
    XdmfInt32 result;

    if (SWIG_GetArgs(interp, objc, objv,"o:Xdmf::XdmfParameter_GetParameterTypeself ",0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfParameter,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    result = (XdmfInt32)(arg1)->GetParameterType();

    Tcl_SetObjResult(interp,Tcl_NewIntObj((long) result));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfParameter_GetParameterTypeAsString(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfParameter *arg1 = (XdmfParameter *) 0 ;
    XdmfString result;

    if (SWIG_GetArgs(interp, objc, objv,"o:Xdmf::XdmfParameter_GetParameterTypeAsStringself ",0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfParameter,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    result = (XdmfString)(arg1)->GetParameterTypeAsString();

    Tcl_SetObjResult(interp,Tcl_NewStringObj(result,-1));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfParameter_SetParameterType(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfParameter *arg1 = (XdmfParameter *) 0 ;
    XdmfInt32 arg2 ;
    XdmfInt32 result;

    if (SWIG_GetArgs(interp, objc, objv,"oi:Xdmf::XdmfParameter_SetParameterTypeself _arg ",0,&arg2) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfParameter,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    result = (XdmfInt32)(arg1)->SetParameterType(arg2);

    Tcl_SetObjResult(interp,Tcl_NewIntObj((long) result));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfParameter_GetCurrentIndex(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfParameter *arg1 = (XdmfParameter *) 0 ;
    XdmfInt64 result;

    if (SWIG_GetArgs(interp, objc, objv,"o:Xdmf::XdmfParameter_GetCurrentIndexself ",0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfParameter,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    result = (XdmfInt64)(arg1)->GetCurrentIndex();

    {
        char temp[256];
        sprintf(temp,"%lld", result);
        Tcl_SetObjResult(interp,Tcl_NewStringObj(temp,-1));
    }
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfParameter_SetCurrentIndex(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfParameter *arg1 = (XdmfParameter *) 0 ;
    XdmfInt64 arg2 ;
    XdmfInt32 result;

    if (SWIG_GetArgs(interp, objc, objv,"oo:Xdmf::XdmfParameter_SetCurrentIndexself Value ",0,0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfParameter,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    arg2 = (XdmfInt64) XDMF_strtoll(Tcl_GetStringFromObj(objv[2],NULL),0,0);
    result = (XdmfInt32)(arg1)->SetCurrentIndex(arg2);

    Tcl_SetObjResult(interp,Tcl_NewIntObj((long) result));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfParameter_GetParameterName(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfParameter *arg1 = (XdmfParameter *) 0 ;
    XdmfString result;

    if (SWIG_GetArgs(interp, objc, objv,"o:Xdmf::XdmfParameter_GetParameterNameself ",0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfParameter,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    result = (XdmfString)(arg1)->GetParameterName();

    Tcl_SetObjResult(interp,Tcl_NewStringObj(result,-1));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfParameter_SetParameterName(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfParameter *arg1 = (XdmfParameter *) 0 ;
    XdmfString arg2 ;
    XdmfInt32 result;

    if (SWIG_GetArgs(interp, objc, objv,"os:Xdmf::XdmfParameter_SetParameterNameself Value ",0,&arg2) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfParameter,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    result = (XdmfInt32)(arg1)->SetParameterName(arg2);

    Tcl_SetObjResult(interp,Tcl_NewIntObj((long) result));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfParameter_GetParameterNode(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfParameter *arg1 = (XdmfParameter *) 0 ;
    XdmfXNode *result;

    if (SWIG_GetArgs(interp, objc, objv,"o:Xdmf::XdmfParameter_GetParameterNodeself ",0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfParameter,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    result = (XdmfXNode *)(arg1)->GetParameterNode();

    Tcl_SetObjResult(interp,SWIG_NewInstanceObj(interp, (void *) result, SWIGTYPE_p_XdmfXNode,0));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfParameter_SetParameterNode(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfParameter *arg1 = (XdmfParameter *) 0 ;
    XdmfXNode *arg2 = (XdmfXNode *) 0 ;
    XdmfInt32 result;

    if (SWIG_GetArgs(interp, objc, objv,"oo:Xdmf::XdmfParameter_SetParameterNodeself Node ",0,0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfParameter,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[2], (void **) &arg2, SWIGTYPE_p_XdmfXNode,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    result = (XdmfInt32)(arg1)->SetParameterNode(arg2);

    Tcl_SetObjResult(interp,Tcl_NewIntObj((long) result));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfParameter_GetFormat(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfParameter *arg1 = (XdmfParameter *) 0 ;
    XdmfString result;

    if (SWIG_GetArgs(interp, objc, objv,"o:Xdmf::XdmfParameter_GetFormatself ",0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfParameter,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    result = (XdmfString)(arg1)->GetFormat();

    Tcl_SetObjResult(interp,Tcl_NewStringObj(result,-1));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfParameter_GetNumberOfElements(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfParameter *arg1 = (XdmfParameter *) 0 ;
    XdmfInt64 result;

    if (SWIG_GetArgs(interp, objc, objv,"o:Xdmf::XdmfParameter_GetNumberOfElementsself ",0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfParameter,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    result = (XdmfInt64)(arg1)->GetNumberOfElements();

    {
        char temp[256];
        sprintf(temp,"%lld", result);
        Tcl_SetObjResult(interp,Tcl_NewStringObj(temp,-1));
    }
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfParameter_GetArray(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfParameter *arg1 = (XdmfParameter *) 0 ;
    XdmfArray *result;

    if (SWIG_GetArgs(interp, objc, objv,"o:Xdmf::XdmfParameter_GetArrayself ",0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfParameter,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    result = (XdmfArray *)(arg1)->GetArray();

    Tcl_SetObjResult(interp,SWIG_NewInstanceObj(interp, (void *) result, SWIGTYPE_p_XdmfArray,0));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfParameter_GetParameterValue(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfParameter *arg1 = (XdmfParameter *) 0 ;
    XdmfString result;

    if (SWIG_GetArgs(interp, objc, objv,"o:Xdmf::XdmfParameter_GetParameterValueself ",0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfParameter,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    result = (XdmfString)(arg1)->GetParameterValue();

    Tcl_SetObjResult(interp,Tcl_NewStringObj(result,-1));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfParameter_Update(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfParameter *arg1 = (XdmfParameter *) 0 ;
    XdmfInt32 arg2 = (XdmfInt32) -1 ;
    XdmfInt32 result;

    if (SWIG_GetArgs(interp, objc, objv,"o|i:Xdmf::XdmfParameter_Updateself CurrentIndex ",0,&arg2) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfParameter,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    result = (XdmfInt32)(arg1)->Update(arg2);

    Tcl_SetObjResult(interp,Tcl_NewIntObj((long) result));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfParameter_Substitute(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfParameter *arg1 = (XdmfParameter *) 0 ;
    XdmfString arg2 ;
    XdmfString result;

    if (SWIG_GetArgs(interp, objc, objv,"os:Xdmf::XdmfParameter_Substituteself OriginalString ",0,&arg2) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfParameter,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    result = (XdmfString)(arg1)->Substitute(arg2);

    Tcl_SetObjResult(interp,Tcl_NewStringObj(result,-1));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static void swig_delete_XdmfParameter(void *obj) {
XdmfParameter *arg1 = (XdmfParameter *) obj;
delete arg1;
}
static swig_method swig_XdmfParameter_methods[] = {
    {"GetClassName", _wrap_XdmfParameter_GetClassName},
    {"GetParameterType", _wrap_XdmfParameter_GetParameterType},
    {"GetParameterTypeAsString", _wrap_XdmfParameter_GetParameterTypeAsString},
    {"SetParameterType", _wrap_XdmfParameter_SetParameterType},
    {"GetCurrentIndex", _wrap_XdmfParameter_GetCurrentIndex},
    {"SetCurrentIndex", _wrap_XdmfParameter_SetCurrentIndex},
    {"GetParameterName", _wrap_XdmfParameter_GetParameterName},
    {"SetParameterName", _wrap_XdmfParameter_SetParameterName},
    {"GetParameterNode", _wrap_XdmfParameter_GetParameterNode},
    {"SetParameterNode", _wrap_XdmfParameter_SetParameterNode},
    {"GetFormat", _wrap_XdmfParameter_GetFormat},
    {"GetNumberOfElements", _wrap_XdmfParameter_GetNumberOfElements},
    {"GetArray", _wrap_XdmfParameter_GetArray},
    {"GetParameterValue", _wrap_XdmfParameter_GetParameterValue},
    {"Update", _wrap_XdmfParameter_Update},
    {"Substitute", _wrap_XdmfParameter_Substitute},
    {0,0}
};
static swig_attribute swig_XdmfParameter_attributes[] = {
    {0,0,0}
};
extern swig_class _wrap_class_XdmfObject;
static swig_class *swig_XdmfParameter_bases[] = {&_wrap_class_XdmfObject,0};
swig_class _wrap_class_XdmfParameter = { "XdmfParameter", &SWIGTYPE_p_XdmfParameter,_wrap_new_XdmfParameter, swig_delete_XdmfParameter, swig_XdmfParameter_methods, swig_XdmfParameter_attributes, swig_XdmfParameter_bases };
static int
_wrap_new_XdmfTransform(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfTransform *result;

    if (SWIG_GetArgs(interp, objc, objv,":Xdmf::new_XdmfTransform") == TCL_ERROR) SWIG_fail;
    result = (XdmfTransform *)new XdmfTransform();

    Tcl_SetObjResult(interp,SWIG_NewInstanceObj(interp, (void *) result, SWIGTYPE_p_XdmfTransform,0));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_delete_XdmfTransform(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfTransform *arg1 = (XdmfTransform *) 0 ;

    if (SWIG_GetArgs(interp, objc, objv,"o:Xdmf::delete_XdmfTransformself ",0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfTransform,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    delete arg1;


    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfTransform_GetClassName(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfTransform *arg1 = (XdmfTransform *) 0 ;
    XdmfConstString result;

    if (SWIG_GetArgs(interp, objc, objv,"o:Xdmf::XdmfTransform_GetClassNameself ",0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfTransform,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    result = (XdmfConstString)(arg1)->GetClassName();

    Tcl_SetObjResult(interp,Tcl_NewStringObj(result,-1));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfTransform_SetTransform(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfTransform *arg1 = (XdmfTransform *) 0 ;
    XdmfString arg2 ;

    if (SWIG_GetArgs(interp, objc, objv,"os:Xdmf::XdmfTransform_SetTransformself Transform ",0,&arg2) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfTransform,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    (arg1)->SetTransform(arg2);


    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfTransform_GetTransform(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfTransform *arg1 = (XdmfTransform *) 0 ;
    XdmfString result;

    if (SWIG_GetArgs(interp, objc, objv,"o:Xdmf::XdmfTransform_GetTransformself ",0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfTransform,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    result = (XdmfString)(arg1)->GetTransform();

    Tcl_SetObjResult(interp,Tcl_NewStringObj(result,-1));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfTransform_ElementToDataDesc(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfTransform *arg1 = (XdmfTransform *) 0 ;
    XdmfXNode *arg2 = (XdmfXNode *) 0 ;
    XdmfDataDesc *result;

    if (SWIG_GetArgs(interp, objc, objv,"oo:Xdmf::XdmfTransform_ElementToDataDescself Element ",0,0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfTransform,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[2], (void **) &arg2, SWIGTYPE_p_XdmfXNode,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    result = (XdmfDataDesc *)(arg1)->ElementToDataDesc(arg2);

    Tcl_SetObjResult(interp,SWIG_NewInstanceObj(interp, (void *) result, SWIGTYPE_p_XdmfDataDesc,0));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfTransform_ElementToArray(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfTransform *arg1 = (XdmfTransform *) 0 ;
    XdmfXNode *arg2 = (XdmfXNode *) 0 ;
    XdmfArray *result;

    if (SWIG_GetArgs(interp, objc, objv,"oo:Xdmf::XdmfTransform_ElementToArrayself Element ",0,0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfTransform,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[2], (void **) &arg2, SWIGTYPE_p_XdmfXNode,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    result = (XdmfArray *)(arg1)->ElementToArray(arg2);

    Tcl_SetObjResult(interp,SWIG_NewInstanceObj(interp, (void *) result, SWIGTYPE_p_XdmfArray,0));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfTransform_DataDescToElement(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfTransform *arg1 = (XdmfTransform *) 0 ;
    XdmfDataDesc *arg2 = (XdmfDataDesc *) 0 ;
    XdmfString arg3 ;
    XdmfXNode *arg4 = (XdmfXNode *) NULL ;
    XdmfXNode *result;

    if (SWIG_GetArgs(interp, objc, objv,"oos|o:Xdmf::XdmfTransform_DataDescToElementself Desc HeavyDataName Element ",0,0,&arg3,0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfTransform,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[2], (void **) &arg2, SWIGTYPE_p_XdmfDataDesc,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    if (objc > 4) {
        if ((SWIG_ConvertPtr(interp, objv[4], (void **) &arg4, SWIGTYPE_p_XdmfXNode,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    }
    result = (XdmfXNode *)(arg1)->DataDescToElement(arg2,arg3,arg4);

    Tcl_SetObjResult(interp,SWIG_NewInstanceObj(interp, (void *) result, SWIGTYPE_p_XdmfXNode,0));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfTransform_ArrayToElement(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfTransform *arg1 = (XdmfTransform *) 0 ;
    XdmfArray *arg2 = (XdmfArray *) 0 ;
    XdmfString arg3 ;
    XdmfString arg4 ;
    XdmfXNode *arg5 = (XdmfXNode *) NULL ;
    XdmfXNode *result;

    if (SWIG_GetArgs(interp, objc, objv,"ooss|o:Xdmf::XdmfTransform_ArrayToElementself Array HeavyDataName HeavyArrayName Element ",0,0,&arg3,&arg4,0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfTransform,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[2], (void **) &arg2, SWIGTYPE_p_XdmfArray,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    if (objc > 5) {
        if ((SWIG_ConvertPtr(interp, objv[5], (void **) &arg5, SWIGTYPE_p_XdmfXNode,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    }
    result = (XdmfXNode *)(arg1)->ArrayToElement(arg2,arg3,arg4,arg5);

    Tcl_SetObjResult(interp,SWIG_NewInstanceObj(interp, (void *) result, SWIGTYPE_p_XdmfXNode,0));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static void swig_delete_XdmfTransform(void *obj) {
XdmfTransform *arg1 = (XdmfTransform *) obj;
delete arg1;
}
static swig_method swig_XdmfTransform_methods[] = {
    {"GetClassName", _wrap_XdmfTransform_GetClassName},
    {"SetTransform", _wrap_XdmfTransform_SetTransform},
    {"GetTransform", _wrap_XdmfTransform_GetTransform},
    {"ElementToDataDesc", _wrap_XdmfTransform_ElementToDataDesc},
    {"ElementToArray", _wrap_XdmfTransform_ElementToArray},
    {"DataDescToElement", _wrap_XdmfTransform_DataDescToElement},
    {"ArrayToElement", _wrap_XdmfTransform_ArrayToElement},
    {0,0}
};
static swig_attribute swig_XdmfTransform_attributes[] = {
    {0,0,0}
};
extern swig_class _wrap_class_XdmfLightData;
static swig_class *swig_XdmfTransform_bases[] = {&_wrap_class_XdmfLightData,0};
swig_class _wrap_class_XdmfTransform = { "XdmfTransform", &SWIGTYPE_p_XdmfTransform,_wrap_new_XdmfTransform, swig_delete_XdmfTransform, swig_XdmfTransform_methods, swig_XdmfTransform_attributes, swig_XdmfTransform_bases };
static int
_wrap_new_XdmfNDGM(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfNDGM *result;

    if (SWIG_GetArgs(interp, objc, objv,":Xdmf::new_XdmfNDGM") == TCL_ERROR) SWIG_fail;
    result = (XdmfNDGM *)new XdmfNDGM();

    Tcl_SetObjResult(interp,SWIG_NewInstanceObj(interp, (void *) result, SWIGTYPE_p_XdmfNDGM,0));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_delete_XdmfNDGM(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfNDGM *arg1 = (XdmfNDGM *) 0 ;

    if (SWIG_GetArgs(interp, objc, objv,"o:Xdmf::delete_XdmfNDGMself ",0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfNDGM,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    delete arg1;


    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfNDGM_GetClassName(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfNDGM *arg1 = (XdmfNDGM *) 0 ;
    XdmfConstString result;

    if (SWIG_GetArgs(interp, objc, objv,"o:Xdmf::XdmfNDGM_GetClassNameself ",0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfNDGM,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    result = (XdmfConstString)(arg1)->GetClassName();

    Tcl_SetObjResult(interp,Tcl_NewStringObj(result,-1));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfNDGM_GetNdgmHost(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfNDGM *arg1 = (XdmfNDGM *) 0 ;
    XdmfString result;

    if (SWIG_GetArgs(interp, objc, objv,"o:Xdmf::XdmfNDGM_GetNdgmHostself ",0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfNDGM,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    result = (XdmfString)(arg1)->GetNdgmHost();

    Tcl_SetObjResult(interp,Tcl_NewStringObj(result,-1));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfNDGM_SetNdgmHost(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfNDGM *arg1 = (XdmfNDGM *) 0 ;
    XdmfString arg2 ;

    if (SWIG_GetArgs(interp, objc, objv,"os:Xdmf::XdmfNDGM_SetNdgmHostself String ",0,&arg2) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfNDGM,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    (arg1)->SetNdgmHost(arg2);


    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfNDGM_GetNdgmDriver(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfNDGM *arg1 = (XdmfNDGM *) 0 ;
    XdmfInt32 result;

    if (SWIG_GetArgs(interp, objc, objv,"o:Xdmf::XdmfNDGM_GetNdgmDriverself ",0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfNDGM,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    result = (XdmfInt32)(arg1)->GetNdgmDriver();

    Tcl_SetObjResult(interp,Tcl_NewIntObj((long) result));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfNDGM_SetNdgmDriver(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfNDGM *arg1 = (XdmfNDGM *) 0 ;
    XdmfInt32 arg2 ;
    XdmfInt32 result;

    if (SWIG_GetArgs(interp, objc, objv,"oi:Xdmf::XdmfNDGM_SetNdgmDriverself _arg ",0,&arg2) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfNDGM,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    result = (XdmfInt32)(arg1)->SetNdgmDriver(arg2);

    Tcl_SetObjResult(interp,Tcl_NewIntObj((long) result));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfNDGM_GetNdgmUid(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfNDGM *arg1 = (XdmfNDGM *) 0 ;
    XdmfInt32 result;

    if (SWIG_GetArgs(interp, objc, objv,"o:Xdmf::XdmfNDGM_GetNdgmUidself ",0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfNDGM,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    result = (XdmfInt32)(arg1)->GetNdgmUid();

    Tcl_SetObjResult(interp,Tcl_NewIntObj((long) result));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfNDGM_SetNdgmUid(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfNDGM *arg1 = (XdmfNDGM *) 0 ;
    XdmfInt32 arg2 ;
    XdmfInt32 result;

    if (SWIG_GetArgs(interp, objc, objv,"oi:Xdmf::XdmfNDGM_SetNdgmUidself _arg ",0,&arg2) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfNDGM,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    result = (XdmfInt32)(arg1)->SetNdgmUid(arg2);

    Tcl_SetObjResult(interp,Tcl_NewIntObj((long) result));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfNDGM_GetNdgmMode(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfNDGM *arg1 = (XdmfNDGM *) 0 ;
    XdmfInt32 result;

    if (SWIG_GetArgs(interp, objc, objv,"o:Xdmf::XdmfNDGM_GetNdgmModeself ",0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfNDGM,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    result = (XdmfInt32)(arg1)->GetNdgmMode();

    Tcl_SetObjResult(interp,Tcl_NewIntObj((long) result));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfNDGM_SetNdgmMode(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfNDGM *arg1 = (XdmfNDGM *) 0 ;
    XdmfInt32 arg2 ;
    XdmfInt32 result;

    if (SWIG_GetArgs(interp, objc, objv,"oi:Xdmf::XdmfNDGM_SetNdgmModeself _arg ",0,&arg2) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfNDGM,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    result = (XdmfInt32)(arg1)->SetNdgmMode(arg2);

    Tcl_SetObjResult(interp,Tcl_NewIntObj((long) result));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfNDGM_SetModeToMsgServer(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfNDGM *arg1 = (XdmfNDGM *) 0 ;

    if (SWIG_GetArgs(interp, objc, objv,"o:Xdmf::XdmfNDGM_SetModeToMsgServerself ",0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfNDGM,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    (arg1)->SetModeToMsgServer();


    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfNDGM_SetModeToMsgClient(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfNDGM *arg1 = (XdmfNDGM *) 0 ;

    if (SWIG_GetArgs(interp, objc, objv,"o:Xdmf::XdmfNDGM_SetModeToMsgClientself ",0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfNDGM,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    (arg1)->SetModeToMsgClient();


    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfNDGM_SetModeToClient(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfNDGM *arg1 = (XdmfNDGM *) 0 ;

    if (SWIG_GetArgs(interp, objc, objv,"o:Xdmf::XdmfNDGM_SetModeToClientself ",0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfNDGM,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    (arg1)->SetModeToClient();


    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfNDGM_GetNdgmNode(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfNDGM *arg1 = (XdmfNDGM *) 0 ;
    NDGM_NODE *result;

    if (SWIG_GetArgs(interp, objc, objv,"o:Xdmf::XdmfNDGM_GetNdgmNodeself ",0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfNDGM,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    result = (NDGM_NODE *)(arg1)->GetNdgmNode();

    Tcl_SetObjResult(interp,SWIG_NewInstanceObj(interp, (void *) result, SWIGTYPE_p_NDGM_NODE,0));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfNDGM_SetNdgmNode(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfNDGM *arg1 = (XdmfNDGM *) 0 ;
    NDGM_NODE *arg2 = (NDGM_NODE *) 0 ;
    XdmfInt32 result;

    if (SWIG_GetArgs(interp, objc, objv,"oo:Xdmf::XdmfNDGM_SetNdgmNodeself _arg ",0,0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfNDGM,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[2], (void **) &arg2, SWIGTYPE_p_NDGM_NODE,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    result = (XdmfInt32)(arg1)->SetNdgmNode(arg2);

    Tcl_SetObjResult(interp,Tcl_NewIntObj((long) result));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfNDGM_GetNdgmClient(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfNDGM *arg1 = (XdmfNDGM *) 0 ;
    NDGM_NODE *result;

    if (SWIG_GetArgs(interp, objc, objv,"o:Xdmf::XdmfNDGM_GetNdgmClientself ",0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfNDGM,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    result = (NDGM_NODE *)(arg1)->GetNdgmClient();

    Tcl_SetObjResult(interp,SWIG_NewInstanceObj(interp, (void *) result, SWIGTYPE_p_NDGM_NODE,0));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfNDGM_SetNdgmClient(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfNDGM *arg1 = (XdmfNDGM *) 0 ;
    NDGM_NODE *arg2 = (NDGM_NODE *) 0 ;
    XdmfInt32 result;

    if (SWIG_GetArgs(interp, objc, objv,"oo:Xdmf::XdmfNDGM_SetNdgmClientself _arg ",0,0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfNDGM,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[2], (void **) &arg2, SWIGTYPE_p_NDGM_NODE,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    result = (XdmfInt32)(arg1)->SetNdgmClient(arg2);

    Tcl_SetObjResult(interp,Tcl_NewIntObj((long) result));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfNDGM_GetTotalLength(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfNDGM *arg1 = (XdmfNDGM *) 0 ;
    XdmfInt64 result;

    if (SWIG_GetArgs(interp, objc, objv,"o:Xdmf::XdmfNDGM_GetTotalLengthself ",0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfNDGM,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    result = (XdmfInt64)(arg1)->GetTotalLength();

    {
        char temp[256];
        sprintf(temp,"%lld", result);
        Tcl_SetObjResult(interp,Tcl_NewStringObj(temp,-1));
    }
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfNDGM_GetLastAddress(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfNDGM *arg1 = (XdmfNDGM *) 0 ;
    XdmfInt64 result;

    if (SWIG_GetArgs(interp, objc, objv,"o:Xdmf::XdmfNDGM_GetLastAddressself ",0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfNDGM,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    result = (XdmfInt64)(arg1)->GetLastAddress();

    {
        char temp[256];
        sprintf(temp,"%lld", result);
        Tcl_SetObjResult(interp,Tcl_NewStringObj(temp,-1));
    }
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfNDGM_Clear(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfNDGM *arg1 = (XdmfNDGM *) 0 ;
    XdmfInt32 result;

    if (SWIG_GetArgs(interp, objc, objv,"o:Xdmf::XdmfNDGM_Clearself ",0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfNDGM,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    result = (XdmfInt32)(arg1)->Clear();

    Tcl_SetObjResult(interp,Tcl_NewIntObj((long) result));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfNDGM_Open(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfNDGM *arg1 = (XdmfNDGM *) 0 ;
    XdmfInt32 arg2 = (XdmfInt32) 1 ;
    XdmfInt32 result;

    if (SWIG_GetArgs(interp, objc, objv,"o|i:Xdmf::XdmfNDGM_Openself IdOffset ",0,&arg2) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfNDGM,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    result = (XdmfInt32)(arg1)->Open(arg2);

    Tcl_SetObjResult(interp,Tcl_NewIntObj((long) result));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfNDGM_Check(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfNDGM *arg1 = (XdmfNDGM *) 0 ;
    XdmfInt32 result;

    if (SWIG_GetArgs(interp, objc, objv,"o:Xdmf::XdmfNDGM_Checkself ",0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfNDGM,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    result = (XdmfInt32)(arg1)->Check();

    Tcl_SetObjResult(interp,Tcl_NewIntObj((long) result));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfNDGM_Close(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfNDGM *arg1 = (XdmfNDGM *) 0 ;
    XdmfInt32 arg2 = (XdmfInt32) 0 ;
    XdmfInt32 result;

    if (SWIG_GetArgs(interp, objc, objv,"o|i:Xdmf::XdmfNDGM_Closeself Disconnect ",0,&arg2) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfNDGM,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    result = (XdmfInt32)(arg1)->Close(arg2);

    Tcl_SetObjResult(interp,Tcl_NewIntObj((long) result));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfNDGM_Put(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfNDGM *arg1 = (XdmfNDGM *) 0 ;
    XdmfInt64 arg2 ;
    XdmfArray *arg3 = (XdmfArray *) 0 ;
    XdmfInt32 result;

    if (SWIG_GetArgs(interp, objc, objv,"ooo:Xdmf::XdmfNDGM_Putself Address Array ",0,0,0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfNDGM,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    arg2 = (XdmfInt64) XDMF_strtoll(Tcl_GetStringFromObj(objv[2],NULL),0,0);
    if ((SWIG_ConvertPtr(interp, objv[3], (void **) &arg3, SWIGTYPE_p_XdmfArray,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    result = (XdmfInt32)(arg1)->Put(arg2,arg3);

    Tcl_SetObjResult(interp,Tcl_NewIntObj((long) result));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfNDGM_Get(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfNDGM *arg1 = (XdmfNDGM *) 0 ;
    XdmfInt64 arg2 ;
    XdmfArray *arg3 = (XdmfArray *) 0 ;
    XdmfInt32 result;

    if (SWIG_GetArgs(interp, objc, objv,"ooo:Xdmf::XdmfNDGM_Getself Address Array ",0,0,0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfNDGM,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    arg2 = (XdmfInt64) XDMF_strtoll(Tcl_GetStringFromObj(objv[2],NULL),0,0);
    if ((SWIG_ConvertPtr(interp, objv[3], (void **) &arg3, SWIGTYPE_p_XdmfArray,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    result = (XdmfInt32)(arg1)->Get(arg2,arg3);

    Tcl_SetObjResult(interp,Tcl_NewIntObj((long) result));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfNDGM_Send(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfNDGM *arg1 = (XdmfNDGM *) 0 ;
    XdmfArray *arg2 = (XdmfArray *) 0 ;
    XdmfInt32 arg3 = (XdmfInt32) NDGM_CMD_NOP ;
    XdmfInt32 result;

    if (SWIG_GetArgs(interp, objc, objv,"oo|i:Xdmf::XdmfNDGM_Sendself Array Opcode ",0,0,&arg3) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfNDGM,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[2], (void **) &arg2, SWIGTYPE_p_XdmfArray,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    result = (XdmfInt32)(arg1)->Send(arg2,arg3);

    Tcl_SetObjResult(interp,Tcl_NewIntObj((long) result));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfNDGM_Recv(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfNDGM *arg1 = (XdmfNDGM *) 0 ;
    XdmfArray *arg2 = (XdmfArray *) 0 ;
    XdmfInt32 result;

    if (SWIG_GetArgs(interp, objc, objv,"oo:Xdmf::XdmfNDGM_Recvself Array ",0,0) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfNDGM,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[2], (void **) &arg2, SWIGTYPE_p_XdmfArray,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    result = (XdmfInt32)(arg1)->Recv(arg2);

    Tcl_SetObjResult(interp,Tcl_NewIntObj((long) result));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfNDGM_BarrierInit(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfNDGM *arg1 = (XdmfNDGM *) 0 ;
    XdmfInt32 arg2 = (XdmfInt32) 20 ;
    XdmfInt32 arg3 = (XdmfInt32) -1 ;
    XdmfInt32 result;

    if (SWIG_GetArgs(interp, objc, objv,"o|ii:Xdmf::XdmfNDGM_BarrierInitself Barrier Value ",0,&arg2,&arg3) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfNDGM,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    result = (XdmfInt32)(arg1)->BarrierInit(arg2,arg3);

    Tcl_SetObjResult(interp,Tcl_NewIntObj((long) result));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfNDGM_BarrierWait(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfNDGM *arg1 = (XdmfNDGM *) 0 ;
    XdmfInt32 arg2 ;
    XdmfInt32 result;

    if (SWIG_GetArgs(interp, objc, objv,"oi:Xdmf::XdmfNDGM_BarrierWaitself Barrier ",0,&arg2) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfNDGM,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    result = (XdmfInt32)(arg1)->BarrierWait(arg2);

    Tcl_SetObjResult(interp,Tcl_NewIntObj((long) result));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfNDGM_BarrierAudit(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfNDGM *arg1 = (XdmfNDGM *) 0 ;
    XdmfInt32 arg2 ;
    XdmfInt32 result;

    if (SWIG_GetArgs(interp, objc, objv,"oi:Xdmf::XdmfNDGM_BarrierAuditself Barrier ",0,&arg2) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfNDGM,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    result = (XdmfInt32)(arg1)->BarrierAudit(arg2);

    Tcl_SetObjResult(interp,Tcl_NewIntObj((long) result));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfNDGM_BarrierPoll(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfNDGM *arg1 = (XdmfNDGM *) 0 ;
    XdmfInt32 arg2 ;
    XdmfInt32 result;

    if (SWIG_GetArgs(interp, objc, objv,"oi:Xdmf::XdmfNDGM_BarrierPollself Barrier ",0,&arg2) == TCL_ERROR) SWIG_fail;
    if ((SWIG_ConvertPtr(interp, objv[1], (void **) &arg1, SWIGTYPE_p_XdmfNDGM,SWIG_POINTER_EXCEPTION | 0) != TCL_OK)) SWIG_fail;
    result = (XdmfInt32)(arg1)->BarrierPoll(arg2);

    Tcl_SetObjResult(interp,Tcl_NewIntObj((long) result));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static void swig_delete_XdmfNDGM(void *obj) {
XdmfNDGM *arg1 = (XdmfNDGM *) obj;
delete arg1;
}
static swig_method swig_XdmfNDGM_methods[] = {
    {"GetClassName", _wrap_XdmfNDGM_GetClassName},
    {"GetNdgmHost", _wrap_XdmfNDGM_GetNdgmHost},
    {"SetNdgmHost", _wrap_XdmfNDGM_SetNdgmHost},
    {"GetNdgmDriver", _wrap_XdmfNDGM_GetNdgmDriver},
    {"SetNdgmDriver", _wrap_XdmfNDGM_SetNdgmDriver},
    {"GetNdgmUid", _wrap_XdmfNDGM_GetNdgmUid},
    {"SetNdgmUid", _wrap_XdmfNDGM_SetNdgmUid},
    {"GetNdgmMode", _wrap_XdmfNDGM_GetNdgmMode},
    {"SetNdgmMode", _wrap_XdmfNDGM_SetNdgmMode},
    {"SetModeToMsgServer", _wrap_XdmfNDGM_SetModeToMsgServer},
    {"SetModeToMsgClient", _wrap_XdmfNDGM_SetModeToMsgClient},
    {"SetModeToClient", _wrap_XdmfNDGM_SetModeToClient},
    {"GetNdgmNode", _wrap_XdmfNDGM_GetNdgmNode},
    {"SetNdgmNode", _wrap_XdmfNDGM_SetNdgmNode},
    {"GetNdgmClient", _wrap_XdmfNDGM_GetNdgmClient},
    {"SetNdgmClient", _wrap_XdmfNDGM_SetNdgmClient},
    {"GetTotalLength", _wrap_XdmfNDGM_GetTotalLength},
    {"GetLastAddress", _wrap_XdmfNDGM_GetLastAddress},
    {"Clear", _wrap_XdmfNDGM_Clear},
    {"Open", _wrap_XdmfNDGM_Open},
    {"Check", _wrap_XdmfNDGM_Check},
    {"Close", _wrap_XdmfNDGM_Close},
    {"Put", _wrap_XdmfNDGM_Put},
    {"Get", _wrap_XdmfNDGM_Get},
    {"Send", _wrap_XdmfNDGM_Send},
    {"Recv", _wrap_XdmfNDGM_Recv},
    {"BarrierInit", _wrap_XdmfNDGM_BarrierInit},
    {"BarrierWait", _wrap_XdmfNDGM_BarrierWait},
    {"BarrierAudit", _wrap_XdmfNDGM_BarrierAudit},
    {"BarrierPoll", _wrap_XdmfNDGM_BarrierPoll},
    {0,0}
};
static swig_attribute swig_XdmfNDGM_attributes[] = {
    {0,0,0}
};
extern swig_class _wrap_class_XdmfDataDesc;
static swig_class *swig_XdmfNDGM_bases[] = {&_wrap_class_XdmfDataDesc,0};
swig_class _wrap_class_XdmfNDGM = { "XdmfNDGM", &SWIGTYPE_p_XdmfNDGM,_wrap_new_XdmfNDGM, swig_delete_XdmfNDGM, swig_XdmfNDGM_methods, swig_XdmfNDGM_attributes, swig_XdmfNDGM_bases };
static int
_wrap_XdmfGetNdgmEntries(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfString result;

    if (SWIG_GetArgs(interp, objc, objv,":Xdmf::XdmfGetNdgmEntries") == TCL_ERROR) SWIG_fail;
    result = (XdmfString)XdmfGetNdgmEntries();

    Tcl_SetObjResult(interp,Tcl_NewStringObj(result,-1));
    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfDeleteAllNdgmEntries(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    if (SWIG_GetArgs(interp, objc, objv,":Xdmf::XdmfDeleteAllNdgmEntries") == TCL_ERROR) SWIG_fail;
    XdmfDeleteAllNdgmEntries();


    return TCL_OK;
    fail:
    return TCL_ERROR;
}


static int
_wrap_XdmfAddNdgmEntry(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
    XdmfString arg1 ;
    XdmfInt64 arg2 ;
    XdmfInt64 result;

    if (SWIG_GetArgs(interp, objc, objv,"so:Xdmf::XdmfAddNdgmEntryName Length ",&arg1,0) == TCL_ERROR) SWIG_fail;
    arg2 = (XdmfInt64) XDMF_strtoll(Tcl_GetStringFromObj(objv[2],NULL),0,0);
    result = (XdmfInt64)XdmfAddNdgmEntry(arg1,arg2);

    {
        char temp[256];
        sprintf(temp,"%lld", result);
        Tcl_SetObjResult(interp,Tcl_NewStringObj(temp,-1));
    }
    return TCL_OK;
    fail:
    return TCL_ERROR;
}



static swig_command_info swig_commands[] = {
    { SWIG_prefix "new_XdmfObject", (swig_wrapper_func) _wrap_new_XdmfObject, NULL},
    { SWIG_prefix "delete_XdmfObject", (swig_wrapper_func) _wrap_delete_XdmfObject, NULL},
    { SWIG_prefix "XdmfObject_GetClassName", (swig_wrapper_func) _wrap_XdmfObject_GetClassName, NULL},
    { SWIG_prefix "XdmfObject_SetDebug", (swig_wrapper_func) _wrap_XdmfObject_SetDebug, NULL},
    { SWIG_prefix "XdmfObject_GetDebug", (swig_wrapper_func) _wrap_XdmfObject_GetDebug, NULL},
    { SWIG_prefix "XdmfObject_GetGlobalDebug", (swig_wrapper_func) _wrap_XdmfObject_GetGlobalDebug, NULL},
    { SWIG_prefix "XdmfObject_SetGlobalDebug", (swig_wrapper_func) _wrap_XdmfObject_SetGlobalDebug, NULL},
    { SWIG_prefix "XdmfObject_SetGlobalDebugOn", (swig_wrapper_func) _wrap_XdmfObject_SetGlobalDebugOn, NULL},
    { SWIG_prefix "XdmfObject_SetGlobalDebugOff", (swig_wrapper_func) _wrap_XdmfObject_SetGlobalDebugOff, NULL},
    { SWIG_prefix "XdmfObject", (swig_wrapper_func) SWIG_ObjectConstructor, &_wrap_class_XdmfObject},
    { SWIG_prefix "SetGlobalDebugOn", (swig_wrapper_func) _wrap_SetGlobalDebugOn, NULL},
    { SWIG_prefix "SetGlobalDebugOff", (swig_wrapper_func) _wrap_SetGlobalDebugOff, NULL},
    { SWIG_prefix "GetGlobalDebug", (swig_wrapper_func) _wrap_GetGlobalDebug, NULL},
    { SWIG_prefix "SetGlobalDebug", (swig_wrapper_func) _wrap_SetGlobalDebug, NULL},
    { SWIG_prefix "GetUnique", (swig_wrapper_func) _wrap_GetUnique, NULL},
    { SWIG_prefix "XdmfObjectToHandle", (swig_wrapper_func) _wrap_XdmfObjectToHandle, NULL},
    { SWIG_prefix "HandleToXdmfObject", (swig_wrapper_func) _wrap_HandleToXdmfObject, NULL},
    { SWIG_prefix "ICE_READ_STREAM64", (swig_wrapper_func) _wrap_ICE_READ_STREAM64, NULL},
    { SWIG_prefix "XdmfTypeToHDF5Type", (swig_wrapper_func) _wrap_XdmfTypeToHDF5Type, NULL},
    { SWIG_prefix "HDF5TypeToXdmfType", (swig_wrapper_func) _wrap_HDF5TypeToXdmfType, NULL},
    { SWIG_prefix "XdmfTypeToString", (swig_wrapper_func) _wrap_XdmfTypeToString, NULL},
    { SWIG_prefix "StringToXdmfType", (swig_wrapper_func) _wrap_StringToXdmfType, NULL},
    { SWIG_prefix "XdmfTypeToClassString", (swig_wrapper_func) _wrap_XdmfTypeToClassString, NULL},
    { SWIG_prefix "new_XdmfDataDesc", (swig_wrapper_func) _wrap_new_XdmfDataDesc, NULL},
    { SWIG_prefix "delete_XdmfDataDesc", (swig_wrapper_func) _wrap_delete_XdmfDataDesc, NULL},
    { SWIG_prefix "XdmfDataDesc_Print", (swig_wrapper_func) _wrap_XdmfDataDesc_Print, NULL},
    { SWIG_prefix "XdmfDataDesc_SetNumberType", (swig_wrapper_func) _wrap_XdmfDataDesc_SetNumberType, NULL},
    { SWIG_prefix "XdmfDataDesc_SetNumberTypeFromString", (swig_wrapper_func) _wrap_XdmfDataDesc_SetNumberTypeFromString, NULL},
    { SWIG_prefix "XdmfDataDesc_GetNumberType", (swig_wrapper_func) _wrap_XdmfDataDesc_GetNumberType, NULL},
    { SWIG_prefix "XdmfDataDesc_GetNumberTypeAsString", (swig_wrapper_func) _wrap_XdmfDataDesc_GetNumberTypeAsString, NULL},
    { SWIG_prefix "XdmfDataDesc_SetShape", (swig_wrapper_func) _wrap_XdmfDataDesc_SetShape, NULL},
    { SWIG_prefix "XdmfDataDesc_GetShape", (swig_wrapper_func) _wrap_XdmfDataDesc_GetShape, NULL},
    { SWIG_prefix "XdmfDataDesc_GetShapeAsString", (swig_wrapper_func) _wrap_XdmfDataDesc_GetShapeAsString, NULL},
    { SWIG_prefix "XdmfDataDesc_CopySelection", (swig_wrapper_func) _wrap_XdmfDataDesc_CopySelection, NULL},
    { SWIG_prefix "XdmfDataDesc_CopyShape", (swig_wrapper_func) _wrap_XdmfDataDesc_CopyShape, NULL},
    { SWIG_prefix "XdmfDataDesc_CopyType", (swig_wrapper_func) _wrap_XdmfDataDesc_CopyType, NULL},
    { SWIG_prefix "XdmfDataDesc_SetNumberOfElements", (swig_wrapper_func) _wrap_XdmfDataDesc_SetNumberOfElements, NULL},
    { SWIG_prefix "XdmfDataDesc_SetShapeFromString", (swig_wrapper_func) _wrap_XdmfDataDesc_SetShapeFromString, NULL},
    { SWIG_prefix "XdmfDataDesc_SelectAll", (swig_wrapper_func) _wrap_XdmfDataDesc_SelectAll, NULL},
    { SWIG_prefix "XdmfDataDesc_SelectHyperSlab", (swig_wrapper_func) _wrap_XdmfDataDesc_SelectHyperSlab, NULL},
    { SWIG_prefix "XdmfDataDesc_SelectHyperSlabFromString", (swig_wrapper_func) _wrap_XdmfDataDesc_SelectHyperSlabFromString, NULL},
    { SWIG_prefix "XdmfDataDesc_GetHyperSlab", (swig_wrapper_func) _wrap_XdmfDataDesc_GetHyperSlab, NULL},
    { SWIG_prefix "XdmfDataDesc_GetHyperSlabAsString", (swig_wrapper_func) _wrap_XdmfDataDesc_GetHyperSlabAsString, NULL},
    { SWIG_prefix "XdmfDataDesc_SelectCoordinates", (swig_wrapper_func) _wrap_XdmfDataDesc_SelectCoordinates, NULL},
    { SWIG_prefix "XdmfDataDesc_SelectCoordinatesFromString", (swig_wrapper_func) _wrap_XdmfDataDesc_SelectCoordinatesFromString, NULL},
    { SWIG_prefix "XdmfDataDesc_GetCoordinates", (swig_wrapper_func) _wrap_XdmfDataDesc_GetCoordinates, NULL},
    { SWIG_prefix "XdmfDataDesc_GetCoordinatesAsString", (swig_wrapper_func) _wrap_XdmfDataDesc_GetCoordinatesAsString, NULL},
    { SWIG_prefix "XdmfDataDesc_GetSelectionSize", (swig_wrapper_func) _wrap_XdmfDataDesc_GetSelectionSize, NULL},
    { SWIG_prefix "XdmfDataDesc_GetNumberOfElements", (swig_wrapper_func) _wrap_XdmfDataDesc_GetNumberOfElements, NULL},
    { SWIG_prefix "XdmfDataDesc_GetRank", (swig_wrapper_func) _wrap_XdmfDataDesc_GetRank, NULL},
    { SWIG_prefix "XdmfDataDesc_GetDimension", (swig_wrapper_func) _wrap_XdmfDataDesc_GetDimension, NULL},
    { SWIG_prefix "XdmfDataDesc_GetStart", (swig_wrapper_func) _wrap_XdmfDataDesc_GetStart, NULL},
    { SWIG_prefix "XdmfDataDesc_GetStride", (swig_wrapper_func) _wrap_XdmfDataDesc_GetStride, NULL},
    { SWIG_prefix "XdmfDataDesc_GetCount", (swig_wrapper_func) _wrap_XdmfDataDesc_GetCount, NULL},
    { SWIG_prefix "XdmfDataDesc_GetSelectionType", (swig_wrapper_func) _wrap_XdmfDataDesc_GetSelectionType, NULL},
    { SWIG_prefix "XdmfDataDesc_GetSelectionTypeAsString", (swig_wrapper_func) _wrap_XdmfDataDesc_GetSelectionTypeAsString, NULL},
    { SWIG_prefix "XdmfDataDesc_GetDataType", (swig_wrapper_func) _wrap_XdmfDataDesc_GetDataType, NULL},
    { SWIG_prefix "XdmfDataDesc_GetDataSpace", (swig_wrapper_func) _wrap_XdmfDataDesc_GetDataSpace, NULL},
    { SWIG_prefix "XdmfDataDesc_GetElementSize", (swig_wrapper_func) _wrap_XdmfDataDesc_GetElementSize, NULL},
    { SWIG_prefix "XdmfDataDesc_AddCompoundMemberFromString", (swig_wrapper_func) _wrap_XdmfDataDesc_AddCompoundMemberFromString, NULL},
    { SWIG_prefix "XdmfDataDesc_GetNumberOfMembers", (swig_wrapper_func) _wrap_XdmfDataDesc_GetNumberOfMembers, NULL},
    { SWIG_prefix "XdmfDataDesc_GetMemberName", (swig_wrapper_func) _wrap_XdmfDataDesc_GetMemberName, NULL},
    { SWIG_prefix "XdmfDataDesc_GetMemberLength", (swig_wrapper_func) _wrap_XdmfDataDesc_GetMemberLength, NULL},
    { SWIG_prefix "XdmfDataDesc_GetMemberSize", (swig_wrapper_func) _wrap_XdmfDataDesc_GetMemberSize, NULL},
    { SWIG_prefix "XdmfDataDesc_GetMemberShape", (swig_wrapper_func) _wrap_XdmfDataDesc_GetMemberShape, NULL},
    { SWIG_prefix "XdmfDataDesc_GetMemberShapeAsString", (swig_wrapper_func) _wrap_XdmfDataDesc_GetMemberShapeAsString, NULL},
    { SWIG_prefix "XdmfDataDesc_GetMemberType", (swig_wrapper_func) _wrap_XdmfDataDesc_GetMemberType, NULL},
    { SWIG_prefix "XdmfDataDesc_GetMemberTypeAsString", (swig_wrapper_func) _wrap_XdmfDataDesc_GetMemberTypeAsString, NULL},
    { SWIG_prefix "XdmfDataDesc_GetMemberOffset", (swig_wrapper_func) _wrap_XdmfDataDesc_GetMemberOffset, NULL},
    { SWIG_prefix "XdmfDataDesc", (swig_wrapper_func) SWIG_ObjectConstructor, &_wrap_class_XdmfDataDesc},
    { SWIG_prefix "new_XdmfArray", (swig_wrapper_func) _wrap_new_XdmfArray, NULL},
    { SWIG_prefix "delete_XdmfArray", (swig_wrapper_func) _wrap_delete_XdmfArray, NULL},
    { SWIG_prefix "XdmfArray_GetClassName", (swig_wrapper_func) _wrap_XdmfArray_GetClassName, NULL},
    { SWIG_prefix "XdmfArray_GetTagName", (swig_wrapper_func) _wrap_XdmfArray_GetTagName, NULL},
    { SWIG_prefix "XdmfArray_GetCoreLength", (swig_wrapper_func) _wrap_XdmfArray_GetCoreLength, NULL},
    { SWIG_prefix "XdmfArray_Allocate", (swig_wrapper_func) _wrap_XdmfArray_Allocate, NULL},
    { SWIG_prefix "XdmfArray_SetShape", (swig_wrapper_func) _wrap_XdmfArray_SetShape, NULL},
    { SWIG_prefix "XdmfArray_SetShapeFromString", (swig_wrapper_func) _wrap_XdmfArray_SetShapeFromString, NULL},
    { SWIG_prefix "XdmfArray_SetNumberOfElements", (swig_wrapper_func) _wrap_XdmfArray_SetNumberOfElements, NULL},
    { SWIG_prefix "XdmfArray_ReformFromString", (swig_wrapper_func) _wrap_XdmfArray_ReformFromString, NULL},
    { SWIG_prefix "XdmfArray_CopyShape", (swig_wrapper_func) _wrap_XdmfArray_CopyShape, NULL},
    { SWIG_prefix "XdmfArray_GetDataPointer", (swig_wrapper_func) _wrap_XdmfArray_GetDataPointer, NULL},
    { SWIG_prefix "XdmfArray_SetDataPointer", (swig_wrapper_func) _wrap_XdmfArray_SetDataPointer, NULL},
    { SWIG_prefix "XdmfArray_SetValueFromFloat64", (swig_wrapper_func) _wrap_XdmfArray_SetValueFromFloat64, NULL},
    { SWIG_prefix "XdmfArray_SetValueFromInt64", (swig_wrapper_func) _wrap_XdmfArray_SetValueFromInt64, NULL},
    { SWIG_prefix "XdmfArray_SetValues", (swig_wrapper_func) _wrap_XdmfArray_SetValues, NULL},
    { SWIG_prefix "XdmfArray_GetValuesAsInt8", (swig_wrapper_func) _wrap_XdmfArray_GetValuesAsInt8, NULL},
    { SWIG_prefix "XdmfArray_SetValuesFromInt8", (swig_wrapper_func) _wrap_XdmfArray_SetValuesFromInt8, NULL},
    { SWIG_prefix "XdmfArray_GetValuesAsInt32", (swig_wrapper_func) _wrap_XdmfArray_GetValuesAsInt32, NULL},
    { SWIG_prefix "XdmfArray_SetValuesFromInt32", (swig_wrapper_func) _wrap_XdmfArray_SetValuesFromInt32, NULL},
    { SWIG_prefix "XdmfArray_GetValuesAsInt64", (swig_wrapper_func) _wrap_XdmfArray_GetValuesAsInt64, NULL},
    { SWIG_prefix "XdmfArray_SetValuesFromInt64", (swig_wrapper_func) _wrap_XdmfArray_SetValuesFromInt64, NULL},
    { SWIG_prefix "XdmfArray_GetValuesAsFloat32", (swig_wrapper_func) _wrap_XdmfArray_GetValuesAsFloat32, NULL},
    { SWIG_prefix "XdmfArray_SetValuesFromFloat32", (swig_wrapper_func) _wrap_XdmfArray_SetValuesFromFloat32, NULL},
    { SWIG_prefix "XdmfArray_GetValuesAsFloat64", (swig_wrapper_func) _wrap_XdmfArray_GetValuesAsFloat64, NULL},
    { SWIG_prefix "XdmfArray_SetValuesFromFloat64", (swig_wrapper_func) _wrap_XdmfArray_SetValuesFromFloat64, NULL},
    { SWIG_prefix "XdmfArray_GetValueAsFloat64", (swig_wrapper_func) _wrap_XdmfArray_GetValueAsFloat64, NULL},
    { SWIG_prefix "XdmfArray_GetValueAsFloat32", (swig_wrapper_func) _wrap_XdmfArray_GetValueAsFloat32, NULL},
    { SWIG_prefix "XdmfArray_GetValueAsInt64", (swig_wrapper_func) _wrap_XdmfArray_GetValueAsInt64, NULL},
    { SWIG_prefix "XdmfArray_GetValueAsInt32", (swig_wrapper_func) _wrap_XdmfArray_GetValueAsInt32, NULL},
    { SWIG_prefix "XdmfArray_GetValueAsInt8", (swig_wrapper_func) _wrap_XdmfArray_GetValueAsInt8, NULL},
    { SWIG_prefix "XdmfArray_GetValues", (swig_wrapper_func) _wrap_XdmfArray_GetValues, NULL},
    { SWIG_prefix "XdmfArray_Generate", (swig_wrapper_func) _wrap_XdmfArray_Generate, NULL},
    { SWIG_prefix "XdmfArray_Clone", (swig_wrapper_func) _wrap_XdmfArray_Clone, NULL},
    { SWIG_prefix "XdmfArray_Reference", (swig_wrapper_func) _wrap_XdmfArray_Reference, NULL},
    { SWIG_prefix "XdmfArray_GetMaxAsFloat64", (swig_wrapper_func) _wrap_XdmfArray_GetMaxAsFloat64, NULL},
    { SWIG_prefix "XdmfArray_GetMinAsFloat64", (swig_wrapper_func) _wrap_XdmfArray_GetMinAsFloat64, NULL},
    { SWIG_prefix "XdmfArray_GetMaxAsInt64", (swig_wrapper_func) _wrap_XdmfArray_GetMaxAsInt64, NULL},
    { SWIG_prefix "XdmfArray_GetMinAsInt64", (swig_wrapper_func) _wrap_XdmfArray_GetMinAsInt64, NULL},
    { SWIG_prefix "XdmfArray_GetMean", (swig_wrapper_func) _wrap_XdmfArray_GetMean, NULL},
    { SWIG_prefix "XdmfArray_SetDataFromChars", (swig_wrapper_func) _wrap_XdmfArray_SetDataFromChars, NULL},
    { SWIG_prefix "XdmfArray_GetDataPointerAsCharPointer", (swig_wrapper_func) _wrap_XdmfArray_GetDataPointerAsCharPointer, NULL},
    { SWIG_prefix "XdmfArray", (swig_wrapper_func) SWIG_ObjectConstructor, &_wrap_class_XdmfArray},
    { SWIG_prefix "XdmfArrayList_name_set", (swig_wrapper_func) _wrap_XdmfArrayList_name_set, NULL},
    { SWIG_prefix "XdmfArrayList_name_get", (swig_wrapper_func) _wrap_XdmfArrayList_name_get, NULL},
    { SWIG_prefix "XdmfArrayList_timecntr_set", (swig_wrapper_func) _wrap_XdmfArrayList_timecntr_set, NULL},
    { SWIG_prefix "XdmfArrayList_timecntr_get", (swig_wrapper_func) _wrap_XdmfArrayList_timecntr_get, NULL},
    { SWIG_prefix "XdmfArrayList_Array_set", (swig_wrapper_func) _wrap_XdmfArrayList_Array_set, NULL},
    { SWIG_prefix "XdmfArrayList_Array_get", (swig_wrapper_func) _wrap_XdmfArrayList_Array_get, NULL},
    { SWIG_prefix "new_XdmfArrayList", (swig_wrapper_func) _wrap_new_XdmfArrayList, NULL},
    { SWIG_prefix "delete_XdmfArrayList", (swig_wrapper_func) _wrap_delete_XdmfArrayList, NULL},
    { SWIG_prefix "XdmfArrayList", (swig_wrapper_func) SWIG_ObjectConstructor, &_wrap_class_XdmfArrayList},
    { SWIG_prefix "TagNameToArray", (swig_wrapper_func) _wrap_TagNameToArray, NULL},
    { SWIG_prefix "PrintAllXdmfArrays", (swig_wrapper_func) _wrap_PrintAllXdmfArrays, NULL},
    { SWIG_prefix "GetNextOlderArray", (swig_wrapper_func) _wrap_GetNextOlderArray, NULL},
    { SWIG_prefix "GetCurrentArrayTime", (swig_wrapper_func) _wrap_GetCurrentArrayTime, NULL},
    { SWIG_prefix "new_XdmfLightData", (swig_wrapper_func) _wrap_new_XdmfLightData, NULL},
    { SWIG_prefix "delete_XdmfLightData", (swig_wrapper_func) _wrap_delete_XdmfLightData, NULL},
    { SWIG_prefix "XdmfLightData_GetClassName", (swig_wrapper_func) _wrap_XdmfLightData_GetClassName, NULL},
    { SWIG_prefix "XdmfLightData_GetNdgmHost", (swig_wrapper_func) _wrap_XdmfLightData_GetNdgmHost, NULL},
    { SWIG_prefix "XdmfLightData_SetNdgmHost", (swig_wrapper_func) _wrap_XdmfLightData_SetNdgmHost, NULL},
    { SWIG_prefix "XdmfLightData_GetName", (swig_wrapper_func) _wrap_XdmfLightData_GetName, NULL},
    { SWIG_prefix "XdmfLightData_SetName", (swig_wrapper_func) _wrap_XdmfLightData_SetName, NULL},
    { SWIG_prefix "XdmfLightData_GetFileName", (swig_wrapper_func) _wrap_XdmfLightData_GetFileName, NULL},
    { SWIG_prefix "XdmfLightData_SetFileName", (swig_wrapper_func) _wrap_XdmfLightData_SetFileName, NULL},
    { SWIG_prefix "XdmfLightData_GetWorkingDirectory", (swig_wrapper_func) _wrap_XdmfLightData_GetWorkingDirectory, NULL},
    { SWIG_prefix "XdmfLightData_SetWorkingDirectory", (swig_wrapper_func) _wrap_XdmfLightData_SetWorkingDirectory, NULL},
    { SWIG_prefix "XdmfLightData_SetDOM", (swig_wrapper_func) _wrap_XdmfLightData_SetDOM, NULL},
    { SWIG_prefix "XdmfLightData_GetDOM", (swig_wrapper_func) _wrap_XdmfLightData_GetDOM, NULL},
    { SWIG_prefix "XdmfLightData_SetCurrentElement", (swig_wrapper_func) _wrap_XdmfLightData_SetCurrentElement, NULL},
    { SWIG_prefix "XdmfLightData_GetCurrentElement", (swig_wrapper_func) _wrap_XdmfLightData_GetCurrentElement, NULL},
    { SWIG_prefix "XdmfLightData_HasBeenInited", (swig_wrapper_func) _wrap_XdmfLightData_HasBeenInited, NULL},
    { SWIG_prefix "XdmfLightData", (swig_wrapper_func) SWIG_ObjectConstructor, &_wrap_class_XdmfLightData},
    { SWIG_prefix "new_XdmfAttribute", (swig_wrapper_func) _wrap_new_XdmfAttribute, NULL},
    { SWIG_prefix "delete_XdmfAttribute", (swig_wrapper_func) _wrap_delete_XdmfAttribute, NULL},
    { SWIG_prefix "XdmfAttribute_GetClassName", (swig_wrapper_func) _wrap_XdmfAttribute_GetClassName, NULL},
    { SWIG_prefix "XdmfAttribute_SetAttributeType", (swig_wrapper_func) _wrap_XdmfAttribute_SetAttributeType, NULL},
    { SWIG_prefix "XdmfAttribute_GetAttributeType", (swig_wrapper_func) _wrap_XdmfAttribute_GetAttributeType, NULL},
    { SWIG_prefix "XdmfAttribute_SetAttributeTypeFromString", (swig_wrapper_func) _wrap_XdmfAttribute_SetAttributeTypeFromString, NULL},
    { SWIG_prefix "XdmfAttribute_GetAttributeTypeAsString", (swig_wrapper_func) _wrap_XdmfAttribute_GetAttributeTypeAsString, NULL},
    { SWIG_prefix "XdmfAttribute_SetAttributeCenterFromString", (swig_wrapper_func) _wrap_XdmfAttribute_SetAttributeCenterFromString, NULL},
    { SWIG_prefix "XdmfAttribute_GetAttributeCenterAsString", (swig_wrapper_func) _wrap_XdmfAttribute_GetAttributeCenterAsString, NULL},
    { SWIG_prefix "XdmfAttribute_SetAttributeCenter", (swig_wrapper_func) _wrap_XdmfAttribute_SetAttributeCenter, NULL},
    { SWIG_prefix "XdmfAttribute_GetAttributeCenter", (swig_wrapper_func) _wrap_XdmfAttribute_GetAttributeCenter, NULL},
    { SWIG_prefix "XdmfAttribute_GetShapeDesc", (swig_wrapper_func) _wrap_XdmfAttribute_GetShapeDesc, NULL},
    { SWIG_prefix "XdmfAttribute_SetValues", (swig_wrapper_func) _wrap_XdmfAttribute_SetValues, NULL},
    { SWIG_prefix "XdmfAttribute_GetValues", (swig_wrapper_func) _wrap_XdmfAttribute_GetValues, NULL},
    { SWIG_prefix "XdmfAttribute_InitAttributeFromElement", (swig_wrapper_func) _wrap_XdmfAttribute_InitAttributeFromElement, NULL},
    { SWIG_prefix "XdmfAttribute_SetAttributeFromElement", (swig_wrapper_func) _wrap_XdmfAttribute_SetAttributeFromElement, NULL},
    { SWIG_prefix "XdmfAttribute_Update", (swig_wrapper_func) _wrap_XdmfAttribute_Update, NULL},
    { SWIG_prefix "XdmfAttribute", (swig_wrapper_func) SWIG_ObjectConstructor, &_wrap_class_XdmfAttribute},
    { SWIG_prefix "new_XdmfCharArray", (swig_wrapper_func) _wrap_new_XdmfCharArray, NULL},
    { SWIG_prefix "delete_XdmfCharArray", (swig_wrapper_func) _wrap_delete_XdmfCharArray, NULL},
    { SWIG_prefix "XdmfCharArray_GetClassName", (swig_wrapper_func) _wrap_XdmfCharArray_GetClassName, NULL},
    { SWIG_prefix "XdmfCharArray_GetString", (swig_wrapper_func) _wrap_XdmfCharArray_GetString, NULL},
    { SWIG_prefix "XdmfCharArray_SetString", (swig_wrapper_func) _wrap_XdmfCharArray_SetString, NULL},
    { SWIG_prefix "XdmfCharArray_SetFromFile", (swig_wrapper_func) _wrap_XdmfCharArray_SetFromFile, NULL},
    { SWIG_prefix "XdmfCharArray", (swig_wrapper_func) SWIG_ObjectConstructor, &_wrap_class_XdmfCharArray},
    { SWIG_prefix "new_XdmfXNode", (swig_wrapper_func) _wrap_new_XdmfXNode, NULL},
    { SWIG_prefix "delete_XdmfXNode", (swig_wrapper_func) _wrap_delete_XdmfXNode, NULL},
    { SWIG_prefix "XdmfXNode_Set", (swig_wrapper_func) _wrap_XdmfXNode_Set, NULL},
    { SWIG_prefix "XdmfXNode_Get", (swig_wrapper_func) _wrap_XdmfXNode_Get, NULL},
    { SWIG_prefix "XdmfXNode_Print", (swig_wrapper_func) _wrap_XdmfXNode_Print, NULL},
    { SWIG_prefix "XdmfXNode_GetSize", (swig_wrapper_func) _wrap_XdmfXNode_GetSize, NULL},
    { SWIG_prefix "XdmfXNode_GetNameByIndex", (swig_wrapper_func) _wrap_XdmfXNode_GetNameByIndex, NULL},
    { SWIG_prefix "XdmfXNode_GetDataByIndex", (swig_wrapper_func) _wrap_XdmfXNode_GetDataByIndex, NULL},
    { SWIG_prefix "XdmfXNode_GetClientData", (swig_wrapper_func) _wrap_XdmfXNode_GetClientData, NULL},
    { SWIG_prefix "XdmfXNode_SetClientData", (swig_wrapper_func) _wrap_XdmfXNode_SetClientData, NULL},
    { SWIG_prefix "XdmfXNode_ManualDelete", (swig_wrapper_func) _wrap_XdmfXNode_ManualDelete, NULL},
    { SWIG_prefix "XdmfXNode", (swig_wrapper_func) SWIG_ObjectConstructor, &_wrap_class_XdmfXNode},
    { SWIG_prefix "new_XdmfDOM", (swig_wrapper_func) _wrap_new_XdmfDOM, NULL},
    { SWIG_prefix "delete_XdmfDOM", (swig_wrapper_func) _wrap_delete_XdmfDOM, NULL},
    { SWIG_prefix "XdmfDOM_GetClassName", (swig_wrapper_func) _wrap_XdmfDOM_GetClassName, NULL},
    { SWIG_prefix "XdmfDOM_SetXMLVersion", (swig_wrapper_func) _wrap_XdmfDOM_SetXMLVersion, NULL},
    { SWIG_prefix "XdmfDOM_GetXMLVersion", (swig_wrapper_func) _wrap_XdmfDOM_GetXMLVersion, NULL},
    { SWIG_prefix "XdmfDOM_SetDocType", (swig_wrapper_func) _wrap_XdmfDOM_SetDocType, NULL},
    { SWIG_prefix "XdmfDOM_GetDocType", (swig_wrapper_func) _wrap_XdmfDOM_GetDocType, NULL},
    { SWIG_prefix "XdmfDOM_SetSystem", (swig_wrapper_func) _wrap_XdmfDOM_SetSystem, NULL},
    { SWIG_prefix "XdmfDOM_GetSystem", (swig_wrapper_func) _wrap_XdmfDOM_GetSystem, NULL},
    { SWIG_prefix "XdmfDOM_SetInputFileName", (swig_wrapper_func) _wrap_XdmfDOM_SetInputFileName, NULL},
    { SWIG_prefix "XdmfDOM_SetOutputFileName", (swig_wrapper_func) _wrap_XdmfDOM_SetOutputFileName, NULL},
    { SWIG_prefix "XdmfDOM_GetInputFileName", (swig_wrapper_func) _wrap_XdmfDOM_GetInputFileName, NULL},
    { SWIG_prefix "XdmfDOM_GetOutputFileName", (swig_wrapper_func) _wrap_XdmfDOM_GetOutputFileName, NULL},
    { SWIG_prefix "XdmfDOM_GetOutput", (swig_wrapper_func) _wrap_XdmfDOM_GetOutput, NULL},
    { SWIG_prefix "XdmfDOM_SetOutput", (swig_wrapper_func) _wrap_XdmfDOM_SetOutput, NULL},
    { SWIG_prefix "XdmfDOM_GetInput", (swig_wrapper_func) _wrap_XdmfDOM_GetInput, NULL},
    { SWIG_prefix "XdmfDOM_SetInput", (swig_wrapper_func) _wrap_XdmfDOM_SetInput, NULL},
    { SWIG_prefix "XdmfDOM_GenerateHead", (swig_wrapper_func) _wrap_XdmfDOM_GenerateHead, NULL},
    { SWIG_prefix "XdmfDOM_Puts", (swig_wrapper_func) _wrap_XdmfDOM_Puts, NULL},
    { SWIG_prefix "XdmfDOM_GenerateTail", (swig_wrapper_func) _wrap_XdmfDOM_GenerateTail, NULL},
    { SWIG_prefix "XdmfDOM_Gets", (swig_wrapper_func) _wrap_XdmfDOM_Gets, NULL},
    { SWIG_prefix "XdmfDOM_GetTree", (swig_wrapper_func) _wrap_XdmfDOM_GetTree, NULL},
    { SWIG_prefix "XdmfDOM___Parse", (swig_wrapper_func) _wrap_XdmfDOM___Parse, NULL},
    { SWIG_prefix "XdmfDOM_Parse", (swig_wrapper_func) _wrap_XdmfDOM_Parse, NULL},
    { SWIG_prefix "XdmfDOM_GetRoot", (swig_wrapper_func) _wrap_XdmfDOM_GetRoot, NULL},
    { SWIG_prefix "XdmfDOM_GetNumberOfChildren", (swig_wrapper_func) _wrap_XdmfDOM_GetNumberOfChildren, NULL},
    { SWIG_prefix "XdmfDOM_GetChild", (swig_wrapper_func) _wrap_XdmfDOM_GetChild, NULL},
    { SWIG_prefix "XdmfDOM_GetNumberOfAttributes", (swig_wrapper_func) _wrap_XdmfDOM_GetNumberOfAttributes, NULL},
    { SWIG_prefix "XdmfDOM_GetAttribute", (swig_wrapper_func) _wrap_XdmfDOM_GetAttribute, NULL},
    { SWIG_prefix "XdmfDOM_IsChild", (swig_wrapper_func) _wrap_XdmfDOM_IsChild, NULL},
    { SWIG_prefix "XdmfDOM_Serialize", (swig_wrapper_func) _wrap_XdmfDOM_Serialize, NULL},
    { SWIG_prefix "XdmfDOM_Insert", (swig_wrapper_func) _wrap_XdmfDOM_Insert, NULL},
    { SWIG_prefix "XdmfDOM_InsertFromString", (swig_wrapper_func) _wrap_XdmfDOM_InsertFromString, NULL},
    { SWIG_prefix "XdmfDOM_DeleteNode", (swig_wrapper_func) _wrap_XdmfDOM_DeleteNode, NULL},
    { SWIG_prefix "XdmfDOM_FindElement", (swig_wrapper_func) _wrap_XdmfDOM_FindElement, NULL},
    { SWIG_prefix "XdmfDOM_FindElementByAttribute", (swig_wrapper_func) _wrap_XdmfDOM_FindElementByAttribute, NULL},
    { SWIG_prefix "XdmfDOM_FindNumberOfElements", (swig_wrapper_func) _wrap_XdmfDOM_FindNumberOfElements, NULL},
    { SWIG_prefix "XdmfDOM_FindNumberOfElementsByAttribute", (swig_wrapper_func) _wrap_XdmfDOM_FindNumberOfElementsByAttribute, NULL},
    { SWIG_prefix "XdmfDOM_FindProcessingInstruction", (swig_wrapper_func) _wrap_XdmfDOM_FindProcessingInstruction, NULL},
    { SWIG_prefix "XdmfDOM_FindNumberOfProcessingInstructions", (swig_wrapper_func) _wrap_XdmfDOM_FindNumberOfProcessingInstructions, NULL},
    { SWIG_prefix "XdmfDOM_GetNdgmHost", (swig_wrapper_func) _wrap_XdmfDOM_GetNdgmHost, NULL},
    { SWIG_prefix "XdmfDOM_SetNdgmHost", (swig_wrapper_func) _wrap_XdmfDOM_SetNdgmHost, NULL},
    { SWIG_prefix "XdmfDOM_GetWorkingDirectory", (swig_wrapper_func) _wrap_XdmfDOM_GetWorkingDirectory, NULL},
    { SWIG_prefix "XdmfDOM_SetWorkingDirectory", (swig_wrapper_func) _wrap_XdmfDOM_SetWorkingDirectory, NULL},
    { SWIG_prefix "XdmfDOM_Get", (swig_wrapper_func) _wrap_XdmfDOM_Get, NULL},
    { SWIG_prefix "XdmfDOM_SetUserData", (swig_wrapper_func) _wrap_XdmfDOM_SetUserData, NULL},
    { SWIG_prefix "XdmfDOM_GetUserData", (swig_wrapper_func) _wrap_XdmfDOM_GetUserData, NULL},
    { SWIG_prefix "XdmfDOM_Set", (swig_wrapper_func) _wrap_XdmfDOM_Set, NULL},
    { SWIG_prefix "XdmfDOM_GetNumberType", (swig_wrapper_func) _wrap_XdmfDOM_GetNumberType, NULL},
    { SWIG_prefix "XdmfDOM_FindNumberOfParameters", (swig_wrapper_func) _wrap_XdmfDOM_FindNumberOfParameters, NULL},
    { SWIG_prefix "XdmfDOM_FindParameter", (swig_wrapper_func) _wrap_XdmfDOM_FindParameter, NULL},
    { SWIG_prefix "XdmfDOM_GetParameter", (swig_wrapper_func) _wrap_XdmfDOM_GetParameter, NULL},
    { SWIG_prefix "XdmfDOM", (swig_wrapper_func) SWIG_ObjectConstructor, &_wrap_class_XdmfDOM},
    { SWIG_prefix "GetXNodeSize", (swig_wrapper_func) _wrap_GetXNodeSize, NULL},
    { SWIG_prefix "GetXNodeName", (swig_wrapper_func) _wrap_GetXNodeName, NULL},
    { SWIG_prefix "GetXNodeData", (swig_wrapper_func) _wrap_GetXNodeData, NULL},
    { SWIG_prefix "HandleToXdmfDOM", (swig_wrapper_func) _wrap_HandleToXdmfDOM, NULL},
    { SWIG_prefix "XdmfArrayExpr", (swig_wrapper_func) _wrap_XdmfArrayExpr, NULL},
    { SWIG_prefix "XdmfScalarExpr", (swig_wrapper_func) _wrap_XdmfScalarExpr, NULL},
    { SWIG_prefix "XdmfExpr", (swig_wrapper_func) _wrap_XdmfExpr, NULL},
    { SWIG_prefix "new_XdmfFormat", (swig_wrapper_func) _wrap_new_XdmfFormat, NULL},
    { SWIG_prefix "delete_XdmfFormat", (swig_wrapper_func) _wrap_delete_XdmfFormat, NULL},
    { SWIG_prefix "XdmfFormat_GetClassName", (swig_wrapper_func) _wrap_XdmfFormat_GetClassName, NULL},
    { SWIG_prefix "XdmfFormat_SetFormat", (swig_wrapper_func) _wrap_XdmfFormat_SetFormat, NULL},
    { SWIG_prefix "XdmfFormat_GetFormat", (swig_wrapper_func) _wrap_XdmfFormat_GetFormat, NULL},
    { SWIG_prefix "XdmfFormat_ElementToDataDesc", (swig_wrapper_func) _wrap_XdmfFormat_ElementToDataDesc, NULL},
    { SWIG_prefix "XdmfFormat_ElementToCompoundDataDesc", (swig_wrapper_func) _wrap_XdmfFormat_ElementToCompoundDataDesc, NULL},
    { SWIG_prefix "XdmfFormat_DataDescToElement", (swig_wrapper_func) _wrap_XdmfFormat_DataDescToElement, NULL},
    { SWIG_prefix "XdmfFormat", (swig_wrapper_func) SWIG_ObjectConstructor, &_wrap_class_XdmfFormat},
    { SWIG_prefix "new_XdmfFormatHDF", (swig_wrapper_func) _wrap_new_XdmfFormatHDF, NULL},
    { SWIG_prefix "delete_XdmfFormatHDF", (swig_wrapper_func) _wrap_delete_XdmfFormatHDF, NULL},
    { SWIG_prefix "XdmfFormatHDF_GetClassName", (swig_wrapper_func) _wrap_XdmfFormatHDF_GetClassName, NULL},
    { SWIG_prefix "XdmfFormatHDF_ElementToArray", (swig_wrapper_func) _wrap_XdmfFormatHDF_ElementToArray, NULL},
    { SWIG_prefix "XdmfFormatHDF_ArrayToElement", (swig_wrapper_func) _wrap_XdmfFormatHDF_ArrayToElement, NULL},
    { SWIG_prefix "XdmfFormatHDF", (swig_wrapper_func) SWIG_ObjectConstructor, &_wrap_class_XdmfFormatHDF},
    { SWIG_prefix "new_XdmfFormatMulti", (swig_wrapper_func) _wrap_new_XdmfFormatMulti, NULL},
    { SWIG_prefix "delete_XdmfFormatMulti", (swig_wrapper_func) _wrap_delete_XdmfFormatMulti, NULL},
    { SWIG_prefix "XdmfFormatMulti_GetClassName", (swig_wrapper_func) _wrap_XdmfFormatMulti_GetClassName, NULL},
    { SWIG_prefix "XdmfFormatMulti_SetFormatFromElement", (swig_wrapper_func) _wrap_XdmfFormatMulti_SetFormatFromElement, NULL},
    { SWIG_prefix "XdmfFormatMulti_ElementToArray", (swig_wrapper_func) _wrap_XdmfFormatMulti_ElementToArray, NULL},
    { SWIG_prefix "XdmfFormatMulti_ArrayToElement", (swig_wrapper_func) _wrap_XdmfFormatMulti_ArrayToElement, NULL},
    { SWIG_prefix "XdmfFormatMulti", (swig_wrapper_func) SWIG_ObjectConstructor, &_wrap_class_XdmfFormatMulti},
    { SWIG_prefix "new_XdmfFormatXML", (swig_wrapper_func) _wrap_new_XdmfFormatXML, NULL},
    { SWIG_prefix "delete_XdmfFormatXML", (swig_wrapper_func) _wrap_delete_XdmfFormatXML, NULL},
    { SWIG_prefix "XdmfFormatXML_GetClassName", (swig_wrapper_func) _wrap_XdmfFormatXML_GetClassName, NULL},
    { SWIG_prefix "XdmfFormatXML_ElementToArray", (swig_wrapper_func) _wrap_XdmfFormatXML_ElementToArray, NULL},
    { SWIG_prefix "XdmfFormatXML_ArrayToElement", (swig_wrapper_func) _wrap_XdmfFormatXML_ArrayToElement, NULL},
    { SWIG_prefix "XdmfFormatXML", (swig_wrapper_func) SWIG_ObjectConstructor, &_wrap_class_XdmfFormatXML},
    { SWIG_prefix "new_XdmfTopology", (swig_wrapper_func) _wrap_new_XdmfTopology, NULL},
    { SWIG_prefix "delete_XdmfTopology", (swig_wrapper_func) _wrap_delete_XdmfTopology, NULL},
    { SWIG_prefix "XdmfTopology_GetClassName", (swig_wrapper_func) _wrap_XdmfTopology_GetClassName, NULL},
    { SWIG_prefix "XdmfTopology_GetClass", (swig_wrapper_func) _wrap_XdmfTopology_GetClass, NULL},
    { SWIG_prefix "XdmfTopology_GetClassAsString", (swig_wrapper_func) _wrap_XdmfTopology_GetClassAsString, NULL},
    { SWIG_prefix "XdmfTopology_SetTopologyType", (swig_wrapper_func) _wrap_XdmfTopology_SetTopologyType, NULL},
    { SWIG_prefix "XdmfTopology_SetTopologyTypeFromString", (swig_wrapper_func) _wrap_XdmfTopology_SetTopologyTypeFromString, NULL},
    { SWIG_prefix "XdmfTopology_GetTopologyType", (swig_wrapper_func) _wrap_XdmfTopology_GetTopologyType, NULL},
    { SWIG_prefix "XdmfTopology_GetTopologyTypeAsString", (swig_wrapper_func) _wrap_XdmfTopology_GetTopologyTypeAsString, NULL},
    { SWIG_prefix "XdmfTopology_GetOrder", (swig_wrapper_func) _wrap_XdmfTopology_GetOrder, NULL},
    { SWIG_prefix "XdmfTopology_GetOrderAsString", (swig_wrapper_func) _wrap_XdmfTopology_GetOrderAsString, NULL},
    { SWIG_prefix "XdmfTopology_SetOrderFromString", (swig_wrapper_func) _wrap_XdmfTopology_SetOrderFromString, NULL},
    { SWIG_prefix "XdmfTopology_SetOrder", (swig_wrapper_func) _wrap_XdmfTopology_SetOrder, NULL},
    { SWIG_prefix "XdmfTopology_SetNodesPerElement", (swig_wrapper_func) _wrap_XdmfTopology_SetNodesPerElement, NULL},
    { SWIG_prefix "XdmfTopology_GetNodesPerElement", (swig_wrapper_func) _wrap_XdmfTopology_GetNodesPerElement, NULL},
    { SWIG_prefix "XdmfTopology_SetBaseOffset", (swig_wrapper_func) _wrap_XdmfTopology_SetBaseOffset, NULL},
    { SWIG_prefix "XdmfTopology_GetBaseOffset", (swig_wrapper_func) _wrap_XdmfTopology_GetBaseOffset, NULL},
    { SWIG_prefix "XdmfTopology_GetShapeDesc", (swig_wrapper_func) _wrap_XdmfTopology_GetShapeDesc, NULL},
    { SWIG_prefix "XdmfTopology_GetNumberOfElements", (swig_wrapper_func) _wrap_XdmfTopology_GetNumberOfElements, NULL},
    { SWIG_prefix "XdmfTopology_InitTopologyFromElement", (swig_wrapper_func) _wrap_XdmfTopology_InitTopologyFromElement, NULL},
    { SWIG_prefix "XdmfTopology_SetTopologyFromElement", (swig_wrapper_func) _wrap_XdmfTopology_SetTopologyFromElement, NULL},
    { SWIG_prefix "XdmfTopology_GetConnectivity", (swig_wrapper_func) _wrap_XdmfTopology_GetConnectivity, NULL},
    { SWIG_prefix "XdmfTopology_SetConnectivity", (swig_wrapper_func) _wrap_XdmfTopology_SetConnectivity, NULL},
    { SWIG_prefix "XdmfTopology_Update", (swig_wrapper_func) _wrap_XdmfTopology_Update, NULL},
    { SWIG_prefix "XdmfTopology", (swig_wrapper_func) SWIG_ObjectConstructor, &_wrap_class_XdmfTopology},
    { SWIG_prefix "HandleToXdmfTopology", (swig_wrapper_func) _wrap_HandleToXdmfTopology, NULL},
    { SWIG_prefix "new_XdmfGeometry", (swig_wrapper_func) _wrap_new_XdmfGeometry, NULL},
    { SWIG_prefix "delete_XdmfGeometry", (swig_wrapper_func) _wrap_delete_XdmfGeometry, NULL},
    { SWIG_prefix "XdmfGeometry_GetClassName", (swig_wrapper_func) _wrap_XdmfGeometry_GetClassName, NULL},
    { SWIG_prefix "XdmfGeometry_SetNumberOfPoints", (swig_wrapper_func) _wrap_XdmfGeometry_SetNumberOfPoints, NULL},
    { SWIG_prefix "XdmfGeometry_GetNumberOfPoints", (swig_wrapper_func) _wrap_XdmfGeometry_GetNumberOfPoints, NULL},
    { SWIG_prefix "XdmfGeometry_SetGeometryType", (swig_wrapper_func) _wrap_XdmfGeometry_SetGeometryType, NULL},
    { SWIG_prefix "XdmfGeometry_GetGeometryType", (swig_wrapper_func) _wrap_XdmfGeometry_GetGeometryType, NULL},
    { SWIG_prefix "XdmfGeometry_GetGeometryTypeAsString", (swig_wrapper_func) _wrap_XdmfGeometry_GetGeometryTypeAsString, NULL},
    { SWIG_prefix "XdmfGeometry_SetGeometryTypeFromString", (swig_wrapper_func) _wrap_XdmfGeometry_SetGeometryTypeFromString, NULL},
    { SWIG_prefix "XdmfGeometry_InitGeometryFromElement", (swig_wrapper_func) _wrap_XdmfGeometry_InitGeometryFromElement, NULL},
    { SWIG_prefix "XdmfGeometry_SetGeometryFromElement", (swig_wrapper_func) _wrap_XdmfGeometry_SetGeometryFromElement, NULL},
    { SWIG_prefix "XdmfGeometry_SetPoints", (swig_wrapper_func) _wrap_XdmfGeometry_SetPoints, NULL},
    { SWIG_prefix "XdmfGeometry_GetPoints", (swig_wrapper_func) _wrap_XdmfGeometry_GetPoints, NULL},
    { SWIG_prefix "XdmfGeometry_GetOrigin", (swig_wrapper_func) _wrap_XdmfGeometry_GetOrigin, NULL},
    { SWIG_prefix "XdmfGeometry_GetOriginX", (swig_wrapper_func) _wrap_XdmfGeometry_GetOriginX, NULL},
    { SWIG_prefix "XdmfGeometry_GetOriginY", (swig_wrapper_func) _wrap_XdmfGeometry_GetOriginY, NULL},
    { SWIG_prefix "XdmfGeometry_GetOriginZ", (swig_wrapper_func) _wrap_XdmfGeometry_GetOriginZ, NULL},
    { SWIG_prefix "XdmfGeometry_SetOrigin", (swig_wrapper_func) _wrap_XdmfGeometry_SetOrigin, NULL},
    { SWIG_prefix "XdmfGeometry_SetDxDyDz", (swig_wrapper_func) _wrap_XdmfGeometry_SetDxDyDz, NULL},
    { SWIG_prefix "XdmfGeometry_GetDx", (swig_wrapper_func) _wrap_XdmfGeometry_GetDx, NULL},
    { SWIG_prefix "XdmfGeometry_GetDy", (swig_wrapper_func) _wrap_XdmfGeometry_GetDy, NULL},
    { SWIG_prefix "XdmfGeometry_GetDz", (swig_wrapper_func) _wrap_XdmfGeometry_GetDz, NULL},
    { SWIG_prefix "XdmfGeometry_GetDxDyDz", (swig_wrapper_func) _wrap_XdmfGeometry_GetDxDyDz, NULL},
    { SWIG_prefix "XdmfGeometry_GetVectorX", (swig_wrapper_func) _wrap_XdmfGeometry_GetVectorX, NULL},
    { SWIG_prefix "XdmfGeometry_GetVectorY", (swig_wrapper_func) _wrap_XdmfGeometry_GetVectorY, NULL},
    { SWIG_prefix "XdmfGeometry_GetVectorZ", (swig_wrapper_func) _wrap_XdmfGeometry_GetVectorZ, NULL},
    { SWIG_prefix "XdmfGeometry_SetVectorX", (swig_wrapper_func) _wrap_XdmfGeometry_SetVectorX, NULL},
    { SWIG_prefix "XdmfGeometry_SetVectorY", (swig_wrapper_func) _wrap_XdmfGeometry_SetVectorY, NULL},
    { SWIG_prefix "XdmfGeometry_SetVectorZ", (swig_wrapper_func) _wrap_XdmfGeometry_SetVectorZ, NULL},
    { SWIG_prefix "XdmfGeometry_HasData", (swig_wrapper_func) _wrap_XdmfGeometry_HasData, NULL},
    { SWIG_prefix "XdmfGeometry_Update", (swig_wrapper_func) _wrap_XdmfGeometry_Update, NULL},
    { SWIG_prefix "XdmfGeometry", (swig_wrapper_func) SWIG_ObjectConstructor, &_wrap_class_XdmfGeometry},
    { SWIG_prefix "GetXdmfGeometryHandle", (swig_wrapper_func) _wrap_GetXdmfGeometryHandle, NULL},
    { SWIG_prefix "new_XdmfGrid", (swig_wrapper_func) _wrap_new_XdmfGrid, NULL},
    { SWIG_prefix "delete_XdmfGrid", (swig_wrapper_func) _wrap_delete_XdmfGrid, NULL},
    { SWIG_prefix "XdmfGrid_GetClassName", (swig_wrapper_func) _wrap_XdmfGrid_GetClassName, NULL},
    { SWIG_prefix "XdmfGrid_SetGeometry", (swig_wrapper_func) _wrap_XdmfGrid_SetGeometry, NULL},
    { SWIG_prefix "XdmfGrid_GetGeometry", (swig_wrapper_func) _wrap_XdmfGrid_GetGeometry, NULL},
    { SWIG_prefix "XdmfGrid_GetNumberOfAttributes", (swig_wrapper_func) _wrap_XdmfGrid_GetNumberOfAttributes, NULL},
    { SWIG_prefix "XdmfGrid_GetAttribute", (swig_wrapper_func) _wrap_XdmfGrid_GetAttribute, NULL},
    { SWIG_prefix "XdmfGrid_GetBaseGrid", (swig_wrapper_func) _wrap_XdmfGrid_GetBaseGrid, NULL},
    { SWIG_prefix "XdmfGrid_AssignAttribute", (swig_wrapper_func) _wrap_XdmfGrid_AssignAttribute, NULL},
    { SWIG_prefix "XdmfGrid_AssignAttributeByIndex", (swig_wrapper_func) _wrap_XdmfGrid_AssignAttributeByIndex, NULL},
    { SWIG_prefix "XdmfGrid_AssignAttributeByName", (swig_wrapper_func) _wrap_XdmfGrid_AssignAttributeByName, NULL},
    { SWIG_prefix "XdmfGrid_GetAssignedAttribute", (swig_wrapper_func) _wrap_XdmfGrid_GetAssignedAttribute, NULL},
    { SWIG_prefix "XdmfGrid_GetAssignedAttributeIndex", (swig_wrapper_func) _wrap_XdmfGrid_GetAssignedAttributeIndex, NULL},
    { SWIG_prefix "XdmfGrid_InitGridFromElement", (swig_wrapper_func) _wrap_XdmfGrid_InitGridFromElement, NULL},
    { SWIG_prefix "XdmfGrid_SetGridFromElement", (swig_wrapper_func) _wrap_XdmfGrid_SetGridFromElement, NULL},
    { SWIG_prefix "XdmfGrid_Update", (swig_wrapper_func) _wrap_XdmfGrid_Update, NULL},
    { SWIG_prefix "XdmfGrid", (swig_wrapper_func) SWIG_ObjectConstructor, &_wrap_class_XdmfGrid},
    { SWIG_prefix "HandleToXdmfGrid", (swig_wrapper_func) _wrap_HandleToXdmfGrid, NULL},
    { SWIG_prefix "new_XdmfHeavyData", (swig_wrapper_func) _wrap_new_XdmfHeavyData, NULL},
    { SWIG_prefix "delete_XdmfHeavyData", (swig_wrapper_func) _wrap_delete_XdmfHeavyData, NULL},
    { SWIG_prefix "XdmfHeavyData_GetClassName", (swig_wrapper_func) _wrap_XdmfHeavyData_GetClassName, NULL},
    { SWIG_prefix "XdmfHeavyData_GetNdgmHost", (swig_wrapper_func) _wrap_XdmfHeavyData_GetNdgmHost, NULL},
    { SWIG_prefix "XdmfHeavyData_SetNdgmHost", (swig_wrapper_func) _wrap_XdmfHeavyData_SetNdgmHost, NULL},
    { SWIG_prefix "XdmfHeavyData_GetWorkingDirectory", (swig_wrapper_func) _wrap_XdmfHeavyData_GetWorkingDirectory, NULL},
    { SWIG_prefix "XdmfHeavyData_SetWorkingDirectory", (swig_wrapper_func) _wrap_XdmfHeavyData_SetWorkingDirectory, NULL},
    { SWIG_prefix "XdmfHeavyData_GetDomain", (swig_wrapper_func) _wrap_XdmfHeavyData_GetDomain, NULL},
    { SWIG_prefix "XdmfHeavyData_SetDomain", (swig_wrapper_func) _wrap_XdmfHeavyData_SetDomain, NULL},
    { SWIG_prefix "XdmfHeavyData_GetFileName", (swig_wrapper_func) _wrap_XdmfHeavyData_GetFileName, NULL},
    { SWIG_prefix "XdmfHeavyData_SetFileName", (swig_wrapper_func) _wrap_XdmfHeavyData_SetFileName, NULL},
    { SWIG_prefix "XdmfHeavyData_GetPath", (swig_wrapper_func) _wrap_XdmfHeavyData_GetPath, NULL},
    { SWIG_prefix "XdmfHeavyData_SetPath", (swig_wrapper_func) _wrap_XdmfHeavyData_SetPath, NULL},
    { SWIG_prefix "XdmfHeavyData_GetAccess", (swig_wrapper_func) _wrap_XdmfHeavyData_GetAccess, NULL},
    { SWIG_prefix "XdmfHeavyData_SetAccess", (swig_wrapper_func) _wrap_XdmfHeavyData_SetAccess, NULL},
    { SWIG_prefix "XdmfHeavyData", (swig_wrapper_func) SWIG_ObjectConstructor, &_wrap_class_XdmfHeavyData},
    { SWIG_prefix "new_XdmfHDF", (swig_wrapper_func) _wrap_new_XdmfHDF, NULL},
    { SWIG_prefix "delete_XdmfHDF", (swig_wrapper_func) _wrap_delete_XdmfHDF, NULL},
    { SWIG_prefix "XdmfHDF_GetClassName", (swig_wrapper_func) _wrap_XdmfHDF_GetClassName, NULL},
    { SWIG_prefix "XdmfHDF_SetCwdName", (swig_wrapper_func) _wrap_XdmfHDF_SetCwdName, NULL},
    { SWIG_prefix "XdmfHDF_GetCwdName", (swig_wrapper_func) _wrap_XdmfHDF_GetCwdName, NULL},
    { SWIG_prefix "XdmfHDF_Cd", (swig_wrapper_func) _wrap_XdmfHDF_Cd, NULL},
    { SWIG_prefix "XdmfHDF_Mkdir", (swig_wrapper_func) _wrap_XdmfHDF_Mkdir, NULL},
    { SWIG_prefix "XdmfHDF_GetNumberOfChildren", (swig_wrapper_func) _wrap_XdmfHDF_GetNumberOfChildren, NULL},
    { SWIG_prefix "XdmfHDF_GetChild", (swig_wrapper_func) _wrap_XdmfHDF_GetChild, NULL},
    { SWIG_prefix "XdmfHDF_SetNextChild", (swig_wrapper_func) _wrap_XdmfHDF_SetNextChild, NULL},
    { SWIG_prefix "XdmfHDF_Info", (swig_wrapper_func) _wrap_XdmfHDF_Info, NULL},
    { SWIG_prefix "XdmfHDF_GetChildType", (swig_wrapper_func) _wrap_XdmfHDF_GetChildType, NULL},
    { SWIG_prefix "XdmfHDF_GetChildTypeAsString", (swig_wrapper_func) _wrap_XdmfHDF_GetChildTypeAsString, NULL},
    { SWIG_prefix "XdmfHDF_CreateDataset", (swig_wrapper_func) _wrap_XdmfHDF_CreateDataset, NULL},
    { SWIG_prefix "XdmfHDF_OpenDataset", (swig_wrapper_func) _wrap_XdmfHDF_OpenDataset, NULL},
    { SWIG_prefix "XdmfHDF_Open", (swig_wrapper_func) _wrap_XdmfHDF_Open, NULL},
    { SWIG_prefix "XdmfHDF_Read", (swig_wrapper_func) _wrap_XdmfHDF_Read, NULL},
    { SWIG_prefix "XdmfHDF_Write", (swig_wrapper_func) _wrap_XdmfHDF_Write, NULL},
    { SWIG_prefix "XdmfHDF_Close", (swig_wrapper_func) _wrap_XdmfHDF_Close, NULL},
    { SWIG_prefix "XdmfHDF", (swig_wrapper_func) SWIG_ObjectConstructor, &_wrap_class_XdmfHDF},
    { SWIG_prefix "CopyArray", (swig_wrapper_func) _wrap_CopyArray, NULL},
    { SWIG_prefix "new_XdmfParameter", (swig_wrapper_func) _wrap_new_XdmfParameter, NULL},
    { SWIG_prefix "delete_XdmfParameter", (swig_wrapper_func) _wrap_delete_XdmfParameter, NULL},
    { SWIG_prefix "XdmfParameter_GetClassName", (swig_wrapper_func) _wrap_XdmfParameter_GetClassName, NULL},
    { SWIG_prefix "XdmfParameter_GetParameterType", (swig_wrapper_func) _wrap_XdmfParameter_GetParameterType, NULL},
    { SWIG_prefix "XdmfParameter_GetParameterTypeAsString", (swig_wrapper_func) _wrap_XdmfParameter_GetParameterTypeAsString, NULL},
    { SWIG_prefix "XdmfParameter_SetParameterType", (swig_wrapper_func) _wrap_XdmfParameter_SetParameterType, NULL},
    { SWIG_prefix "XdmfParameter_GetCurrentIndex", (swig_wrapper_func) _wrap_XdmfParameter_GetCurrentIndex, NULL},
    { SWIG_prefix "XdmfParameter_SetCurrentIndex", (swig_wrapper_func) _wrap_XdmfParameter_SetCurrentIndex, NULL},
    { SWIG_prefix "XdmfParameter_GetParameterName", (swig_wrapper_func) _wrap_XdmfParameter_GetParameterName, NULL},
    { SWIG_prefix "XdmfParameter_SetParameterName", (swig_wrapper_func) _wrap_XdmfParameter_SetParameterName, NULL},
    { SWIG_prefix "XdmfParameter_GetParameterNode", (swig_wrapper_func) _wrap_XdmfParameter_GetParameterNode, NULL},
    { SWIG_prefix "XdmfParameter_SetParameterNode", (swig_wrapper_func) _wrap_XdmfParameter_SetParameterNode, NULL},
    { SWIG_prefix "XdmfParameter_GetFormat", (swig_wrapper_func) _wrap_XdmfParameter_GetFormat, NULL},
    { SWIG_prefix "XdmfParameter_GetNumberOfElements", (swig_wrapper_func) _wrap_XdmfParameter_GetNumberOfElements, NULL},
    { SWIG_prefix "XdmfParameter_GetArray", (swig_wrapper_func) _wrap_XdmfParameter_GetArray, NULL},
    { SWIG_prefix "XdmfParameter_GetParameterValue", (swig_wrapper_func) _wrap_XdmfParameter_GetParameterValue, NULL},
    { SWIG_prefix "XdmfParameter_Update", (swig_wrapper_func) _wrap_XdmfParameter_Update, NULL},
    { SWIG_prefix "XdmfParameter_Substitute", (swig_wrapper_func) _wrap_XdmfParameter_Substitute, NULL},
    { SWIG_prefix "XdmfParameter", (swig_wrapper_func) SWIG_ObjectConstructor, &_wrap_class_XdmfParameter},
    { SWIG_prefix "new_XdmfTransform", (swig_wrapper_func) _wrap_new_XdmfTransform, NULL},
    { SWIG_prefix "delete_XdmfTransform", (swig_wrapper_func) _wrap_delete_XdmfTransform, NULL},
    { SWIG_prefix "XdmfTransform_GetClassName", (swig_wrapper_func) _wrap_XdmfTransform_GetClassName, NULL},
    { SWIG_prefix "XdmfTransform_SetTransform", (swig_wrapper_func) _wrap_XdmfTransform_SetTransform, NULL},
    { SWIG_prefix "XdmfTransform_GetTransform", (swig_wrapper_func) _wrap_XdmfTransform_GetTransform, NULL},
    { SWIG_prefix "XdmfTransform_ElementToDataDesc", (swig_wrapper_func) _wrap_XdmfTransform_ElementToDataDesc, NULL},
    { SWIG_prefix "XdmfTransform_ElementToArray", (swig_wrapper_func) _wrap_XdmfTransform_ElementToArray, NULL},
    { SWIG_prefix "XdmfTransform_DataDescToElement", (swig_wrapper_func) _wrap_XdmfTransform_DataDescToElement, NULL},
    { SWIG_prefix "XdmfTransform_ArrayToElement", (swig_wrapper_func) _wrap_XdmfTransform_ArrayToElement, NULL},
    { SWIG_prefix "XdmfTransform", (swig_wrapper_func) SWIG_ObjectConstructor, &_wrap_class_XdmfTransform},
    { SWIG_prefix "new_XdmfNDGM", (swig_wrapper_func) _wrap_new_XdmfNDGM, NULL},
    { SWIG_prefix "delete_XdmfNDGM", (swig_wrapper_func) _wrap_delete_XdmfNDGM, NULL},
    { SWIG_prefix "XdmfNDGM_GetClassName", (swig_wrapper_func) _wrap_XdmfNDGM_GetClassName, NULL},
    { SWIG_prefix "XdmfNDGM_GetNdgmHost", (swig_wrapper_func) _wrap_XdmfNDGM_GetNdgmHost, NULL},
    { SWIG_prefix "XdmfNDGM_SetNdgmHost", (swig_wrapper_func) _wrap_XdmfNDGM_SetNdgmHost, NULL},
    { SWIG_prefix "XdmfNDGM_GetNdgmDriver", (swig_wrapper_func) _wrap_XdmfNDGM_GetNdgmDriver, NULL},
    { SWIG_prefix "XdmfNDGM_SetNdgmDriver", (swig_wrapper_func) _wrap_XdmfNDGM_SetNdgmDriver, NULL},
    { SWIG_prefix "XdmfNDGM_GetNdgmUid", (swig_wrapper_func) _wrap_XdmfNDGM_GetNdgmUid, NULL},
    { SWIG_prefix "XdmfNDGM_SetNdgmUid", (swig_wrapper_func) _wrap_XdmfNDGM_SetNdgmUid, NULL},
    { SWIG_prefix "XdmfNDGM_GetNdgmMode", (swig_wrapper_func) _wrap_XdmfNDGM_GetNdgmMode, NULL},
    { SWIG_prefix "XdmfNDGM_SetNdgmMode", (swig_wrapper_func) _wrap_XdmfNDGM_SetNdgmMode, NULL},
    { SWIG_prefix "XdmfNDGM_SetModeToMsgServer", (swig_wrapper_func) _wrap_XdmfNDGM_SetModeToMsgServer, NULL},
    { SWIG_prefix "XdmfNDGM_SetModeToMsgClient", (swig_wrapper_func) _wrap_XdmfNDGM_SetModeToMsgClient, NULL},
    { SWIG_prefix "XdmfNDGM_SetModeToClient", (swig_wrapper_func) _wrap_XdmfNDGM_SetModeToClient, NULL},
    { SWIG_prefix "XdmfNDGM_GetNdgmNode", (swig_wrapper_func) _wrap_XdmfNDGM_GetNdgmNode, NULL},
    { SWIG_prefix "XdmfNDGM_SetNdgmNode", (swig_wrapper_func) _wrap_XdmfNDGM_SetNdgmNode, NULL},
    { SWIG_prefix "XdmfNDGM_GetNdgmClient", (swig_wrapper_func) _wrap_XdmfNDGM_GetNdgmClient, NULL},
    { SWIG_prefix "XdmfNDGM_SetNdgmClient", (swig_wrapper_func) _wrap_XdmfNDGM_SetNdgmClient, NULL},
    { SWIG_prefix "XdmfNDGM_GetTotalLength", (swig_wrapper_func) _wrap_XdmfNDGM_GetTotalLength, NULL},
    { SWIG_prefix "XdmfNDGM_GetLastAddress", (swig_wrapper_func) _wrap_XdmfNDGM_GetLastAddress, NULL},
    { SWIG_prefix "XdmfNDGM_Clear", (swig_wrapper_func) _wrap_XdmfNDGM_Clear, NULL},
    { SWIG_prefix "XdmfNDGM_Open", (swig_wrapper_func) _wrap_XdmfNDGM_Open, NULL},
    { SWIG_prefix "XdmfNDGM_Check", (swig_wrapper_func) _wrap_XdmfNDGM_Check, NULL},
    { SWIG_prefix "XdmfNDGM_Close", (swig_wrapper_func) _wrap_XdmfNDGM_Close, NULL},
    { SWIG_prefix "XdmfNDGM_Put", (swig_wrapper_func) _wrap_XdmfNDGM_Put, NULL},
    { SWIG_prefix "XdmfNDGM_Get", (swig_wrapper_func) _wrap_XdmfNDGM_Get, NULL},
    { SWIG_prefix "XdmfNDGM_Send", (swig_wrapper_func) _wrap_XdmfNDGM_Send, NULL},
    { SWIG_prefix "XdmfNDGM_Recv", (swig_wrapper_func) _wrap_XdmfNDGM_Recv, NULL},
    { SWIG_prefix "XdmfNDGM_BarrierInit", (swig_wrapper_func) _wrap_XdmfNDGM_BarrierInit, NULL},
    { SWIG_prefix "XdmfNDGM_BarrierWait", (swig_wrapper_func) _wrap_XdmfNDGM_BarrierWait, NULL},
    { SWIG_prefix "XdmfNDGM_BarrierAudit", (swig_wrapper_func) _wrap_XdmfNDGM_BarrierAudit, NULL},
    { SWIG_prefix "XdmfNDGM_BarrierPoll", (swig_wrapper_func) _wrap_XdmfNDGM_BarrierPoll, NULL},
    { SWIG_prefix "XdmfNDGM", (swig_wrapper_func) SWIG_ObjectConstructor, &_wrap_class_XdmfNDGM},
    { SWIG_prefix "XdmfGetNdgmEntries", (swig_wrapper_func) _wrap_XdmfGetNdgmEntries, NULL},
    { SWIG_prefix "XdmfDeleteAllNdgmEntries", (swig_wrapper_func) _wrap_XdmfDeleteAllNdgmEntries, NULL},
    { SWIG_prefix "XdmfAddNdgmEntry", (swig_wrapper_func) _wrap_XdmfAddNdgmEntry, NULL},
    {0, 0, 0}
};

static swig_var_info swig_variables[] = {
    {0,0,0,0}
};

static swig_const_info swig_constants[] = {
{ SWIG_TCL_INT,     (char *)"SIZEOF_LONG_LONG", (long) 8, 0, 0, 0},
{ SWIG_TCL_STRING,  (char*)"ICE_SYSTEM", 0, 0, (void *)"Linux", 0},
{ SWIG_TCL_STRING,  (char*)"ICE_MACHINE_TYPE", 0, 0, (void *)"Linux", 0},
{ SWIG_TCL_INT,     (char *)"ICE_TRUE", (long) 1, 0, 0, 0},
{ SWIG_TCL_INT,     (char *)"ICE_FALSE", (long) 0, 0, 0, 0},
{ SWIG_TCL_INT,     (char *)"ICE_SUCCESS", (long) 1, 0, 0, 0},
{ SWIG_TCL_INT,     (char *)"ICE_FAIL", (long) -1, 0, 0, 0},
{ SWIG_TCL_INT,     (char *)"ICE_CHAR_TYPE", (long) 1, 0, 0, 0},
{ SWIG_TCL_INT,     (char *)"ICE_8_INT_TYPE", (long) 2, 0, 0, 0},
{ SWIG_TCL_INT,     (char *)"ICE_32_INT_TYPE", (long) 3, 0, 0, 0},
{ SWIG_TCL_INT,     (char *)"ICE_64_INT_TYPE", (long) 4, 0, 0, 0},
{ SWIG_TCL_INT,     (char *)"ICE_FLOAT_TYPE", (long) 5, 0, 0, 0},
{ SWIG_TCL_INT,     (char *)"ICE_DOUBLE_TYPE", (long) 6, 0, 0, 0},
{ SWIG_TCL_INT,     (char *)"XDMF_SUCCESS", (long) 1, 0, 0, 0},
{ SWIG_TCL_INT,     (char *)"XDMF_FAIL", (long) -1, 0, 0, 0},
{ SWIG_TCL_INT,     (char *)"XDMF_TRUE", (long) 1, 0, 0, 0},
{ SWIG_TCL_INT,     (char *)"XDMF_FALSE", (long) 0, 0, 0, 0},
{ SWIG_TCL_INT,     (char *)"XDMF_MAX_DIMENSION", (long) 10, 0, 0, 0},
{ SWIG_TCL_INT,     (char *)"XDMF_MAX_STRING_LENGTH", (long) 256, 0, 0, 0},
{ SWIG_TCL_INT,     (char *)"XDMF_DEFAULT_INDEX", (long) -1, 0, 0, 0},
{ SWIG_TCL_INT,     (char *)"XDMF_SELECT_SLAB", (long) 1, 0, 0, 0},
{ SWIG_TCL_INT,     (char *)"XDMF_SELECT_INDEX", (long) 2, 0, 0, 0},
{ SWIG_TCL_INT,     (char *)"XDMF_INT8_TYPE", (long) 1, 0, 0, 0},
{ SWIG_TCL_INT,     (char *)"XDMF_INT32_TYPE", (long) 2, 0, 0, 0},
{ SWIG_TCL_INT,     (char *)"XDMF_INT64_TYPE", (long) 3, 0, 0, 0},
{ SWIG_TCL_INT,     (char *)"XDMF_FLOAT32_TYPE", (long) 4, 0, 0, 0},
{ SWIG_TCL_INT,     (char *)"XDMF_FLOAT64_TYPE", (long) 5, 0, 0, 0},
{ SWIG_TCL_INT,     (char *)"XDMF_COMPOUND_TYPE", (long) 0x10, 0, 0, 0},
{ SWIG_TCL_INT,     (char *)"XDMF_SELECTALL", (long) 0, 0, 0, 0},
{ SWIG_TCL_INT,     (char *)"XDMF_HYPERSLAB", (long) 1, 0, 0, 0},
{ SWIG_TCL_INT,     (char *)"XDMF_COORDINATES", (long) 2, 0, 0, 0},
{ SWIG_TCL_INT,     (char *)"XDMF_ARRAY_TAG_LENGTH", (long) 80, 0, 0, 0},
{ SWIG_TCL_INT,     (char *)"XDMF_ATTRIBUTE_TYPE_NONE", (long) 0, 0, 0, 0},
{ SWIG_TCL_INT,     (char *)"XDMF_ATTRIBUTE_TYPE_SCALAR", (long) 1, 0, 0, 0},
{ SWIG_TCL_INT,     (char *)"XDMF_ATTRIBUTE_TYPE_VECTOR", (long) 2, 0, 0, 0},
{ SWIG_TCL_INT,     (char *)"XDMF_ATTRIBUTE_TYPE_TENSOR", (long) 3, 0, 0, 0},
{ SWIG_TCL_INT,     (char *)"XDMF_ATTRIBUTE_TYPE_MATRIX", (long) 4, 0, 0, 0},
{ SWIG_TCL_INT,     (char *)"XDMF_ATTRIBUTE_CENTER_GRID", (long) 0, 0, 0, 0},
{ SWIG_TCL_INT,     (char *)"XDMF_ATTRIBUTE_CENTER_CELL", (long) 1, 0, 0, 0},
{ SWIG_TCL_INT,     (char *)"XDMF_ATTRIBUTE_CENTER_FACE", (long) 2, 0, 0, 0},
{ SWIG_TCL_INT,     (char *)"XDMF_ATTRIBUTE_CENTER_EDGE", (long) 3, 0, 0, 0},
{ SWIG_TCL_INT,     (char *)"XDMF_ATTRIBUTE_CENTER_NODE", (long) 4, 0, 0, 0},
{ SWIG_TCL_INT,     (char *)"XDMF_MAX_ORDER", (long) 10, 0, 0, 0},
{ SWIG_TCL_INT,     (char *)"XDMF_STRUCTURED", (long) 0, 0, 0, 0},
{ SWIG_TCL_INT,     (char *)"XDMF_UNSTRUCTURED", (long) 1, 0, 0, 0},
{ SWIG_TCL_INT,     (char *)"XDMF_NOTOPOLOGY", (long) 0, 0, 0, 0},
{ SWIG_TCL_INT,     (char *)"XDMF_POLYVERTEX", (long) 1, 0, 0, 0},
{ SWIG_TCL_INT,     (char *)"XDMF_POLYLINE", (long) 2, 0, 0, 0},
{ SWIG_TCL_INT,     (char *)"XDMF_POLYGON", (long) 3, 0, 0, 0},
{ SWIG_TCL_INT,     (char *)"XDMF_TRI", (long) 4, 0, 0, 0},
{ SWIG_TCL_INT,     (char *)"XDMF_QUAD", (long) 5, 0, 0, 0},
{ SWIG_TCL_INT,     (char *)"XDMF_TET", (long) 6, 0, 0, 0},
{ SWIG_TCL_INT,     (char *)"XDMF_PYRAMID", (long) 7, 0, 0, 0},
{ SWIG_TCL_INT,     (char *)"XDMF_WEDGE", (long) 8, 0, 0, 0},
{ SWIG_TCL_INT,     (char *)"XDMF_HEX", (long) 9, 0, 0, 0},
{ SWIG_TCL_INT,     (char *)"XDMF_2DSMESH", (long) 0x0100, 0, 0, 0},
{ SWIG_TCL_INT,     (char *)"XDMF_2DRECTMESH", (long) 0x0101, 0, 0, 0},
{ SWIG_TCL_INT,     (char *)"XDMF_2DCORECTMESH", (long) 0x0102, 0, 0, 0},
{ SWIG_TCL_INT,     (char *)"XDMF_3DSMESH", (long) 0x1100, 0, 0, 0},
{ SWIG_TCL_INT,     (char *)"XDMF_3DRECTMESH", (long) 0x1101, 0, 0, 0},
{ SWIG_TCL_INT,     (char *)"XDMF_3DCORECTMESH", (long) 0x1102, 0, 0, 0},
{ SWIG_TCL_INT,     (char *)"XDMF_GEOMETRY_NONE", (long) 0, 0, 0, 0},
{ SWIG_TCL_INT,     (char *)"XDMF_GEOMETRY_XYZ", (long) 1, 0, 0, 0},
{ SWIG_TCL_INT,     (char *)"XDMF_GEOMETRY_XY", (long) 2, 0, 0, 0},
{ SWIG_TCL_INT,     (char *)"XDMF_GEOMETRY_X_Y_Z", (long) 3, 0, 0, 0},
{ SWIG_TCL_INT,     (char *)"XDMF_GEOMETRY_VXVYVZ", (long) 4, 0, 0, 0},
{ SWIG_TCL_INT,     (char *)"XDMF_GEOMETRY_ORIGIN_DXDYDZ", (long) 5, 0, 0, 0},
{ SWIG_TCL_INT,     (char *)"XDMF_H5_OTHER", (long) 0xFF, 0, 0, 0},
{ SWIG_TCL_INT,     (char *)"XDMF_PARAMETER_RANGE_TYPE", (long) 1, 0, 0, 0},
{ SWIG_TCL_INT,     (char *)"XDMF_PARAMETER_LIST_TYPE", (long) 2, 0, 0, 0},
{ SWIG_TCL_INT,     (char *)"XDMF_NDGM_MSG_SERVER", (long) 0, 0, 0, 0},
{ SWIG_TCL_INT,     (char *)"XDMF_NDGM_MSG_CLIENT", (long) 1, 0, 0, 0},
{ SWIG_TCL_INT,     (char *)"XDMF_NDGM_CLIENT", (long) 2, 0, 0, 0},
    {0,0,0,0,0,0}
};

/* -------- TYPE CONVERSION AND EQUIVALENCE RULES (BEGIN) -------- */

static void *_p_XdmfGridTo_p_XdmfTopology(void *x) {
    return (void *)((XdmfTopology *)  ((XdmfGrid *) x));
}
static void *_p_XdmfCharArrayTo_p_XdmfArray(void *x) {
    return (void *)((XdmfArray *)  ((XdmfCharArray *) x));
}
static void *_p_XdmfLightDataTo_p_XdmfObject(void *x) {
    return (void *)((XdmfObject *)  ((XdmfLightData *) x));
}
static void *_p_XdmfTransformTo_p_XdmfObject(void *x) {
    return (void *)((XdmfObject *) (XdmfLightData *) ((XdmfTransform *) x));
}
static void *_p_XdmfDOMTo_p_XdmfObject(void *x) {
    return (void *)((XdmfObject *)  ((XdmfDOM *) x));
}
static void *_p_XdmfFormatHDFTo_p_XdmfObject(void *x) {
    return (void *)((XdmfObject *) (XdmfLightData *)(XdmfFormat *) ((XdmfFormatHDF *) x));
}
static void *_p_XdmfParameterTo_p_XdmfObject(void *x) {
    return (void *)((XdmfObject *)  ((XdmfParameter *) x));
}
static void *_p_XdmfFormatXMLTo_p_XdmfObject(void *x) {
    return (void *)((XdmfObject *) (XdmfLightData *)(XdmfFormat *) ((XdmfFormatXML *) x));
}
static void *_p_XdmfXNodeTo_p_XdmfObject(void *x) {
    return (void *)((XdmfObject *)  ((XdmfXNode *) x));
}
static void *_p_XdmfCharArrayTo_p_XdmfObject(void *x) {
    return (void *)((XdmfObject *) (XdmfDataDesc *)(XdmfArray *) ((XdmfCharArray *) x));
}
static void *_p_XdmfGridTo_p_XdmfObject(void *x) {
    return (void *)((XdmfObject *) (XdmfLightData *)(XdmfTopology *) ((XdmfGrid *) x));
}
static void *_p_XdmfHeavyDataTo_p_XdmfObject(void *x) {
    return (void *)((XdmfObject *) (XdmfDataDesc *) ((XdmfHeavyData *) x));
}
static void *_p_XdmfAttributeTo_p_XdmfObject(void *x) {
    return (void *)((XdmfObject *) (XdmfLightData *) ((XdmfAttribute *) x));
}
static void *_p_XdmfFormatTo_p_XdmfObject(void *x) {
    return (void *)((XdmfObject *) (XdmfLightData *) ((XdmfFormat *) x));
}
static void *_p_XdmfTopologyTo_p_XdmfObject(void *x) {
    return (void *)((XdmfObject *) (XdmfLightData *) ((XdmfTopology *) x));
}
static void *_p_XdmfFormatMultiTo_p_XdmfObject(void *x) {
    return (void *)((XdmfObject *) (XdmfLightData *)(XdmfFormat *) ((XdmfFormatMulti *) x));
}
static void *_p_XdmfDataDescTo_p_XdmfObject(void *x) {
    return (void *)((XdmfObject *)  ((XdmfDataDesc *) x));
}
static void *_p_XdmfArrayTo_p_XdmfObject(void *x) {
    return (void *)((XdmfObject *) (XdmfDataDesc *) ((XdmfArray *) x));
}
static void *_p_XdmfNDGMTo_p_XdmfObject(void *x) {
    return (void *)((XdmfObject *) (XdmfDataDesc *) ((XdmfNDGM *) x));
}
static void *_p_XdmfGeometryTo_p_XdmfObject(void *x) {
    return (void *)((XdmfObject *) (XdmfLightData *) ((XdmfGeometry *) x));
}
static void *_p_XdmfHDFTo_p_XdmfObject(void *x) {
    return (void *)((XdmfObject *) (XdmfDataDesc *)(XdmfHeavyData *) ((XdmfHDF *) x));
}
static void *_p_XdmfGridTo_p_XdmfLightData(void *x) {
    return (void *)((XdmfLightData *) (XdmfTopology *) ((XdmfGrid *) x));
}
static void *_p_XdmfFormatHDFTo_p_XdmfLightData(void *x) {
    return (void *)((XdmfLightData *) (XdmfFormat *) ((XdmfFormatHDF *) x));
}
static void *_p_XdmfTopologyTo_p_XdmfLightData(void *x) {
    return (void *)((XdmfLightData *)  ((XdmfTopology *) x));
}
static void *_p_XdmfAttributeTo_p_XdmfLightData(void *x) {
    return (void *)((XdmfLightData *)  ((XdmfAttribute *) x));
}
static void *_p_XdmfFormatTo_p_XdmfLightData(void *x) {
    return (void *)((XdmfLightData *)  ((XdmfFormat *) x));
}
static void *_p_XdmfFormatMultiTo_p_XdmfLightData(void *x) {
    return (void *)((XdmfLightData *) (XdmfFormat *) ((XdmfFormatMulti *) x));
}
static void *_p_XdmfGeometryTo_p_XdmfLightData(void *x) {
    return (void *)((XdmfLightData *)  ((XdmfGeometry *) x));
}
static void *_p_XdmfTransformTo_p_XdmfLightData(void *x) {
    return (void *)((XdmfLightData *)  ((XdmfTransform *) x));
}
static void *_p_XdmfFormatXMLTo_p_XdmfLightData(void *x) {
    return (void *)((XdmfLightData *) (XdmfFormat *) ((XdmfFormatXML *) x));
}
static void *_p_XdmfHDFTo_p_XdmfHeavyData(void *x) {
    return (void *)((XdmfHeavyData *)  ((XdmfHDF *) x));
}
static void *_p_XdmfFormatHDFTo_p_XdmfFormat(void *x) {
    return (void *)((XdmfFormat *)  ((XdmfFormatHDF *) x));
}
static void *_p_XdmfFormatMultiTo_p_XdmfFormat(void *x) {
    return (void *)((XdmfFormat *)  ((XdmfFormatMulti *) x));
}
static void *_p_XdmfFormatXMLTo_p_XdmfFormat(void *x) {
    return (void *)((XdmfFormat *)  ((XdmfFormatXML *) x));
}
static void *_p_XdmfHeavyDataTo_p_XdmfDataDesc(void *x) {
    return (void *)((XdmfDataDesc *)  ((XdmfHeavyData *) x));
}
static void *_p_XdmfNDGMTo_p_XdmfDataDesc(void *x) {
    return (void *)((XdmfDataDesc *)  ((XdmfNDGM *) x));
}
static void *_p_XdmfArrayTo_p_XdmfDataDesc(void *x) {
    return (void *)((XdmfDataDesc *)  ((XdmfArray *) x));
}
static void *_p_XdmfHDFTo_p_XdmfDataDesc(void *x) {
    return (void *)((XdmfDataDesc *) (XdmfHeavyData *) ((XdmfHDF *) x));
}
static void *_p_XdmfCharArrayTo_p_XdmfDataDesc(void *x) {
    return (void *)((XdmfDataDesc *) (XdmfArray *) ((XdmfCharArray *) x));
}
static swig_type_info _swigt__p_XdmfFormatXML[] = {{"_p_XdmfFormatXML", 0, "XdmfFormatXML *", &_wrap_class_XdmfFormatXML},{"_p_XdmfFormatXML"},{0}};
static swig_type_info _swigt__p_XdmfTransform[] = {{"_p_XdmfTransform", 0, "XdmfTransform *", &_wrap_class_XdmfTransform},{"_p_XdmfTransform"},{0}};
static swig_type_info _swigt__p_XdmfTopology[] = {{"_p_XdmfTopology", 0, "XdmfTopology *", &_wrap_class_XdmfTopology},{"_p_XdmfGrid", _p_XdmfGridTo_p_XdmfTopology},{"_p_XdmfTopology"},{0}};
static swig_type_info _swigt__p_XdmfInt64[] = {{"_p_XdmfInt64", 0, "XdmfInt64 *", 0},{"_p_XdmfLength"},{"_p_XdmfInt64"},{0}};
static swig_type_info _swigt__p_XdmfNDGM[] = {{"_p_XdmfNDGM", 0, "XdmfNDGM *", &_wrap_class_XdmfNDGM},{"_p_XdmfNDGM"},{0}};
static swig_type_info _swigt__XdmfPointer[] = {{"_XdmfPointer", 0, "XdmfPointer", 0},{"_XdmfPointer"},{"_p_void"},{0}};
static swig_type_info _swigt__p_void[] = {{"_p_void", 0, "void *", 0},{"_XdmfPointer"},{"_p_void"},{0}};
static swig_type_info _swigt__p_XdmfArray[] = {{"_p_XdmfArray", 0, "XdmfArray *", &_wrap_class_XdmfArray},{"_p_XdmfArray"},{"_p_XdmfCharArray", _p_XdmfCharArrayTo_p_XdmfArray},{0}};
static swig_type_info _swigt__p_XDMF_TREE_NODE[] = {{"_p_XDMF_TREE_NODE", 0, "XDMF_TREE_NODE *", 0},{"_p_XDMF_TREE_NODE"},{0}};
static swig_type_info _swigt__p_XdmfFormatHDF[] = {{"_p_XdmfFormatHDF", 0, "XdmfFormatHDF *", &_wrap_class_XdmfFormatHDF},{"_p_XdmfFormatHDF"},{0}};
static swig_type_info _swigt__p_XdmfGeometry[] = {{"_p_XdmfGeometry", 0, "XdmfGeometry *", &_wrap_class_XdmfGeometry},{"_p_XdmfGeometry"},{0}};
static swig_type_info _swigt__p_XdmfFormatMulti[] = {{"_p_XdmfFormatMulti", 0, "XdmfFormatMulti *", &_wrap_class_XdmfFormatMulti},{"_p_XdmfFormatMulti"},{0}};
static swig_type_info _swigt__p_XdmfObject[] = {{"_p_XdmfObject", 0, "XdmfObject *", &_wrap_class_XdmfObject},{"_p_XdmfTransform", _p_XdmfTransformTo_p_XdmfObject},{"_p_XdmfLightData", _p_XdmfLightDataTo_p_XdmfObject},{"_p_XdmfDOM", _p_XdmfDOMTo_p_XdmfObject},{"_p_XdmfObject"},{"_p_XdmfParameter", _p_XdmfParameterTo_p_XdmfObject},{"_p_XdmfFormatHDF", _p_XdmfFormatHDFTo_p_XdmfObject},{"_p_XdmfFormatXML", _p_XdmfFormatXMLTo_p_XdmfObject},{"_p_XdmfXNode", _p_XdmfXNodeTo_p_XdmfObject},{"_p_XdmfCharArray", _p_XdmfCharArrayTo_p_XdmfObject},{"_p_XdmfGrid", _p_XdmfGridTo_p_XdmfObject},{"_p_XdmfHeavyData", _p_XdmfHeavyDataTo_p_XdmfObject},{"_p_XdmfAttribute", _p_XdmfAttributeTo_p_XdmfObject},{"_p_XdmfFormat", _p_XdmfFormatTo_p_XdmfObject},{"_p_XdmfTopology", _p_XdmfTopologyTo_p_XdmfObject},{"_p_XdmfFormatMulti", _p_XdmfFormatMultiTo_p_XdmfObject},{"_p_XdmfDataDesc", _p_XdmfDataDescTo_p_XdmfObject},{"_p_XdmfNDGM", _p_XdmfNDGMTo_p_XdmfObject},{"_p_XdmfArray", _p_XdmfArrayTo_p_XdmfObject},{"_p_XdmfGeometry", _p_XdmfGeometryTo_p_XdmfObject},{"_p_XdmfHDF", _p_XdmfHDFTo_p_XdmfObject},{0}};
static swig_type_info _swigt__p_XdmfHDF[] = {{"_p_XdmfHDF", 0, "XdmfHDF *", &_wrap_class_XdmfHDF},{"_p_XdmfHDF"},{0}};
static swig_type_info _swigt__p_XdmfXNode[] = {{"_p_XdmfXNode", 0, "XdmfXNode *", &_wrap_class_XdmfXNode},{"_p_XdmfXNode"},{0}};
static swig_type_info _swigt__p_XdmfDOM[] = {{"_p_XdmfDOM", 0, "XdmfDOM *", &_wrap_class_XdmfDOM},{"_p_XdmfDOM"},{0}};
static swig_type_info _swigt__p_XdmfArrayList[] = {{"_p_XdmfArrayList", 0, "XdmfArrayList *", &_wrap_class_XdmfArrayList},{"_p_XdmfArrayList"},{0}};
static swig_type_info _swigt__p_XdmfLightData[] = {{"_p_XdmfLightData", 0, "XdmfLightData *", &_wrap_class_XdmfLightData},{"_p_XdmfLightData"},{"_p_XdmfGrid", _p_XdmfGridTo_p_XdmfLightData},{"_p_XdmfFormatHDF", _p_XdmfFormatHDFTo_p_XdmfLightData},{"_p_XdmfTopology", _p_XdmfTopologyTo_p_XdmfLightData},{"_p_XdmfAttribute", _p_XdmfAttributeTo_p_XdmfLightData},{"_p_XdmfFormat", _p_XdmfFormatTo_p_XdmfLightData},{"_p_XdmfFormatMulti", _p_XdmfFormatMultiTo_p_XdmfLightData},{"_p_XdmfGeometry", _p_XdmfGeometryTo_p_XdmfLightData},{"_p_XdmfTransform", _p_XdmfTransformTo_p_XdmfLightData},{"_p_XdmfFormatXML", _p_XdmfFormatXMLTo_p_XdmfLightData},{0}};
static swig_type_info _swigt__p_XdmfInt32[] = {{"_p_XdmfInt32", 0, "XdmfInt32 *", 0},{"_p_XdmfInt32"},{0}};
static swig_type_info _swigt__p_XdmfHeavyData[] = {{"_p_XdmfHeavyData", 0, "XdmfHeavyData *", &_wrap_class_XdmfHeavyData},{"_p_XdmfHeavyData"},{"_p_XdmfHDF", _p_XdmfHDFTo_p_XdmfHeavyData},{0}};
static swig_type_info _swigt__p_XdmfFloat64[] = {{"_p_XdmfFloat64", 0, "XdmfFloat64 *", 0},{"_p_XdmfFloat64"},{0}};
static swig_type_info _swigt__p_NDGM_NODE[] = {{"_p_NDGM_NODE", 0, "NDGM_NODE *", 0},{"_p_NDGM_NODE"},{0}};
static swig_type_info _swigt__p_hid_t[] = {{"_p_hid_t", 0, "hid_t *", 0},{"_p_hid_t"},{0}};
static swig_type_info _swigt__p_XdmfParameter[] = {{"_p_XdmfParameter", 0, "XdmfParameter *", &_wrap_class_XdmfParameter},{"_p_XdmfParameter"},{0}};
static swig_type_info _swigt__p_istream[] = {{"_p_istream", 0, "istream *", 0},{"_p_istream"},{0}};
static swig_type_info _swigt__p_ostream[] = {{"_p_ostream", 0, "ostream *", 0},{"_p_ostream"},{0}};
static swig_type_info _swigt__p_XdmfLength[] = {{"_p_XdmfLength", 0, "XdmfLength *", 0},{"_p_XdmfLength"},{"_p_XdmfInt64"},{0}};
static swig_type_info _swigt__p_XdmfAttribute[] = {{"_p_XdmfAttribute", 0, "XdmfAttribute *", &_wrap_class_XdmfAttribute},{"_p_XdmfAttribute"},{0}};
static swig_type_info _swigt__p_XdmfCharArray[] = {{"_p_XdmfCharArray", 0, "XdmfCharArray *", &_wrap_class_XdmfCharArray},{"_p_XdmfCharArray"},{0}};
static swig_type_info _swigt__p_XdmfFormat[] = {{"_p_XdmfFormat", 0, "XdmfFormat *", &_wrap_class_XdmfFormat},{"_p_XdmfFormatHDF", _p_XdmfFormatHDFTo_p_XdmfFormat},{"_p_XdmfFormat"},{"_p_XdmfFormatMulti", _p_XdmfFormatMultiTo_p_XdmfFormat},{"_p_XdmfFormatXML", _p_XdmfFormatXMLTo_p_XdmfFormat},{0}};
static swig_type_info _swigt__p_XdmfInt8[] = {{"_p_XdmfInt8", 0, "XdmfInt8 *", 0},{"_p_XdmfInt8"},{0}};
static swig_type_info _swigt__p_long_long[] = {{"_p_long_long", 0, "long long *", 0},{"_p_long_long"},{0}};
static swig_type_info _swigt__p_XdmfFloat32[] = {{"_p_XdmfFloat32", 0, "XdmfFloat32 *", 0},{"_p_XdmfFloat32"},{0}};
static swig_type_info _swigt__p_XdmfDataDesc[] = {{"_p_XdmfDataDesc", 0, "XdmfDataDesc *", &_wrap_class_XdmfDataDesc},{"_p_XdmfHeavyData", _p_XdmfHeavyDataTo_p_XdmfDataDesc},{"_p_XdmfNDGM", _p_XdmfNDGMTo_p_XdmfDataDesc},{"_p_XdmfArray", _p_XdmfArrayTo_p_XdmfDataDesc},{"_p_XdmfDataDesc"},{"_p_XdmfHDF", _p_XdmfHDFTo_p_XdmfDataDesc},{"_p_XdmfCharArray", _p_XdmfCharArrayTo_p_XdmfDataDesc},{0}};
static swig_type_info _swigt__p_istrstream[] = {{"_p_istrstream", 0, "istrstream *", 0},{"_p_istrstream"},{0}};
static swig_type_info _swigt__p_XdmfGrid[] = {{"_p_XdmfGrid", 0, "XdmfGrid *", &_wrap_class_XdmfGrid},{"_p_XdmfGrid"},{0}};

static swig_type_info *swig_types_initial[] = {
_swigt__p_XdmfFormatXML,
_swigt__p_XdmfTransform,
_swigt__p_XdmfTopology,
_swigt__p_XdmfInt64,
_swigt__p_XdmfNDGM,
_swigt__XdmfPointer,
_swigt__p_void,
_swigt__p_XdmfArray,
_swigt__p_XDMF_TREE_NODE,
_swigt__p_XdmfFormatHDF,
_swigt__p_XdmfGeometry,
_swigt__p_XdmfFormatMulti,
_swigt__p_XdmfObject,
_swigt__p_XdmfHDF,
_swigt__p_XdmfXNode,
_swigt__p_XdmfDOM,
_swigt__p_XdmfArrayList,
_swigt__p_XdmfLightData,
_swigt__p_XdmfInt32,
_swigt__p_XdmfHeavyData,
_swigt__p_XdmfFloat64,
_swigt__p_NDGM_NODE,
_swigt__p_hid_t,
_swigt__p_XdmfParameter,
_swigt__p_istream,
_swigt__p_ostream,
_swigt__p_XdmfLength,
_swigt__p_XdmfAttribute,
_swigt__p_XdmfCharArray,
_swigt__p_XdmfFormat,
_swigt__p_XdmfInt8,
_swigt__p_long_long,
_swigt__p_XdmfFloat32,
_swigt__p_XdmfDataDesc,
_swigt__p_istrstream,
_swigt__p_XdmfGrid,
0
};


/* -------- TYPE CONVERSION AND EQUIVALENCE RULES (END) -------- */

#ifdef __cplusplus
}
#endif

SWIGEXPORT(int) SWIG_init(Tcl_Interp *interp) {
    int i;
    static int _init = 0;
    if (interp == 0) return TCL_ERROR;
    #ifdef USE_TCL_STUBS
    if (Tcl_InitStubs(interp, (char*)"8.1", 0) == NULL) {
        return TCL_ERROR;
    }
    #endif

    Tcl_PkgProvide(interp, (char*)SWIG_name, (char*)SWIG_version);

    #ifdef SWIG_namespace
    Tcl_Eval(interp, "namespace eval " SWIG_namespace " { }");
    #endif
    if (!_init) {
        for (i = 0; swig_types_initial[i]; i++) {
            swig_types[i] = SWIG_TypeRegister(swig_types_initial[i]);
        }
        _init = 1;
    }
    for (i = 0; swig_commands[i].name; i++) {
        Tcl_CreateObjCommand(interp, (char *) swig_commands[i].name, (swig_wrapper_func) swig_commands[i].wrapper, swig_commands[i].clientdata, NULL);
    }
    for (i = 0; swig_variables[i].name; i++) {
        Tcl_SetVar(interp, (char *) swig_variables[i].name, (char *) "", TCL_GLOBAL_ONLY);
        Tcl_TraceVar(interp, (char *) swig_variables[i].name, TCL_TRACE_READS | TCL_GLOBAL_ONLY, (Tcl_VarTraceProc *) swig_variables[i].get, (ClientData) swig_variables[i].addr);
        Tcl_TraceVar(interp, (char *) swig_variables[i].name, TCL_TRACE_WRITES | TCL_GLOBAL_ONLY, (Tcl_VarTraceProc *) swig_variables[i].set, (ClientData) swig_variables[i].addr);
    }
    SWIG_InstallConstants(interp, swig_constants);

    return TCL_OK;
}

